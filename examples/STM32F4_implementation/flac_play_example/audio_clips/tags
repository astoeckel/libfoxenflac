AC_RTOS_PRIORITY	../RTOS/rtos_config.h	/^static const int AC_RTOS_PRIORITY = 10;$/;"	v
AC_STACKSIZE	../RTOS/rtos_config.h	/^#define AC_STACKSIZE /;"	d
AHBPrescTable	../Core/Src/system_stm32f4xx.c	/^const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};$/;"	v
APBPrescTable	../Core/Src/system_stm32f4xx.c	/^const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};$/;"	v
AUDCHUNK_TOTAL	../Core/Inc/mem_map.h	/^#define AUDCHUNK_TOTAL /;"	d
AUDIO_AIF_CH_BT	../sub/audio/audio.h	/^static const uint8_t AUDIO_AIF_CH_BT				= 2;$/;"	v
AUDIO_AIF_CH_EXT	../sub/audio/audio.h	/^static const uint8_t AUDIO_AIF_CH_EXT				= 0;$/;"	v
AUDIO_AIF_CH_UC	../sub/audio/audio.h	/^static const uint8_t AUDIO_AIF_CH_UC				= 1;$/;"	v
AUDIO_AIF_DISABLE	../sub/audio/audio.h	/^static const uint16_t AUDIO_AIF_DISABLE				= 0x0000;$/;"	v
AUDIO_AIF_ENABLE	../sub/audio/audio.h	/^static const uint16_t AUDIO_AIF_ENABLE				= 0x0002;$/;"	v
AUDIO_AIF_JUMP	../sub/audio/audio.h	/^static const uint16_t AUDIO_AIF_JUMP	       		= 0x0040;$/;"	v
AUDIO_AIF_RX_START	../sub/audio/audio.h	/^static const uint16_t AUDIO_AIF_RX_START       		= 0x051A;$/;"	v
AUDIO_AIF_TX_START	../sub/audio/audio.h	/^static const uint16_t AUDIO_AIF_TX_START       		= 0x0519;$/;"	v
AUDIO_AUDIO_H_	../sub/audio/audio.h	/^#define AUDIO_AUDIO_H_$/;"	d
AUDIO_AUDIO_MEM_H_	../sub/audio/audio_mem.h	/^#define AUDIO_AUDIO_MEM_H_$/;"	d
AUDIO_AUDIO_MEM_H_	unit_test/mocks/include/audio_mem.h	/^#define AUDIO_AUDIO_MEM_H_$/;"	d
AUDIO_CFG_CLK	../sub/audio/audio_config.c	/^static const AudMemReg AUDIO_CFG_CLK[AUDIO_CFG_CLK_SZ] = {$/;"	v	file:
AUDIO_CFG_CLKDIS	../sub/audio/audio_config.c	/^static const AudMemReg AUDIO_CFG_CLKDIS[AUDIO_CFG_CLKDIS_SZ] = {$/;"	v	file:
AUDIO_CFG_CLKDIS_SZ	../sub/audio/audio_config.c	/^#define AUDIO_CFG_CLKDIS_SZ /;"	d	file:
AUDIO_CFG_CLKEN	../sub/audio/audio_config.c	/^static const AudMemReg AUDIO_CFG_CLKEN[AUDIO_CFG_CLKEN_SZ] = {$/;"	v	file:
AUDIO_CFG_CLKEN_SZ	../sub/audio/audio_config.c	/^#define AUDIO_CFG_CLKEN_SZ /;"	d	file:
AUDIO_CFG_CLK_SZ	../sub/audio/audio_config.c	/^#define AUDIO_CFG_CLK_SZ /;"	d	file:
AUDIO_CFG_INIT	../sub/audio/audio_config.c	/^static const AudMemReg AUDIO_CFG_INIT[AUDIO_CFG_INIT_SZ] = {$/;"	v	file:
AUDIO_CFG_INIT_SZ	../sub/audio/audio_config.c	/^#define AUDIO_CFG_INIT_SZ /;"	d	file:
AUDIO_CFG_MIC	../sub/audio/audio_config.c	/^static const AudMemReg AUDIO_CFG_MIC[AUDIO_CFG_MIC_SZ] = {$/;"	v	file:
AUDIO_CFG_MIC_SZ	../sub/audio/audio_config.c	/^#define AUDIO_CFG_MIC_SZ /;"	d	file:
AUDIO_CFG_PROC	../sub/audio/audio_config.c	/^static const AudMemReg AUDIO_CFG_PROC[AUDIO_CFG_PROC_SZ] = {$/;"	v	file:
AUDIO_CFG_PROC_SZ	../sub/audio/audio_config.c	/^#define AUDIO_CFG_PROC_SZ /;"	d	file:
AUDIO_CFG_ROUTE	../sub/audio/audio_config.c	/^static const AudMemReg AUDIO_CFG_ROUTE[AUDIO_CFG_ROUTE_SZ] = {$/;"	v	file:
AUDIO_CFG_ROUTE_SZ	../sub/audio/audio_config.c	/^#define AUDIO_CFG_ROUTE_SZ /;"	d	file:
AUDIO_CFG_RST	../sub/audio/audio_config.c	/^static const AudMemReg AUDIO_CFG_RST[AUDIO_CFG_RST_SZ] = {$/;"	v	file:
AUDIO_CFG_RST_SZ	../sub/audio/audio_config.c	/^#define AUDIO_CFG_RST_SZ /;"	d	file:
AUDIO_CFG_SPK	../sub/audio/audio_config.c	/^static const AudMemReg AUDIO_CFG_SPK[AUDIO_CFG_SPK_SZ] = {$/;"	v	file:
AUDIO_CFG_SPK_SZ	../sub/audio/audio_config.c	/^#define AUDIO_CFG_SPK_SZ /;"	d	file:
AUDIO_CLIPS_NUMBER	clip_handler/clip_handler.c	/^#define AUDIO_CLIPS_NUMBER /;"	d	file:
AUDIO_DSP_32BIT_START	../sub/audio/audio_mem.h	/^static const uint32_t AUDIO_DSP_32BIT_START  = 0x3000;$/;"	v
AUDIO_DSP_32BIT_START	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUDIO_DSP_32BIT_START  = 0x3000;$/;"	v
AUDIO_DSP_CONFIG1_ADDR	../sub/audio/audio.h	/^static const uint32_t AUDIO_DSP_CONFIG1_ADDR        = 0xFFE00;$/;"	v
AUDIO_DSP_CONFIG1_COREENABLE	../sub/audio/audio.h	/^static const uint32_t AUDIO_DSP_CONFIG1_COREENABLE  = 0x00000012;$/;"	v
AUDIO_DSP_CONFIG1_MEMEN	../sub/audio/audio.h	/^static const uint32_t AUDIO_DSP_CONFIG1_MEMEN       = 0x00000010;$/;"	v
AUDIO_DSP_CONFIG1_START	../sub/audio/audio.h	/^static const uint32_t AUDIO_DSP_CONFIG1_START       = 0x00000013;$/;"	v
AUDIO_DSP_CORES_MAX	../sub/audio/audio_mem.h	/^#define AUDIO_DSP_CORES_MAX /;"	d
AUDIO_DSP_CORES_MAX	unit_test/mocks/include/audio_mem.h	/^#define AUDIO_DSP_CORES_MAX /;"	d
AUDIO_DSP_STATUS3_FREQSTS	../sub/audio/audio.h	/^static const uint32_t AUDIO_DSP_STATUS3_FREQSTS     = 0xFFE08;$/;"	v
AUDIO_SPIBUFF_BYTESZ	../sub/audio/audio_mem.h	/^static const uint32_t AUDIO_SPIBUFF_BYTESZ = CS_SPI_WBYTEMAX - (CS_SPI_WBYTEMAX % sizeof(uint32_t));$/;"	v
AUDIO_SPIBUFF_BYTESZ	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUDIO_SPIBUFF_BYTESZ = CS_SPI_WBYTEMAX - (CS_SPI_WBYTEMAX % sizeof(uint32_t));$/;"	v
AUDIO_SPIBUFF_HEADERBYTESZ	../sub/audio/audio_mem.h	/^static const uint32_t AUDIO_SPIBUFF_HEADERBYTESZ = CS_SPI_HEADERSZ * sizeof(uint16_t);$/;"	v
AUDIO_SPIBUFF_HEADERBYTESZ	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUDIO_SPIBUFF_HEADERBYTESZ = CS_SPI_HEADERSZ * sizeof(uint16_t);$/;"	v
AUDIO_SPIBUFF_HEADERWORDSZ	../sub/audio/audio_mem.h	/^static const uint32_t AUDIO_SPIBUFF_HEADERWORDSZ = (CS_SPI_HEADERSZ * sizeof(uint16_t)) >> 1;$/;"	v
AUDIO_SPIBUFF_HEADERWORDSZ	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUDIO_SPIBUFF_HEADERWORDSZ = (CS_SPI_HEADERSZ * sizeof(uint16_t)) >> 1;$/;"	v
AUDIO_SPI_BUFF_WORDSZ	../sub/audio/audio_mem.h	/^static const uint32_t AUDIO_SPI_BUFF_WORDSZ = (CS_SPI_WBYTEMAX - (CS_SPI_WBYTEMAX % sizeof(uint32_t))) >> 1;$/;"	v
AUDIO_SPI_BUFF_WORDSZ	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUDIO_SPI_BUFF_WORDSZ = (CS_SPI_WBYTEMAX - (CS_SPI_WBYTEMAX % sizeof(uint32_t))) >> 1;$/;"	v
AUDIO_SPI_RETRIES	../sub/audio/audio_mem.h	/^static const uint32_t AUDIO_SPI_RETRIES     = 3;$/;"	v
AUDIO_SPI_RETRIES	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUDIO_SPI_RETRIES     = 3;$/;"	v
AUDMAP_CHUNK	../Core/Inc/mem_map.h	/^static const MemChunk AUDMAP_CHUNK[AUDCHUNK_TOTAL] =$/;"	v
AUDMEMREG_HEADER_SZ	../sub/audio/audio_mem.h	/^static const uint8_t AUDMEMREG_HEADER_SZ = 2;$/;"	v
AUDMEMREG_HEADER_SZ	unit_test/mocks/include/audio_mem.h	/^static const uint8_t AUDMEMREG_HEADER_SZ = 2;$/;"	v
AUDMEM_BADDATA	../sub/audio/audio_mem.h	/^    AUDMEM_BADDATA,$/;"	e	enum:__anon14
AUDMEM_BADDATA	unit_test/mocks/include/audio_mem.h	/^    AUDMEM_BADDATA,$/;"	e	enum:__anon3
AUDMEM_MEMFAIL	../sub/audio/audio_mem.h	/^    AUDMEM_MEMFAIL,$/;"	e	enum:__anon14
AUDMEM_MEMFAIL	unit_test/mocks/include/audio_mem.h	/^    AUDMEM_MEMFAIL,$/;"	e	enum:__anon3
AUDMEM_NOELEM	../sub/audio/audio_mem.h	/^    AUDMEM_NOELEM,$/;"	e	enum:__anon14
AUDMEM_NOELEM	unit_test/mocks/include/audio_mem.h	/^    AUDMEM_NOELEM,$/;"	e	enum:__anon3
AUDMEM_READBACKFAIL	../sub/audio/audio_mem.h	/^    AUDMEM_READBACKFAIL$/;"	e	enum:__anon14
AUDMEM_READBACKFAIL	unit_test/mocks/include/audio_mem.h	/^    AUDMEM_READBACKFAIL$/;"	e	enum:__anon3
AUDMEM_SPIR_FAIL	../sub/audio/audio_mem.h	/^    AUDMEM_SPIR_FAIL,$/;"	e	enum:__anon14
AUDMEM_SPIR_FAIL	unit_test/mocks/include/audio_mem.h	/^    AUDMEM_SPIR_FAIL,$/;"	e	enum:__anon3
AUDMEM_SPIW_FAIL	../sub/audio/audio_mem.h	/^    AUDMEM_SPIW_FAIL,$/;"	e	enum:__anon14
AUDMEM_SPIW_FAIL	unit_test/mocks/include/audio_mem.h	/^    AUDMEM_SPIW_FAIL,$/;"	e	enum:__anon3
AUDMEM_SUCCESS	../sub/audio/audio_mem.h	/^    AUDMEM_SUCCESS = 0,$/;"	e	enum:__anon14
AUDMEM_SUCCESS	unit_test/mocks/include/audio_mem.h	/^    AUDMEM_SUCCESS = 0,$/;"	e	enum:__anon3
AUDP_BAT10	../statemachine/statemachine_types.h	/^	AUDP_BAT10,$/;"	e	enum:__anon4
AUDP_BAT100	../statemachine/statemachine_types.h	/^	AUDP_BAT100,$/;"	e	enum:__anon4
AUDP_BAT20	../statemachine/statemachine_types.h	/^	AUDP_BAT20,$/;"	e	enum:__anon4
AUDP_BAT30	../statemachine/statemachine_types.h	/^	AUDP_BAT30,$/;"	e	enum:__anon4
AUDP_BAT40	../statemachine/statemachine_types.h	/^	AUDP_BAT40,$/;"	e	enum:__anon4
AUDP_BAT50	../statemachine/statemachine_types.h	/^	AUDP_BAT50,$/;"	e	enum:__anon4
AUDP_BAT60	../statemachine/statemachine_types.h	/^	AUDP_BAT60,$/;"	e	enum:__anon4
AUDP_BAT70	../statemachine/statemachine_types.h	/^	AUDP_BAT70,$/;"	e	enum:__anon4
AUDP_BAT80	../statemachine/statemachine_types.h	/^	AUDP_BAT80,$/;"	e	enum:__anon4
AUDP_BAT90	../statemachine/statemachine_types.h	/^	AUDP_BAT90,$/;"	e	enum:__anon4
AUDP_BATCRITICAL	../statemachine/statemachine_types.h	/^	AUDP_BATCRITICAL,$/;"	e	enum:__anon4
AUDP_BATLOW	../statemachine/statemachine_types.h	/^	AUDP_BATLOW,$/;"	e	enum:__anon4
AUDP_BTOFF	../statemachine/statemachine_types.h	/^	AUDP_BTOFF,$/;"	e	enum:__anon4
AUDP_BTON	../statemachine/statemachine_types.h	/^	AUDP_BTON,$/;"	e	enum:__anon4
AUDP_BTPAIR	../statemachine/statemachine_types.h	/^	AUDP_BTPAIR,$/;"	e	enum:__anon4
AUDP_FR	../statemachine/statemachine_types.h	/^	AUDP_FR,$/;"	e	enum:__anon4
AUDP_MAX_VAL	../statemachine/statemachine_types.h	/^  AUDP_MAX_VAL,$/;"	e	enum:__anon4
AUDP_STARTUP	../statemachine/statemachine_types.h	/^	AUDP_STARTUP = 0,$/;"	e	enum:__anon4
AUD_BOOT_DONE	../sub/audio/audio_mem.h	/^static const uint8_t AUD_BOOT_DONE = 1;$/;"	v
AUD_BOOT_DONE	unit_test/mocks/include/audio_mem.h	/^static const uint8_t AUD_BOOT_DONE = 1;$/;"	v
AUD_BOOT_INPROGRESS	../sub/audio/audio_mem.h	/^static const uint8_t AUD_BOOT_INPROGRESS = 0;$/;"	v
AUD_BOOT_INPROGRESS	unit_test/mocks/include/audio_mem.h	/^static const uint8_t AUD_BOOT_INPROGRESS = 0;$/;"	v
AUD_BUFF_SZ	../sub/audio/audio_types.h	/^#define AUD_BUFF_SZ	/;"	d
AUD_DSPCFG_MEMELEM_INDEX	../sub/audio/audio_mem.h	/^static const uint16_t AUD_DSPCFG_MEMELEM_INDEX = 0;$/;"	v
AUD_DSPCFG_MEMELEM_INDEX	unit_test/mocks/include/audio_mem.h	/^static const uint16_t AUD_DSPCFG_MEMELEM_INDEX = 0;$/;"	v
AUD_DSP_ADDR_JUMP	../sub/audio/audio_mem.h	/^static const uint32_t AUD_DSP_ADDR_JUMP           = 0x80000;$/;"	v
AUD_DSP_ADDR_JUMP	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUD_DSP_ADDR_JUMP           = 0x80000;$/;"	v
AUD_DSP_CFG1_BASE	../sub/audio/audio_mem.h	/^static const uint32_t AUD_DSP_CFG1_BASE           = 0xFFE00;$/;"	v
AUD_DSP_CFG1_BASE	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUD_DSP_CFG1_BASE           = 0xFFE00;$/;"	v
AUD_DSP_CFG1_COREEN	../sub/audio/audio_mem.h	/^static const uint32_t AUD_DSP_CFG1_COREEN         = 0x00000012;$/;"	v
AUD_DSP_CFG1_COREEN	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUD_DSP_CFG1_COREEN         = 0x00000012;$/;"	v
AUD_DSP_CFG1_MEMCLEAR	../sub/audio/audio_mem.h	/^static const uint32_t AUD_DSP_CFG1_MEMCLEAR       = 0x00000000;$/;"	v
AUD_DSP_CFG1_MEMCLEAR	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUD_DSP_CFG1_MEMCLEAR       = 0x00000000;$/;"	v
AUD_DSP_CFG1_MEMEN	../sub/audio/audio_mem.h	/^static const uint32_t AUD_DSP_CFG1_MEMEN          = 0x00000010;$/;"	v
AUD_DSP_CFG1_MEMEN	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUD_DSP_CFG1_MEMEN          = 0x00000010;$/;"	v
AUD_DSP_CFG1_START	../sub/audio/audio_mem.h	/^static const uint32_t AUD_DSP_CFG1_START          = 0x00000013;$/;"	v
AUD_DSP_CFG1_START	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUD_DSP_CFG1_START          = 0x00000013;$/;"	v
AUD_DSP_CFG2_BASE	../sub/audio/audio_mem.h	/^static const uint32_t AUD_DSP_CFG2_BASE           = 0xFFE02;$/;"	v
AUD_DSP_CFG2_BASE	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUD_DSP_CFG2_BASE           = 0xFFE02;$/;"	v
AUD_DSP_CFG2_CLK	../sub/audio/audio_mem.h	/^#define               AUD_DSP_CFG2_CLK /;"	d
AUD_DSP_CFG2_CLK	unit_test/mocks/include/audio_mem.h	/^#define               AUD_DSP_CFG2_CLK /;"	d
AUD_DSP_DMACFG1_BASE	../sub/audio/audio_mem.h	/^static const uint32_t AUD_DSP_DMACFG1_BASE        = 0xFFE30;$/;"	v
AUD_DSP_DMACFG1_BASE	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUD_DSP_DMACFG1_BASE        = 0xFFE30;$/;"	v
AUD_DSP_RDMACFG1_BASE	../sub/audio/audio_mem.h	/^static const uint32_t AUD_DSP_RDMACFG1_BASE       = 0xFFE34;$/;"	v
AUD_DSP_RDMACFG1_BASE	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUD_DSP_RDMACFG1_BASE       = 0xFFE34;$/;"	v
AUD_DSP_STAT2_BASE	../sub/audio/audio_mem.h	/^static const uint32_t AUD_DSP_STAT2_BASE          = 0xFFE06;$/;"	v
AUD_DSP_STAT2_BASE	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUD_DSP_STAT2_BASE          = 0xFFE06;$/;"	v
AUD_DSP_STAT3_BASE	../sub/audio/audio_mem.h	/^static const uint32_t AUD_DSP_STAT3_BASE          = 0xFFE08;$/;"	v
AUD_DSP_STAT3_BASE	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUD_DSP_STAT3_BASE          = 0xFFE08;$/;"	v
AUD_DSP_WDMACFG2_BASE	../sub/audio/audio_mem.h	/^static const uint32_t AUD_DSP_WDMACFG2_BASE       = 0xFFE31;$/;"	v
AUD_DSP_WDMACFG2_BASE	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUD_DSP_WDMACFG2_BASE       = 0xFFE31;$/;"	v
AUD_EQ_MEMELEM_INDEX	../sub/audio/audio_mem.h	/^static const uint16_t AUD_EQ_MEMELEM_INDEX = 4;$/;"	v
AUD_EQ_NUM_CHANNELS	../sub/audio/audio_mem.h	/^#define AUD_EQ_NUM_CHANNELS /;"	d
AUD_INPUTADJ_MEMELEM_INDEX	../sub/audio/audio_mem.h	/^static const uint16_t AUD_INPUTADJ_MEMELEM_INDEX = 2;$/;"	v
AUD_INPUTADJ_MEMELEM_INDEX	unit_test/mocks/include/audio_mem.h	/^static const uint16_t AUD_INPUTADJ_MEMELEM_INDEX = 2;$/;"	v
AUD_INPUTVOL_MEMELEM_INDEX	../sub/audio/audio_mem.h	/^static const uint16_t AUD_INPUTVOL_MEMELEM_INDEX = 0;$/;"	v
AUD_INPUTVOL_MEMELEM_INDEX	unit_test/mocks/include/audio_mem.h	/^static const uint16_t AUD_INPUTVOL_MEMELEM_INDEX = 0;$/;"	v
AUD_INPUT_LHPF_REGBASE	../sub/audio/audio_mem.h	/^static const uint16_t AUD_INPUT_LHPF_REGBASE = 0xEC0;$/;"	v
AUD_INPUT_LHPF_REGBASE	unit_test/mocks/include/audio_mem.h	/^static const uint16_t AUD_INPUT_LHPF_REGBASE = 0xEC0;$/;"	v
AUD_INPUT_LHPF_REGHOP	../sub/audio/audio_mem.h	/^static const uint16_t AUD_INPUT_LHPF_REGHOP  = 4;$/;"	v
AUD_INPUT_LHPF_REGHOP	unit_test/mocks/include/audio_mem.h	/^static const uint16_t AUD_INPUT_LHPF_REGHOP  = 4;$/;"	v
AUD_INPUT_NUM_CHANNELS	../sub/audio/audio_mem.h	/^#define AUD_INPUT_NUM_CHANNELS /;"	d
AUD_INPUT_NUM_CHANNELS	unit_test/mocks/include/audio_mem.h	/^#define AUD_INPUT_NUM_CHANNELS /;"	d
AUD_INPUT_VOL_REGBASE	../sub/audio/audio_mem.h	/^static const uint32_t AUD_INPUT_VOL_REGBASE  = 0x321;$/;"	v
AUD_INPUT_VOL_REGBASE	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUD_INPUT_VOL_REGBASE  = 0x321;$/;"	v
AUD_INPUT_VOL_REGHOP	../sub/audio/audio_mem.h	/^static const uint16_t AUD_INPUT_VOL_REGHOP   = 4;$/;"	v
AUD_INPUT_VOL_REGHOP	unit_test/mocks/include/audio_mem.h	/^static const uint16_t AUD_INPUT_VOL_REGHOP   = 4;$/;"	v
AUD_INVOL_DBCEIL	../sub/audio/audio_mem.h	/^static const int16_t AUD_INVOL_DBCEIL       = 315;$/;"	v
AUD_INVOL_DBFLOOR	../sub/audio/audio_mem.h	/^static const int16_t AUD_INVOL_DBFLOOR       = -100;$/;"	v
AUD_INVOL_DBMUL	../sub/audio/audio_mem.h	/^static const uint16_t AUD_INVOL_DBMUL        = 5;$/;"	v
AUD_INVOL_DBMUL	unit_test/mocks/include/audio_mem.h	/^static const uint16_t AUD_INVOL_DBMUL        = 5;$/;"	v
AUD_INVOL_MAXDB	../sub/audio/audio_mem.h	/^static const int16_t AUD_INVOL_MAXDB        = 315;$/;"	v
AUD_INVOL_MAXDB	unit_test/mocks/include/audio_mem.h	/^static const int16_t AUD_INVOL_MAXDB        = 315;$/;"	v
AUD_INVOL_MINDB	../sub/audio/audio_mem.h	/^static const int16_t AUD_INVOL_MINDB        = -640;$/;"	v
AUD_INVOL_MINDB	unit_test/mocks/include/audio_mem.h	/^static const int16_t AUD_INVOL_MINDB        = -640;$/;"	v
AUD_IRQ1_STAT1	../sub/audio/audio_mem.h	/^static const uint32_t AUD_IRQ1_STAT1 = 0x1880;$/;"	v
AUD_IRQ1_STAT1	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUD_IRQ1_STAT1 = 0x1880;$/;"	v
AUD_IRQ2_STAT1	../sub/audio/audio_mem.h	/^static const uint32_t AUD_IRQ2_STAT1 = 0x1980;$/;"	v
AUD_IRQ2_STAT1	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUD_IRQ2_STAT1 = 0x1980;$/;"	v
AUD_MEMCHUNK_ADJ_IND	../sub/audio/audio_mem.h	/^static const uint8_t AUD_MEMCHUNK_ADJ_IND = 1;$/;"	v
AUD_MEMCHUNK_ADJ_IND	unit_test/mocks/include/audio_mem.h	/^static const uint8_t AUD_MEMCHUNK_ADJ_IND = 1;$/;"	v
AUD_MEMCHUNK_CFG_IND	../sub/audio/audio_mem.h	/^static const uint8_t AUD_MEMCHUNK_CFG_IND = 0;$/;"	v
AUD_MEMCHUNK_CFG_IND	unit_test/mocks/include/audio_mem.h	/^static const uint8_t AUD_MEMCHUNK_CFG_IND = 0;$/;"	v
AUD_MEMCHUNK_CLIP_IND	../sub/audio/audio_mem.h	/^static const uint8_t AUD_MEMCHUNK_CLIP_IND = 7;$/;"	v
AUD_MEMCHUNK_CLIP_IND	unit_test/mocks/include/audio_mem.h	/^static const uint8_t AUD_MEMCHUNK_CLIP_IND = 7;$/;"	v
AUD_MEMCHUNK_DSPCFG_IND	../sub/audio/audio_mem.h	/^static const uint8_t AUD_MEMCHUNK_DSPCFG_IND = 2;$/;"	v
AUD_MEMCHUNK_DSPCFG_IND	unit_test/mocks/include/audio_mem.h	/^static const uint8_t AUD_MEMCHUNK_DSPCFG_IND = 2;$/;"	v
AUD_MEMCHUNK_DSPPARAM_IND	../sub/audio/audio_mem.h	/^static const uint8_t AUD_MEMCHUNK_DSPPARAM_IND = 3;$/;"	v
AUD_MEMCHUNK_DSPPARAM_IND	unit_test/mocks/include/audio_mem.h	/^static const uint8_t AUD_MEMCHUNK_DSPPARAM_IND = 3;$/;"	v
AUD_MEMCHUNK_DSPPROG_IND	../sub/audio/audio_mem.h	/^static const uint8_t AUD_MEMCHUNK_DSPPROG_IND = 4;$/;"	v
AUD_MEMCHUNK_DSPPROG_IND	unit_test/mocks/include/audio_mem.h	/^static const uint8_t AUD_MEMCHUNK_DSPPROG_IND = 4;$/;"	v
AUD_OUTPUTADJ_MEMELEM_INDEX	../sub/audio/audio_mem.h	/^static const uint16_t AUD_OUTPUTADJ_MEMELEM_INDEX = 3;$/;"	v
AUD_OUTPUTADJ_MEMELEM_INDEX	unit_test/mocks/include/audio_mem.h	/^static const uint16_t AUD_OUTPUTADJ_MEMELEM_INDEX = 3;$/;"	v
AUD_OUTPUTVOL_MEMELEM_INDEX	../sub/audio/audio_mem.h	/^static const uint16_t AUD_OUTPUTVOL_MEMELEM_INDEX = 1;$/;"	v
AUD_OUTPUTVOL_MEMELEM_INDEX	unit_test/mocks/include/audio_mem.h	/^static const uint16_t AUD_OUTPUTVOL_MEMELEM_INDEX = 1;$/;"	v
AUD_OUTPUT_NUM_CHANNELS	../sub/audio/audio_mem.h	/^#define AUD_OUTPUT_NUM_CHANNELS /;"	d
AUD_OUTPUT_NUM_CHANNELS	unit_test/mocks/include/audio_mem.h	/^#define AUD_OUTPUT_NUM_CHANNELS /;"	d
AUD_OUTPUT_VOL_REGBASE	../sub/audio/audio_mem.h	/^static const uint32_t AUD_OUTPUT_VOL_REGBASE = 0x431;$/;"	v
AUD_OUTPUT_VOL_REGBASE	unit_test/mocks/include/audio_mem.h	/^static const uint32_t AUD_OUTPUT_VOL_REGBASE = 0x431;$/;"	v
AUD_OUTPUT_VOL_REGHOP	../sub/audio/audio_mem.h	/^static const uint16_t AUD_OUTPUT_VOL_REGHOP  = 4;$/;"	v
AUD_OUTPUT_VOL_REGHOP	unit_test/mocks/include/audio_mem.h	/^static const uint16_t AUD_OUTPUT_VOL_REGHOP  = 4;$/;"	v
AUD_OUTVOL_DBCEIL	../sub/audio/audio_mem.h	/^static const int16_t AUD_OUTVOL_DBCEIL       = 315;$/;"	v
AUD_OUTVOL_DBFLOOR	../sub/audio/audio_mem.h	/^static const int16_t AUD_OUTVOL_DBFLOOR       = -100;$/;"	v
AUD_OUTVOL_DBMUL	../sub/audio/audio_mem.h	/^static const uint16_t AUD_OUTVOL_DBMUL       = 5;$/;"	v
AUD_OUTVOL_DBMUL	unit_test/mocks/include/audio_mem.h	/^static const uint16_t AUD_OUTVOL_DBMUL       = 5;$/;"	v
AUD_OUTVOL_MAXDB	../sub/audio/audio_mem.h	/^static const int16_t AUD_OUTVOL_MAXDB       = 315;$/;"	v
AUD_OUTVOL_MAXDB	unit_test/mocks/include/audio_mem.h	/^static const int16_t AUD_OUTVOL_MAXDB       = 315;$/;"	v
AUD_OUTVOL_MINDB	../sub/audio/audio_mem.h	/^static const int16_t AUD_OUTVOL_MINDB       = -640;$/;"	v
AUD_OUTVOL_MINDB	unit_test/mocks/include/audio_mem.h	/^static const int16_t AUD_OUTVOL_MINDB       = -640;$/;"	v
A_BLOCK_LINK	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^typedef struct A_BLOCK_LINK$/;"	s	file:
AudMemBlock	../sub/audio/audio_mem.h	/^} AudMemBlock;$/;"	t	typeref:struct:__anon13
AudMemBlock	unit_test/mocks/include/audio_mem.h	/^} AudMemBlock;$/;"	t	typeref:struct:__anon2
AudMemReg	../sub/audio/audio_mem.h	/^} AudMemReg;$/;"	t	typeref:struct:__anon12
AudMemReg	unit_test/mocks/include/audio_mem.h	/^} AudMemReg;$/;"	t	typeref:struct:__anon1
AudMemStatus	../sub/audio/audio_mem.h	/^} AudMemStatus;$/;"	t	typeref:enum:__anon14
AudMemStatus	unit_test/mocks/include/audio_mem.h	/^} AudMemStatus;$/;"	t	typeref:enum:__anon3
AudioClipState	api/audio_clip.h	/^}AudioClipState;$/;"	t	typeref:struct:__anon13
AudioDSPConfig	../sub/audio/audio_types.h	/^} AudioDSPConfig;$/;"	t	typeref:struct:__anon19
AudioDSPConfig	unit_test/mocks/include/audio_types.h	/^} AudioDSPConfig;$/;"	t	typeref:struct:__anon7
AudioEQConfig	../sub/audio/audio_types.h	/^} AudioEQConfig;$/;"	t	typeref:struct:__anon18
AudioInputConfig	../sub/audio/audio_types.h	/^} AudioInputConfig;$/;"	t	typeref:struct:__anon16
AudioInputConfig	unit_test/mocks/include/audio_types.h	/^} AudioInputConfig;$/;"	t	typeref:struct:__anon5
AudioOutputConfig	../sub/audio/audio_types.h	/^} AudioOutputConfig;$/;"	t	typeref:struct:__anon17
AudioOutputConfig	unit_test/mocks/include/audio_types.h	/^} AudioOutputConfig;$/;"	t	typeref:struct:__anon6
AudioState	../sub/audio/audio_types.h	/^} AudioState;$/;"	t	typeref:struct:__anon20
AudioState	unit_test/mocks/include/audio_types.h	/^} AudioState;$/;"	t	typeref:struct:__anon8
BLK_FIXED	libfoxenflac/foxen/flac.c	/^typedef enum { BLK_FIXED = 0, BLK_VARIABLE = 1 } fx_flac_blocking_strategy_t;$/;"	e	enum:__anon2	file:
BLK_SIZE_1152	libfoxenflac/foxen/flac.c	/^	BLK_SIZE_1152 = 3,$/;"	e	enum:__anon4	file:
BLK_SIZE_1204	libfoxenflac/foxen/flac.c	/^	BLK_SIZE_1204 = 10,$/;"	e	enum:__anon4	file:
BLK_SIZE_16384	libfoxenflac/foxen/flac.c	/^	BLK_SIZE_16384 = 14,$/;"	e	enum:__anon4	file:
BLK_SIZE_192	libfoxenflac/foxen/flac.c	/^	BLK_SIZE_192 = 1,$/;"	e	enum:__anon4	file:
BLK_SIZE_2048	libfoxenflac/foxen/flac.c	/^	BLK_SIZE_2048 = 11,$/;"	e	enum:__anon4	file:
BLK_SIZE_2304	libfoxenflac/foxen/flac.c	/^	BLK_SIZE_2304 = 4,$/;"	e	enum:__anon4	file:
BLK_SIZE_256	libfoxenflac/foxen/flac.c	/^	BLK_SIZE_256 = 8,$/;"	e	enum:__anon4	file:
BLK_SIZE_32768	libfoxenflac/foxen/flac.c	/^	BLK_SIZE_32768 = 15$/;"	e	enum:__anon4	file:
BLK_SIZE_4096	libfoxenflac/foxen/flac.c	/^	BLK_SIZE_4096 = 12,$/;"	e	enum:__anon4	file:
BLK_SIZE_4608	libfoxenflac/foxen/flac.c	/^	BLK_SIZE_4608 = 5,$/;"	e	enum:__anon4	file:
BLK_SIZE_512	libfoxenflac/foxen/flac.c	/^	BLK_SIZE_512 = 9,$/;"	e	enum:__anon4	file:
BLK_SIZE_576	libfoxenflac/foxen/flac.c	/^	BLK_SIZE_576 = 2,$/;"	e	enum:__anon4	file:
BLK_SIZE_8192	libfoxenflac/foxen/flac.c	/^	BLK_SIZE_8192 = 13,$/;"	e	enum:__anon4	file:
BLK_SIZE_READ_16BIT	libfoxenflac/foxen/flac.c	/^	BLK_SIZE_READ_16BIT = 7,$/;"	e	enum:__anon4	file:
BLK_SIZE_READ_8BIT	libfoxenflac/foxen/flac.c	/^	BLK_SIZE_READ_8BIT = 6,$/;"	e	enum:__anon4	file:
BLK_SIZE_RESERVED	libfoxenflac/foxen/flac.c	/^	BLK_SIZE_RESERVED = 0,$/;"	e	enum:__anon4	file:
BLK_VARIABLE	libfoxenflac/foxen/flac.c	/^typedef enum { BLK_FIXED = 0, BLK_VARIABLE = 1 } fx_flac_blocking_strategy_t;$/;"	e	enum:__anon2	file:
BQConfigReg	../sub/powerui/powerui_types.h	/^} BQConfigReg;$/;"	t	typeref:struct:__anon2
BQFault	../sub/powerui/powerui_types.h	/^} BQFault;$/;"	t	typeref:struct:__anon9
BQStatus	../sub/powerui/powerui_types.h	/^} BQStatus;$/;"	t	typeref:enum:__anon1
BQ_1V2EN_DIS	../sub/powerui/powerui_pmic.h	/^#define BQ_1V2EN_DIS /;"	d
BQ_1V2EN_EN	../sub/powerui/powerui_pmic.h	/^#define BQ_1V2EN_EN /;"	d
BQ_CD_ACTIVE	../sub/powerui/powerui_pmic.h	/^#define BQ_CD_ACTIVE /;"	d
BQ_CD_HIZ	../sub/powerui/powerui_pmic.h	/^#define BQ_CD_HIZ /;"	d
BQ_CFGADDR_NUM	../sub/powerui/powerui_pmic.h	/^#define BQ_CFGADDR_NUM /;"	d
BQ_CONFIG_DEFAULTS	../sub/powerui/powerui_pmic.h	/^static const BQConfigReg BQ_CONFIG_DEFAULTS[BQ_CFGADDR_NUM] = {$/;"	v
BQ_Charged	../sub/powerui/powerui_types.h	/^    BQ_Charged,$/;"	e	enum:__anon1
BQ_Charging	../sub/powerui/powerui_types.h	/^    BQ_Charging,$/;"	e	enum:__anon1
BQ_DEF_Fault_Mask	../sub/powerui/powerui_pmic.h	/^#define BQ_DEF_Fault_Mask /;"	d
BQ_DEF_ICHRG	../sub/powerui/powerui_pmic.h	/^#define BQ_DEF_ICHRG /;"	d
BQ_DEF_ILIMUVLO	../sub/powerui/powerui_pmic.h	/^#define BQ_DEF_ILIMUVLO /;"	d
BQ_DEF_IPRETERM	../sub/powerui/powerui_pmic.h	/^#define BQ_DEF_IPRETERM /;"	d
BQ_DEF_LSLDO	../sub/powerui/powerui_pmic.h	/^#define BQ_DEF_LSLDO /;"	d
BQ_DEF_PBCTRL	../sub/powerui/powerui_pmic.h	/^#define BQ_DEF_PBCTRL /;"	d
BQ_DEF_SYSVOUT	../sub/powerui/powerui_pmic.h	/^#define BQ_DEF_SYSVOUT /;"	d
BQ_DEF_TSFault_Mask	../sub/powerui/powerui_pmic.h	/^#define BQ_DEF_TSFault_Mask /;"	d
BQ_DEF_VBREG	../sub/powerui/powerui_pmic.h	/^#define BQ_DEF_VBREG /;"	d
BQ_DEF_VINDPM	../sub/powerui/powerui_pmic.h	/^#define BQ_DEF_VINDPM /;"	d
BQ_Fault	../sub/powerui/powerui_types.h	/^    BQ_Fault$/;"	e	enum:__anon1
BQ_I2C_ADDR	../sub/powerui/powerui_pmic.h	/^static const uint8_t BQ_I2C_ADDR = 0x6A; \/\/0b01101010$/;"	v
BQ_INT_CHARGING	../sub/powerui/powerui_pmic.h	/^#define BQ_INT_CHARGING /;"	d
BQ_INT_NOTCHARGING	../sub/powerui/powerui_pmic.h	/^#define BQ_INT_NOTCHARGING /;"	d
BQ_LSCNTRL_DIS	../sub/powerui/powerui_pmic.h	/^#define BQ_LSCNTRL_DIS /;"	d
BQ_LSCNTRL_EN	../sub/powerui/powerui_pmic.h	/^#define BQ_LSCNTRL_EN /;"	d
BQ_REG_BATMON	../sub/powerui/powerui_pmic.h	/^#define BQ_REG_BATMON /;"	d
BQ_REG_BATREG	../sub/powerui/powerui_pmic.h	/^#define BQ_REG_BATREG /;"	d
BQ_REG_CHARGE	../sub/powerui/powerui_pmic.h	/^#define BQ_REG_CHARGE /;"	d
BQ_REG_FAULT	../sub/powerui/powerui_pmic.h	/^#define BQ_REG_FAULT /;"	d
BQ_REG_ILIM	../sub/powerui/powerui_pmic.h	/^#define BQ_REG_ILIM /;"	d
BQ_REG_LSLDO	../sub/powerui/powerui_pmic.h	/^#define BQ_REG_LSLDO /;"	d
BQ_REG_PBCTRL	../sub/powerui/powerui_pmic.h	/^#define BQ_REG_PBCTRL /;"	d
BQ_REG_STATUS	../sub/powerui/powerui_pmic.h	/^#define BQ_REG_STATUS /;"	d
BQ_REG_SYSVOUT	../sub/powerui/powerui_pmic.h	/^#define BQ_REG_SYSVOUT /;"	d
BQ_REG_TERM	../sub/powerui/powerui_pmic.h	/^#define BQ_REG_TERM /;"	d
BQ_REG_TS	../sub/powerui/powerui_pmic.h	/^#define BQ_REG_TS /;"	d
BQ_REG_VINDPM	../sub/powerui/powerui_pmic.h	/^#define BQ_REG_VINDPM /;"	d
BQ_Ready	../sub/powerui/powerui_types.h	/^    BQ_Ready = 0,$/;"	e	enum:__anon1
BQ_SOC_ZEROVOLTAGE	../sub/powerui/powerui_pmic.h	/^#define BQ_SOC_ZEROVOLTAGE	/;"	d
BTAPP_STACKSIZE	../RTOS/rtos_config.h	/^#define BTAPP_STACKSIZE /;"	d
BT_NSHUTDOWN_GPIO_Port	../Core/Inc/main.h	/^#define BT_NSHUTDOWN_GPIO_Port /;"	d
BT_NSHUTDOWN_Pin	../Core/Inc/main.h	/^#define BT_NSHUTDOWN_Pin /;"	d
BT_RTOS_PRIORITY	../RTOS/rtos_config.h	/^static const int BT_RTOS_PRIORITY = 4;$/;"	v
BUFFERING	decoder/decoder.c	/^  BUFFERING,$/;"	e	enum:task_state	file:
BlockLink_t	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^} BlockLink_t;$/;"	t	typeref:struct:A_BLOCK_LINK	file:
BusFault_Handler	../Core/Inc/stm32f4xx_it.h	/^void BusFault_Handler(void);$/;"	p
BusFault_Handler	../Core/Src/stm32f4xx_it.c	/^void BusFault_Handler(void)$/;"	f
CD_SAFETYPERIOD_MS	../sub/powerui/powerui_pmic.h	/^static const uint16_t CD_SAFETYPERIOD_MS = 15;$/;"	v
CHUNK_SIZE	../peripherals/memory/sha-256.c	/^#define CHUNK_SIZE /;"	d	file:
CLIP_IDX_INVALID	audio_clip_defs.h	/^#define CLIP_IDX_INVALID /;"	d
CLK_EN_GPIO_Port	../Core/Inc/main.h	/^#define CLK_EN_GPIO_Port /;"	d
CLK_EN_Pin	../Core/Inc/main.h	/^#define CLK_EN_Pin /;"	d
CMSIS_OS2_H_	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define CMSIS_OS2_H_$/;"	d
CMSIS_OS_H_	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define CMSIS_OS_H_$/;"	d
CO_ROUTINE_H	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^#define CO_ROUTINE_H$/;"	d
CPSR_MASKBIT_I	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^#define CPSR_MASKBIT_I /;"	d	file:
CPSR_MODE_SYSTEM	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^#define CPSR_MODE_SYSTEM /;"	d	file:
CPSR_MODE_USER	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^#define CPSR_MODE_USER /;"	d	file:
CRCB_t	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^} CRCB_t; \/* Co-routine control block.  Note must be identical in size down to uxPriority with TCB_t. *\/$/;"	t	typeref:struct:corCoRoutineControlBlock
CSStatus	../sub/audio/audio_types.h	/^} CSStatus;$/;"	t	typeref:enum:__anon15
CSStatus	unit_test/mocks/include/audio_types.h	/^} CSStatus;$/;"	t	typeref:enum:__anon4
CS_32KCLK_DIS	../sub/audio/audio.h	/^#define CS_32KCLK_DIS /;"	d
CS_32KCLK_DIS	../sub/audio/audio_config.c	/^#define CS_32KCLK_DIS /;"	d	file:
CS_32KCLK_EN	../sub/audio/audio.h	/^#define CS_32KCLK_EN /;"	d
CS_32KCLK_EN	../sub/audio/audio_config.c	/^#define CS_32KCLK_EN /;"	d	file:
CS_ADDR_32KCLK1	../sub/audio/audio.h	/^#define  CS_ADDR_32KCLK1 /;"	d
CS_ADDR_32KCLK1	../sub/audio/audio_config.c	/^#define  CS_ADDR_32KCLK1 /;"	d	file:
CS_ADDR_DSPCLK1	../sub/audio/audio.h	/^#define  CS_ADDR_DSPCLK1 /;"	d
CS_ADDR_DSPCLK1	../sub/audio/audio_config.c	/^#define  CS_ADDR_DSPCLK1 /;"	d	file:
CS_ADDR_SWRESET	../sub/audio/audio.h	/^#define  CS_ADDR_SWRESET /;"	d
CS_ADDR_SWRST	../sub/audio/audio_config.c	/^#define CS_ADDR_SWRST /;"	d	file:
CS_ADDR_SYSCLK1	../sub/audio/audio.h	/^#define  CS_ADDR_SYSCLK1 /;"	d
CS_ADDR_SYSCLK1	../sub/audio/audio_config.c	/^#define  CS_ADDR_SYSCLK1 /;"	d	file:
CS_DSPCLK_DIS	../sub/audio/audio.h	/^#define CS_DSPCLK_DIS /;"	d
CS_DSPCLK_DIS	../sub/audio/audio_config.c	/^#define CS_DSPCLK_DIS /;"	d	file:
CS_DSPCLK_EN	../sub/audio/audio.h	/^#define CS_DSPCLK_EN /;"	d
CS_DSPCLK_EN	../sub/audio/audio_config.c	/^#define CS_DSPCLK_EN /;"	d	file:
CS_Initializing	../sub/audio/audio_types.h	/^    CS_Initializing = 0,$/;"	e	enum:__anon15
CS_Initializing	unit_test/mocks/include/audio_types.h	/^    CS_Initializing = 0,$/;"	e	enum:__anon4
CS_Operating	../sub/audio/audio_types.h	/^    CS_Operating$/;"	e	enum:__anon15
CS_Operating	unit_test/mocks/include/audio_types.h	/^    CS_Operating$/;"	e	enum:__anon4
CS_SPI_HEADERSZ	../sub/audio/audio_mem.h	/^#define CS_SPI_HEADERSZ /;"	d
CS_SPI_HEADERSZ	unit_test/mocks/include/audio_mem.h	/^#define CS_SPI_HEADERSZ /;"	d
CS_SPI_PACKETSIZE	../sub/audio/audio_mem.h	/^#define CS_SPI_PACKETSIZE /;"	d
CS_SPI_PACKETSIZE	unit_test/mocks/include/audio_mem.h	/^#define CS_SPI_PACKETSIZE /;"	d
CS_SPI_RSIZE	../sub/audio/audio_mem.h	/^#define CS_SPI_RSIZE /;"	d
CS_SPI_RSIZE	unit_test/mocks/include/audio_mem.h	/^#define CS_SPI_RSIZE /;"	d
CS_SPI_WBYTEMAX	../sub/audio/audio_mem.h	/^#define CS_SPI_WBYTEMAX /;"	d
CS_SPI_WBYTEMAX	unit_test/mocks/include/audio_mem.h	/^#define CS_SPI_WBYTEMAX /;"	d
CS_SPI_WDATAMAX	../sub/audio/audio_mem.h	/^#define CS_SPI_WDATAMAX /;"	d
CS_SPI_WDATAMAX	unit_test/mocks/include/audio_mem.h	/^#define CS_SPI_WDATAMAX /;"	d
CS_SPI_WSIZE	../sub/audio/audio_mem.h	/^#define CS_SPI_WSIZE /;"	d
CS_SPI_WSIZE	unit_test/mocks/include/audio_mem.h	/^#define CS_SPI_WSIZE /;"	d
CS_SWRST_VAL	../sub/audio/audio_config.c	/^#define CS_SWRST_VAL /;"	d	file:
CS_SYSCLK_DIS	../sub/audio/audio.h	/^#define CS_SYSCLK_DIS /;"	d
CS_SYSCLK_DIS	../sub/audio/audio_config.c	/^#define CS_SYSCLK_DIS /;"	d	file:
CS_SYSCLK_EN	../sub/audio/audio.h	/^#define CS_SYSCLK_EN /;"	d
CS_SYSCLK_EN	../sub/audio/audio_config.c	/^#define CS_SYSCLK_EN /;"	d	file:
CS_Sleeping	../sub/audio/audio_types.h	/^    CS_Sleeping,$/;"	e	enum:__anon15
CS_Sleeping	unit_test/mocks/include/audio_types.h	/^    CS_Sleeping,$/;"	e	enum:__anon4
C_CD_GPIO_Port	../Core/Inc/main.h	/^#define C_CD_GPIO_Port /;"	d
C_CD_Pin	../Core/Inc/main.h	/^#define C_CD_Pin /;"	d
CallbackParameters_t	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^} CallbackParameters_t;$/;"	t	typeref:struct:tmrCallbackParameters	file:
CoRoutineHandle_t	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^typedef void * CoRoutineHandle_t;$/;"	t
DATA_CACHE_ENABLE	../Core/Inc/stm32f4xx_hal_conf.h	/^#define  DATA_CACHE_ENABLE /;"	d
DECODED_BUF_SIZE	audio_clip_defs.h	/^#define DECODED_BUF_SIZE /;"	d
DEC_BUFFERING	decoder/decoder.h	/^  DEC_BUFFERING,$/;"	e	enum:decoder_event
DEC_BUFFERING_END	decoder/decoder.h	/^  DEC_BUFFERING_END,$/;"	e	enum:decoder_event
DEC_BUFFERING_REACH_THRSHLD	decoder/decoder.h	/^  DEC_BUFFERING_REACH_THRSHLD,$/;"	e	enum:decoder_event
DEC_BUFFERING_START	decoder/decoder.h	/^  DEC_BUFFERING_START,$/;"	e	enum:decoder_event
DEC_ERROR	decoder/decoder.h	/^  DEC_ERROR,$/;"	e	enum:decoder_event
DEC_STREAMING	decoder/decoder.h	/^  DEC_STREAMING,$/;"	e	enum:decoder_event
DEC_STREAMING_END	decoder/decoder.h	/^  DEC_STREAMING_END,$/;"	e	enum:decoder_event
DEPRECATED_DEFINITIONS_H	../Middlewares/Third_Party/FreeRTOS/Source/include/deprecated_definitions.h	/^#define DEPRECATED_DEFINITIONS_H$/;"	d
DMA1_Stream0_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void DMA1_Stream0_IRQHandler(void);$/;"	p
DMA1_Stream0_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void DMA1_Stream0_IRQHandler(void)$/;"	f
DMA1_Stream1_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void DMA1_Stream1_IRQHandler(void);$/;"	p
DMA1_Stream1_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void DMA1_Stream1_IRQHandler(void)$/;"	f
DMA1_Stream3_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void DMA1_Stream3_IRQHandler(void);$/;"	p
DMA1_Stream3_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void DMA1_Stream3_IRQHandler(void)$/;"	f
DMA1_Stream4_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void DMA1_Stream4_IRQHandler(void);$/;"	p
DMA1_Stream4_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void DMA1_Stream4_IRQHandler(void)$/;"	f
DMA1_Stream5_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void DMA1_Stream5_IRQHandler(void);$/;"	p
DMA1_Stream5_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void DMA1_Stream5_IRQHandler(void)$/;"	f
DMA1_Stream6_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void DMA1_Stream6_IRQHandler(void);$/;"	p
DMA1_Stream6_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void DMA1_Stream6_IRQHandler(void)$/;"	f
DMA1_Stream7_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void DMA1_Stream7_IRQHandler(void);$/;"	p
DMA1_Stream7_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void DMA1_Stream7_IRQHandler(void)$/;"	f
DMA2_Stream0_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void DMA2_Stream0_IRQHandler(void);$/;"	p
DMA2_Stream0_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void DMA2_Stream0_IRQHandler(void)$/;"	f
DMA2_Stream2_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void DMA2_Stream2_IRQHandler(void);$/;"	p
DMA2_Stream2_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void DMA2_Stream2_IRQHandler(void)$/;"	f
DMA2_Stream5_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void DMA2_Stream5_IRQHandler(void);$/;"	p
DMA2_Stream5_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void DMA2_Stream5_IRQHandler(void)$/;"	f
DMA2_Stream7_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void DMA2_Stream7_IRQHandler(void);$/;"	p
DMA2_Stream7_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void DMA2_Stream7_IRQHandler(void)$/;"	f
DMA_BUF_SIZE	audio_clip_defs.h	/^#define DMA_BUF_SIZE /;"	d
DMA_Init	wrappers/wrp_i2s.c	/^static void DMA_Init(void) {$/;"	f	file:
DP83848_PHY_ADDRESS	../Core/Inc/stm32f4xx_hal_conf.h	/^#define DP83848_PHY_ADDRESS /;"	d
DSP_CS_GPIO_Port	../Core/Inc/main.h	/^#define DSP_CS_GPIO_Port /;"	d
DSP_CS_Pin	../Core/Inc/main.h	/^#define DSP_CS_Pin /;"	d
DaemonTaskMessage_t	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^} DaemonTaskMessage_t;$/;"	t	typeref:struct:tmrTimerQueueMessage	file:
DataIdx	../Core/Src/syscalls.c	/^	int DataIdx;$/;"	l
DebugMon_Handler	../Core/Inc/stm32f4xx_it.h	/^void DebugMon_Handler(void);$/;"	p
DebugMon_Handler	../Core/Src/stm32f4xx_it.c	/^void DebugMon_Handler(void)$/;"	f
ENSURE_BITS	libfoxenflac/foxen/flac.c	/^#define ENSURE_BITS(/;"	d	file:
EN_1V2_GPIO_Port	../Core/Inc/main.h	/^#define EN_1V2_GPIO_Port /;"	d
EN_1V2_Pin	../Core/Inc/main.h	/^#define EN_1V2_Pin /;"	d
ETH_RXBUFNB	../Core/Inc/stm32f4xx_hal_conf.h	/^#define ETH_RXBUFNB /;"	d
ETH_RX_BUF_SIZE	../Core/Inc/stm32f4xx_hal_conf.h	/^#define ETH_RX_BUF_SIZE /;"	d
ETH_TXBUFNB	../Core/Inc/stm32f4xx_hal_conf.h	/^#define ETH_TXBUFNB /;"	d
ETH_TX_BUF_SIZE	../Core/Inc/stm32f4xx_hal_conf.h	/^#define ETH_TX_BUF_SIZE /;"	d
EVENT_FLAGS_INVALID_BITS	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^#define EVENT_FLAGS_INVALID_BITS /;"	d	file:
EVENT_GROUPS_H	../Middlewares/Third_Party/FreeRTOS/Source/include/event_groups.h	/^#define EVENT_GROUPS_H$/;"	d
EXTERNAL_CLOCK_VALUE	../Core/Inc/stm32f4xx_hal_conf.h	/^  #define EXTERNAL_CLOCK_VALUE /;"	d
EXTI0_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void EXTI0_IRQHandler(void);$/;"	p
EXTI0_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void EXTI0_IRQHandler(void)$/;"	f
EXTI1_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void EXTI1_IRQHandler(void);$/;"	p
EXTI1_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void EXTI1_IRQHandler(void)$/;"	f
Error_Handler	../Core/Inc/main.h	/^void Error_Handler(void);$/;"	p
Error_Handler	../Core/Src/main.c	/^void Error_Handler(void)$/;"	f
EventBits_t	../Middlewares/Third_Party/FreeRTOS/Source/include/event_groups.h	/^typedef TickType_t EventBits_t;$/;"	t
EventGroupDef_t	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^typedef struct EventGroupDef_t$/;"	s	file:
EventGroupDef_t	../Middlewares/Third_Party/FreeRTOS/Source/include/event_groups.h	/^struct EventGroupDef_t;$/;"	x
EventGroupHandle_t	../Middlewares/Third_Party/FreeRTOS/Source/include/event_groups.h	/^typedef struct EventGroupDef_t * EventGroupHandle_t;$/;"	t	typeref:struct:EventGroupDef_t
EventGroup_t	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^} EventGroup_t;$/;"	t	typeref:struct:EventGroupDef_t	file:
FLAC_DECODED_FRAME	libfoxenflac/foxen/flac.h	/^	FLAC_DECODED_FRAME = 5,$/;"	e	enum:__anon14
FLAC_END_OF_FRAME	libfoxenflac/foxen/flac.h	/^	FLAC_END_OF_FRAME = 6$/;"	e	enum:__anon14
FLAC_END_OF_METADATA	libfoxenflac/foxen/flac.h	/^	FLAC_END_OF_METADATA = 2,$/;"	e	enum:__anon14
FLAC_ERR	libfoxenflac/foxen/flac.h	/^	FLAC_ERR = -1,$/;"	e	enum:__anon14
FLAC_FIXED_1	libfoxenflac/test/data_fixed_1.h	/^const uint8_t FLAC_FIXED_1[] = {$/;"	v
FLAC_FIXED_1_OUT	libfoxenflac/test/data_fixed_1.h	/^const int32_t FLAC_FIXED_1_OUT[] = {$/;"	v
FLAC_FIXED_2	libfoxenflac/test/data_fixed_2.h	/^const uint8_t FLAC_FIXED_2[] = {$/;"	v
FLAC_FIXED_2_OUT	libfoxenflac/test/data_fixed_2.h	/^const int32_t FLAC_FIXED_2_OUT[] = {$/;"	v
FLAC_FRAME_HEADER	libfoxenflac/foxen/flac.c	/^	FLAC_FRAME_HEADER = 400,$/;"	e	enum:__anon13	file:
FLAC_FRAME_HEADER_AUX	libfoxenflac/foxen/flac.c	/^	FLAC_FRAME_HEADER_AUX = 402,$/;"	e	enum:__anon13	file:
FLAC_FRAME_HEADER_CRC	libfoxenflac/foxen/flac.c	/^	FLAC_FRAME_HEADER_CRC = 403,$/;"	e	enum:__anon13	file:
FLAC_FRAME_HEADER_SYNC_INFO	libfoxenflac/foxen/flac.c	/^	FLAC_FRAME_HEADER_SYNC_INFO = 401,$/;"	e	enum:__anon13	file:
FLAC_FRAME_SYNC	libfoxenflac/foxen/flac.c	/^	FLAC_FRAME_SYNC = 300,$/;"	e	enum:__anon13	file:
FLAC_HEADER_ERR_METADATA_TOO_LONG	libfoxenflac/test/data_header.h	/^const uint8_t FLAC_HEADER_ERR_METADATA_TOO_LONG[] = {$/;"	v
FLAC_INIT	libfoxenflac/foxen/flac.h	/^	FLAC_INIT = 0,$/;"	e	enum:__anon14
FLAC_INVALID_METADATA_KEY	libfoxenflac/foxen/flac.h	/^#define FLAC_INVALID_METADATA_KEY /;"	d
FLAC_IN_FRAME	libfoxenflac/foxen/flac.h	/^	FLAC_IN_FRAME = 4,$/;"	e	enum:__anon14
FLAC_IN_METADATA	libfoxenflac/foxen/flac.h	/^	FLAC_IN_METADATA = 1,$/;"	e	enum:__anon14
FLAC_KEY_MAX_BLOCK_SIZE	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MAX_BLOCK_SIZE = 1,$/;"	e	enum:__anon15
FLAC_KEY_MAX_FRAME_SIZE	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MAX_FRAME_SIZE = 3,$/;"	e	enum:__anon15
FLAC_KEY_MD5_SUM_0	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MD5_SUM_0 = 128,$/;"	e	enum:__anon15
FLAC_KEY_MD5_SUM_1	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MD5_SUM_1 = 129,$/;"	e	enum:__anon15
FLAC_KEY_MD5_SUM_2	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MD5_SUM_2 = 130,$/;"	e	enum:__anon15
FLAC_KEY_MD5_SUM_3	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MD5_SUM_3 = 131,$/;"	e	enum:__anon15
FLAC_KEY_MD5_SUM_4	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MD5_SUM_4 = 132,$/;"	e	enum:__anon15
FLAC_KEY_MD5_SUM_5	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MD5_SUM_5 = 133,$/;"	e	enum:__anon15
FLAC_KEY_MD5_SUM_6	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MD5_SUM_6 = 134,$/;"	e	enum:__anon15
FLAC_KEY_MD5_SUM_7	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MD5_SUM_7 = 135,$/;"	e	enum:__anon15
FLAC_KEY_MD5_SUM_8	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MD5_SUM_8 = 136,$/;"	e	enum:__anon15
FLAC_KEY_MD5_SUM_9	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MD5_SUM_9 = 137,$/;"	e	enum:__anon15
FLAC_KEY_MD5_SUM_A	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MD5_SUM_A = 138,$/;"	e	enum:__anon15
FLAC_KEY_MD5_SUM_B	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MD5_SUM_B = 139,$/;"	e	enum:__anon15
FLAC_KEY_MD5_SUM_C	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MD5_SUM_C = 140,$/;"	e	enum:__anon15
FLAC_KEY_MD5_SUM_D	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MD5_SUM_D = 141,$/;"	e	enum:__anon15
FLAC_KEY_MD5_SUM_E	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MD5_SUM_E = 142,$/;"	e	enum:__anon15
FLAC_KEY_MD5_SUM_F	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MD5_SUM_F = 143,$/;"	e	enum:__anon15
FLAC_KEY_MIN_BLOCK_SIZE	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MIN_BLOCK_SIZE = 0,$/;"	e	enum:__anon15
FLAC_KEY_MIN_FRAME_SIZE	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_MIN_FRAME_SIZE = 2,$/;"	e	enum:__anon15
FLAC_KEY_N_CHANNELS	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_N_CHANNELS = 5,$/;"	e	enum:__anon15
FLAC_KEY_N_SAMPLES	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_N_SAMPLES = 7,$/;"	e	enum:__anon15
FLAC_KEY_SAMPLE_RATE	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_SAMPLE_RATE = 4,$/;"	e	enum:__anon15
FLAC_KEY_SAMPLE_SIZE	libfoxenflac/foxen/flac.h	/^	FLAC_KEY_SAMPLE_SIZE = 6,$/;"	e	enum:__anon15
FLAC_LONG_HEADER	libfoxenflac/test/data_header.h	/^const uint8_t FLAC_LONG_HEADER[] = {$/;"	v
FLAC_MAX_BLOCK_SIZE	libfoxenflac/foxen/flac.h	/^#define FLAC_MAX_BLOCK_SIZE /;"	d
FLAC_MAX_CHANNEL_COUNT	libfoxenflac/foxen/flac.h	/^#define FLAC_MAX_CHANNEL_COUNT /;"	d
FLAC_METADATA_HEADER	libfoxenflac/foxen/flac.c	/^	FLAC_METADATA_HEADER = 200,$/;"	e	enum:__anon13	file:
FLAC_METADATA_SINFO	libfoxenflac/foxen/flac.c	/^	FLAC_METADATA_SINFO = 202,$/;"	e	enum:__anon13	file:
FLAC_METADATA_SKIP	libfoxenflac/foxen/flac.c	/^	FLAC_METADATA_SKIP = 201,$/;"	e	enum:__anon13	file:
FLAC_PRINT_FRAMES	unit_test/unit_test.c	/^#define FLAC_PRINT_FRAMES /;"	d	file:
FLAC_SEARCH_FRAME	libfoxenflac/foxen/flac.h	/^	FLAC_SEARCH_FRAME = 3,$/;"	e	enum:__anon14
FLAC_SHORT_HEADER	libfoxenflac/test/data_header.h	/^const uint8_t FLAC_SHORT_HEADER[] = {$/;"	v
FLAC_SHORT_HEADER_SHIFT1	libfoxenflac/test/data_header.h	/^const uint8_t FLAC_SHORT_HEADER_SHIFT1[] = {$/;"	v
FLAC_SHORT_HEADER_SHIFT2	libfoxenflac/test/data_header.h	/^const uint8_t FLAC_SHORT_HEADER_SHIFT2[] = {$/;"	v
FLAC_SHORT_HEADER_SHIFT3	libfoxenflac/test/data_header.h	/^const uint8_t FLAC_SHORT_HEADER_SHIFT3[] = {$/;"	v
FLAC_SHORT_HEADER_SHIFT4	libfoxenflac/test/data_header.h	/^const uint8_t FLAC_SHORT_HEADER_SHIFT4[] = {$/;"	v
FLAC_SUBFRAME_CONSTANT	libfoxenflac/foxen/flac.c	/^	FLAC_SUBFRAME_CONSTANT = 502,$/;"	e	enum:__anon13	file:
FLAC_SUBFRAME_FINALIZE	libfoxenflac/foxen/flac.c	/^	FLAC_SUBFRAME_FINALIZE = 515$/;"	e	enum:__anon13	file:
FLAC_SUBFRAME_FIXED	libfoxenflac/foxen/flac.c	/^	FLAC_SUBFRAME_FIXED = 503,$/;"	e	enum:__anon13	file:
FLAC_SUBFRAME_FIXED_RESIDUAL	libfoxenflac/foxen/flac.c	/^	FLAC_SUBFRAME_FIXED_RESIDUAL = 504,$/;"	e	enum:__anon13	file:
FLAC_SUBFRAME_HEADER	libfoxenflac/foxen/flac.c	/^	FLAC_SUBFRAME_HEADER = 500,$/;"	e	enum:__anon13	file:
FLAC_SUBFRAME_LPC	libfoxenflac/foxen/flac.c	/^	FLAC_SUBFRAME_LPC = 505,$/;"	e	enum:__anon13	file:
FLAC_SUBFRAME_LPC_COEFFS	libfoxenflac/foxen/flac.c	/^	FLAC_SUBFRAME_LPC_COEFFS = 507,$/;"	e	enum:__anon13	file:
FLAC_SUBFRAME_LPC_HEADER	libfoxenflac/foxen/flac.c	/^	FLAC_SUBFRAME_LPC_HEADER = 506,$/;"	e	enum:__anon13	file:
FLAC_SUBFRAME_LPC_RESIDUAL	libfoxenflac/foxen/flac.c	/^	FLAC_SUBFRAME_LPC_RESIDUAL = 508,$/;"	e	enum:__anon13	file:
FLAC_SUBFRAME_RICE	libfoxenflac/foxen/flac.c	/^	FLAC_SUBFRAME_RICE = 510,$/;"	e	enum:__anon13	file:
FLAC_SUBFRAME_RICE_FINALIZE	libfoxenflac/foxen/flac.c	/^	FLAC_SUBFRAME_RICE_FINALIZE = 513,$/;"	e	enum:__anon13	file:
FLAC_SUBFRAME_RICE_INIT	libfoxenflac/foxen/flac.c	/^	FLAC_SUBFRAME_RICE_INIT = 509,$/;"	e	enum:__anon13	file:
FLAC_SUBFRAME_RICE_UNARY	libfoxenflac/foxen/flac.c	/^	FLAC_SUBFRAME_RICE_UNARY = 511,$/;"	e	enum:__anon13	file:
FLAC_SUBFRAME_RICE_VERBATIM	libfoxenflac/foxen/flac.c	/^	FLAC_SUBFRAME_RICE_VERBATIM = 512,$/;"	e	enum:__anon13	file:
FLAC_SUBFRAME_VERBATIM	libfoxenflac/foxen/flac.c	/^	FLAC_SUBFRAME_VERBATIM = 514,$/;"	e	enum:__anon13	file:
FLAC_SUBSET_MAX_BLOCK_SIZE	libfoxenflac/foxen/flac.h	/^#define FLAC_SUBSET_MAX_BLOCK_SIZE /;"	d
FLAC_SUBSET_MAX_BLOCK_SIZE_48KHZ	libfoxenflac/foxen/flac.h	/^#define FLAC_SUBSET_MAX_BLOCK_SIZE_48KHZ /;"	d
FLAC_SYNC_A	libfoxenflac/foxen/flac.c	/^	FLAC_SYNC_A = 102,$/;"	e	enum:__anon13	file:
FLAC_SYNC_F	libfoxenflac/foxen/flac.c	/^	FLAC_SYNC_F = 100,$/;"	e	enum:__anon13	file:
FLAC_SYNC_INIT	libfoxenflac/foxen/flac.c	/^	FLAC_SYNC_INIT = 0,$/;"	e	enum:__anon13	file:
FLAC_SYNC_L	libfoxenflac/foxen/flac.c	/^	FLAC_SYNC_L = 101,$/;"	e	enum:__anon13	file:
FLASH_WRITE_SIZE	../peripherals/memory/internal_flash_driver.c	/^#define FLASH_WRITE_SIZE	/;"	d	file:
FOXEN_FLAC_H	libfoxenflac/foxen/flac.h	/^#define FOXEN_FLAC_H$/;"	d
FREERTOS_CONFIG_H	../Core/Inc/FreeRTOSConfig.h	/^#define FREERTOS_CONFIG_H$/;"	d
FREERTOS_MESSAGE_BUFFER_H	../Middlewares/Third_Party/FreeRTOS/Source/include/message_buffer.h	/^#define FREERTOS_MESSAGE_BUFFER_H$/;"	d
FREERTOS_SYSTEM_CALL	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define FREERTOS_SYSTEM_CALL /;"	d
FREERTOS_SYSTEM_CALL	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define FREERTOS_SYSTEM_CALL$/;"	d
FREERTOS_SYSTEM_CALL	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^	#define FREERTOS_SYSTEM_CALL$/;"	d
FRM_DEBOUNCE_PERIODMS	../sub/powerui/powerui_frame.h	/^static const uint32_t FRM_DEBOUNCE_PERIODMS = 50;$/;"	v
FRM_EXTI_IRQn	../Core/Inc/main.h	/^#define FRM_EXTI_IRQn /;"	d
FRM_GPIO_Port	../Core/Inc/main.h	/^#define FRM_GPIO_Port /;"	d
FRM_Pin	../Core/Inc/main.h	/^#define FRM_Pin /;"	d
FS_16KHZ	libfoxenflac/foxen/flac.c	/^	FS_16KHZ = 5,$/;"	e	enum:__anon5	file:
FS_176_4KHZ	libfoxenflac/foxen/flac.c	/^	FS_176_4KHZ = 2,$/;"	e	enum:__anon5	file:
FS_192KHZ	libfoxenflac/foxen/flac.c	/^	FS_192KHZ = 3,$/;"	e	enum:__anon5	file:
FS_22_05KHZ	libfoxenflac/foxen/flac.c	/^	FS_22_05KHZ = 6,$/;"	e	enum:__anon5	file:
FS_24KHZ	libfoxenflac/foxen/flac.c	/^	FS_24KHZ = 7,$/;"	e	enum:__anon5	file:
FS_32KHZ	libfoxenflac/foxen/flac.c	/^	FS_32KHZ = 8,$/;"	e	enum:__anon5	file:
FS_44_1KHZ	libfoxenflac/foxen/flac.c	/^	FS_44_1KHZ = 9,$/;"	e	enum:__anon5	file:
FS_48KHZ	libfoxenflac/foxen/flac.c	/^	FS_48KHZ = 10,$/;"	e	enum:__anon5	file:
FS_88_2KHZ	libfoxenflac/foxen/flac.c	/^	FS_88_2KHZ = 1,$/;"	e	enum:__anon5	file:
FS_8KHZ	libfoxenflac/foxen/flac.c	/^	FS_8KHZ = 4,$/;"	e	enum:__anon5	file:
FS_96KHZ	libfoxenflac/foxen/flac.c	/^	FS_96KHZ = 11,$/;"	e	enum:__anon5	file:
FS_INVALID	libfoxenflac/foxen/flac.c	/^	FS_INVALID = 15$/;"	e	enum:__anon5	file:
FS_READ_16BIT_DHZ	libfoxenflac/foxen/flac.c	/^	FS_READ_16BIT_DHZ = 14,$/;"	e	enum:__anon5	file:
FS_READ_16BIT_HZ	libfoxenflac/foxen/flac.c	/^	FS_READ_16BIT_HZ = 13,$/;"	e	enum:__anon5	file:
FS_READ_8BIT_KHZ	libfoxenflac/foxen/flac.c	/^	FS_READ_8BIT_KHZ = 12,$/;"	e	enum:__anon5	file:
FS_STREAMINFO	libfoxenflac/foxen/flac.c	/^	FS_STREAMINFO = 0,$/;"	e	enum:__anon5	file:
FX_EXPORT	libfoxenflac/foxen/flac.h	/^#define FX_EXPORT /;"	d
FX_EXPORT	libfoxenflac/foxen/flac.h	/^#define FX_EXPORT$/;"	d
FX_FLAC_ALLOC	libfoxenflac/foxen/flac.h	/^#define FX_FLAC_ALLOC(/;"	d
FX_FLAC_ALLOC_DEFAULT	libfoxenflac/foxen/flac.h	/^#define FX_FLAC_ALLOC_DEFAULT(/;"	d
FX_FLAC_ALLOC_SUBSET_FORMAT_ANY	libfoxenflac/foxen/flac.h	/^#define FX_FLAC_ALLOC_SUBSET_FORMAT_ANY(/;"	d
FX_FLAC_ALLOC_SUBSET_FORMAT_DAT	libfoxenflac/foxen/flac.h	/^#define FX_FLAC_ALLOC_SUBSET_FORMAT_DAT(/;"	d
FlashLock	../peripherals/memory/internal_flash_driver.c	/^bool FlashLock()$/;"	f
FlashLock	../peripherals/memory/internal_flash_driver.h	/^bool FlashLock();$/;"	p
FlashUnlock	../peripherals/memory/internal_flash_driver.c	/^bool FlashUnlock()$/;"	f
FlashUnlock	../peripherals/memory/internal_flash_driver.h	/^bool FlashUnlock();$/;"	p
FlashWrite	../peripherals/memory/internal_flash_driver.c	/^bool FlashWrite(volatile uint32_t *flash, const uint8_t *data, uint32_t count)$/;"	f
FlashWrite	../peripherals/memory/internal_flash_driver.h	/^bool FlashWrite(volatile uint32_t *flash, const uint8_t *data, uint32_t count);$/;"	p
FrameStatus	../sub/powerui/powerui_types.h	/^} FrameStatus;$/;"	t	typeref:enum:__anon3
Frame_Closed	../sub/powerui/powerui_types.h	/^    Frame_Closed = 0,$/;"	e	enum:__anon3
Frame_Opened	../sub/powerui/powerui_types.h	/^    Frame_Opened$/;"	e	enum:__anon3
FreeRTOS_errno	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	int FreeRTOS_errno = 0;$/;"	v
GPIO_InitStruct	../Core/Src/gpio.c	/^  GPIO_InitTypeDef GPIO_InitStruct = {0};$/;"	l
GPIO_InitStruct	../Core/Src/i2c.c	/^  GPIO_InitTypeDef GPIO_InitStruct = {0};$/;"	l
GPIO_InitStruct	../Core/Src/i2s.c	/^  GPIO_InitTypeDef GPIO_InitStruct = {0};$/;"	l
GPIO_InitStruct	../Core/Src/main.c	/^  GPIO_InitTypeDef GPIO_InitStruct = {0};$/;"	l
GPIO_InitStruct	../Core/Src/spi.c	/^  GPIO_InitTypeDef GPIO_InitStruct = {0};$/;"	l
GPIO_InitStruct	../Core/Src/usart.c	/^  GPIO_InitTypeDef GPIO_InitStruct = {0};$/;"	l
GPIO_InitStruct	../sub/powerui/powerui_frame.c	/^	GPIO_InitTypeDef GPIO_InitStruct = {0};$/;"	l
GPIO_InitStruct	../sub/powerui/powerui_pb.c	/^	GPIO_InitTypeDef GPIO_InitStruct = {0};$/;"	l
GPIO_InitStruct	wrappers/wrp_i2s.c	/^	GPIO_InitTypeDef GPIO_InitStruct;$/;"	l
GPIO_TypeDef	unit_test/mocks/include/mem_peri.h	/^typedef void* GPIO_TypeDef;$/;"	t
HAL_CORTEX_MODULE_ENABLED	../Core/Inc/stm32f4xx_hal_conf.h	/^#define HAL_CORTEX_MODULE_ENABLED$/;"	d
HAL_DMA_MODULE_ENABLED	../Core/Inc/stm32f4xx_hal_conf.h	/^#define HAL_DMA_MODULE_ENABLED$/;"	d
HAL_EXTI_MODULE_ENABLED	../Core/Inc/stm32f4xx_hal_conf.h	/^#define HAL_EXTI_MODULE_ENABLED$/;"	d
HAL_FLASH_MODULE_ENABLED	../Core/Inc/stm32f4xx_hal_conf.h	/^#define HAL_FLASH_MODULE_ENABLED$/;"	d
HAL_GPIO_EXTI_Callback	../Core/Src/gpio.c	/^void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)$/;"	f
HAL_GPIO_MODULE_ENABLED	../Core/Inc/stm32f4xx_hal_conf.h	/^#define HAL_GPIO_MODULE_ENABLED$/;"	d
HAL_I2C_AbortCpltCallback	../peripherals/i2c/i2c_peri.c	/^void HAL_I2C_AbortCpltCallback(I2C_HandleTypeDef *hi2c)$/;"	f
HAL_I2C_ErrorCallback	../peripherals/i2c/i2c_peri.c	/^void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *hi2c)$/;"	f
HAL_I2C_MODULE_ENABLED	../Core/Inc/stm32f4xx_hal_conf.h	/^#define HAL_I2C_MODULE_ENABLED$/;"	d
HAL_I2C_MasterRxCpltCallback	../peripherals/i2c/i2c_peri.c	/^void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c)$/;"	f
HAL_I2C_MasterTxCpltCallback	../peripherals/i2c/i2c_peri.c	/^void HAL_I2C_MasterTxCpltCallback(I2C_HandleTypeDef *hi2c)$/;"	f
HAL_I2C_MemRxCpltCallback	../peripherals/i2c/i2c_peri.c	/^void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c)$/;"	f
HAL_I2C_MemTxCpltCallback	../peripherals/i2c/i2c_peri.c	/^void HAL_I2C_MemTxCpltCallback(I2C_HandleTypeDef *hi2c)$/;"	f
HAL_I2C_MspDeInit	../Core/Src/i2c.c	/^void HAL_I2C_MspDeInit(I2C_HandleTypeDef* i2cHandle)$/;"	f
HAL_I2C_MspInit	../Core/Src/i2c.c	/^void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)$/;"	f
HAL_I2S_MODULE_ENABLED	../Core/Inc/stm32f4xx_hal_conf.h	/^#define HAL_I2S_MODULE_ENABLED$/;"	d
HAL_I2S_MspDeInit	../Core/Src/i2s.c	/^void HAL_I2S_MspDeInit(I2S_HandleTypeDef* i2sHandle)$/;"	f
HAL_I2S_MspInit	../Core/Src/i2s.c	/^void HAL_I2S_MspInit(I2S_HandleTypeDef* i2sHandle)$/;"	f
HAL_I2S_TxCpltCallback	wrappers/wrp_i2s.c	/^void HAL_I2S_TxCpltCallback(I2S_HandleTypeDef *hi2s) {$/;"	f
HAL_I2S_TxHalfCpltCallback	wrappers/wrp_i2s.c	/^void HAL_I2S_TxHalfCpltCallback(I2S_HandleTypeDef *hi2s) {$/;"	f
HAL_IWDG_MODULE_ENABLED	../Core/Inc/stm32f4xx_hal_conf.h	/^#define HAL_IWDG_MODULE_ENABLED$/;"	d
HAL_InitTick	../Core/Src/stm32f4xx_hal_timebase_tim.c	/^HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)$/;"	f
HAL_MODULE_ENABLED	../Core/Inc/stm32f4xx_hal_conf.h	/^#define HAL_MODULE_ENABLED /;"	d
HAL_MspInit	../Core/Src/stm32f4xx_hal_msp.c	/^void HAL_MspInit(void)$/;"	f
HAL_PWR_MODULE_ENABLED	../Core/Inc/stm32f4xx_hal_conf.h	/^#define HAL_PWR_MODULE_ENABLED$/;"	d
HAL_RCC_MODULE_ENABLED	../Core/Inc/stm32f4xx_hal_conf.h	/^#define HAL_RCC_MODULE_ENABLED$/;"	d
HAL_RTC_MODULE_ENABLED	../Core/Inc/stm32f4xx_hal_conf.h	/^#define HAL_RTC_MODULE_ENABLED$/;"	d
HAL_RTC_MspDeInit	../Core/Src/rtc.c	/^void HAL_RTC_MspDeInit(RTC_HandleTypeDef* rtcHandle)$/;"	f
HAL_RTC_MspInit	../Core/Src/rtc.c	/^void HAL_RTC_MspInit(RTC_HandleTypeDef* rtcHandle)$/;"	f
HAL_ResumeTick	../Core/Src/stm32f4xx_hal_timebase_tim.c	/^void HAL_ResumeTick(void)$/;"	f
HAL_SPI_AbortCpltCallback	../peripherals/spi/spi_peri.c	/^void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)$/;"	f
HAL_SPI_ErrorCallback	../peripherals/spi/spi_peri.c	/^void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)$/;"	f
HAL_SPI_MODULE_ENABLED	../Core/Inc/stm32f4xx_hal_conf.h	/^#define HAL_SPI_MODULE_ENABLED$/;"	d
HAL_SPI_MspDeInit	../Core/Src/spi.c	/^void HAL_SPI_MspDeInit(SPI_HandleTypeDef* spiHandle)$/;"	f
HAL_SPI_MspInit	../Core/Src/spi.c	/^void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)$/;"	f
HAL_SPI_RxCpltCallback	../peripherals/spi/spi_peri.c	/^void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)$/;"	f
HAL_SPI_TxCpltCallback	../peripherals/spi/spi_peri.c	/^void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)$/;"	f
HAL_SPI_TxRxCpltCallback	../peripherals/spi/spi_peri.c	/^void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)$/;"	f
HAL_SuspendTick	../Core/Src/stm32f4xx_hal_timebase_tim.c	/^void HAL_SuspendTick(void)$/;"	f
HAL_TIM_MODULE_ENABLED	../Core/Inc/stm32f4xx_hal_conf.h	/^#define HAL_TIM_MODULE_ENABLED$/;"	d
HAL_TIM_PeriodElapsedCallback	../Core/Src/main.c	/^void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)$/;"	f
HAL_UART_MODULE_ENABLED	../Core/Inc/stm32f4xx_hal_conf.h	/^#define HAL_UART_MODULE_ENABLED$/;"	d
HAL_UART_MspDeInit	../Core/Src/usart.c	/^void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)$/;"	f
HAL_UART_MspInit	../Core/Src/usart.c	/^void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)$/;"	f
HEAP_5_REGION_SETUP	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  #define HEAP_5_REGION_SETUP /;"	d	file:
HSE_STARTUP_TIMEOUT	../Core/Inc/stm32f4xx_hal_conf.h	/^  #define HSE_STARTUP_TIMEOUT /;"	d
HSE_VALUE	../Core/Inc/stm32f4xx_hal_conf.h	/^  #define HSE_VALUE /;"	d
HSE_VALUE	../Core/Src/system_stm32f4xx.c	/^  #define HSE_VALUE /;"	d	file:
HSI_VALUE	../Core/Inc/stm32f4xx_hal_conf.h	/^  #define HSI_VALUE /;"	d
HSI_VALUE	../Core/Src/system_stm32f4xx.c	/^  #define HSI_VALUE /;"	d	file:
HardFault_Handler	../Core/Inc/stm32f4xx_it.h	/^void HardFault_Handler(void);$/;"	p
HardFault_Handler	../Core/Src/stm32f4xx_it.c	/^void HardFault_Handler(void)$/;"	f
HeapRegion	../Middlewares/Third_Party/FreeRTOS/Source/include/portable.h	/^typedef struct HeapRegion$/;"	s
HeapRegion_t	../Middlewares/Third_Party/FreeRTOS/Source/include/portable.h	/^} HeapRegion_t;$/;"	t	typeref:struct:HeapRegion
I2C1_ER_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void I2C1_ER_IRQHandler(void);$/;"	p
I2C1_ER_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void I2C1_ER_IRQHandler(void)$/;"	f
I2C1_EV_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void I2C1_EV_IRQHandler(void);$/;"	p
I2C1_EV_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void I2C1_EV_IRQHandler(void)$/;"	f
I2C_2V5_DIS	../sub/powerui/powerui_pmic.h	/^#define I2C_2V5_DIS /;"	d
I2C_2V5_EN	../sub/powerui/powerui_pmic.h	/^#define I2C_2V5_EN /;"	d
I2C_EN_GPIO_Port	../Core/Inc/main.h	/^#define I2C_EN_GPIO_Port /;"	d
I2C_EN_Pin	../Core/Inc/main.h	/^#define I2C_EN_Pin /;"	d
I2C_H_	../peripherals/i2c/i2c_peri.h	/^#define I2C_H_$/;"	d
I2C_MAX_PERIPH	../peripherals/i2c/i2c_peri.h	/^#define I2C_MAX_PERIPH	/;"	d
I2C_NOADDR	../peripherals/i2c/i2c_peri.h	/^static const uint32_t I2C_NOADDR = 0xFFFFFFFF;$/;"	v
I2C_TRANSFER_TIMEOUT	../peripherals/i2c/i2c_peri.h	/^static const uint32_t I2C_TRANSFER_TIMEOUT = 40;$/;"	v
I2S2_Init	wrappers/wrp_i2s.c	/^static void I2S2_Init(I2S_HandleTypeDef *hi2s, DMA_HandleTypeDef *hdma) {$/;"	f	file:
I2S_BUFFSZ	../peripherals/i2s/i2s_peri.h	/^#define I2S_BUFFSZ	/;"	d
I2S_H_	../peripherals/i2s/i2s_peri.h	/^#define I2S_H_$/;"	d
I2S_MAX_PERIPH	../peripherals/i2s/i2s_peri.h	/^#define I2S_MAX_PERIPH	/;"	d
I2S_RTOS_PRIORITY	../RTOS/rtos_config.h	/^static const int I2S_RTOS_PRIORITY = 5;$/;"	v
I2S_TRANSFER_TIMEOUT	../peripherals/i2s/i2s_peri.h	/^static const uint32_t I2S_TRANSFER_TIMEOUT = 5000;$/;"	v
I2cObject	../peripherals/i2c/i2c_peri.h	/^} I2cObject;$/;"	t	typeref:struct:__anon6
I2cTransaction	../peripherals/i2c/i2c_peri.h	/^} I2cTransaction;$/;"	t	typeref:struct:__anon5
I2sCmd	../peripherals/i2s/i2s_peri.h	/^} I2sCmd;$/;"	t	typeref:struct:__anon12
I2sObject	../peripherals/i2s/i2s_peri.h	/^} I2sObject;$/;"	t	typeref:struct:__anon13
IDLE	decoder/decoder.c	/^  IDLE,$/;"	e	enum:task_state	file:
INCLUDE_eTaskGetState	../Core/Inc/FreeRTOSConfig.h	/^#define INCLUDE_eTaskGetState /;"	d
INCLUDE_eTaskGetState	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define INCLUDE_eTaskGetState /;"	d
INCLUDE_uxTaskGetStackHighWaterMark	../Core/Inc/FreeRTOSConfig.h	/^#define INCLUDE_uxTaskGetStackHighWaterMark /;"	d
INCLUDE_uxTaskGetStackHighWaterMark	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define INCLUDE_uxTaskGetStackHighWaterMark /;"	d
INCLUDE_uxTaskGetStackHighWaterMark2	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define INCLUDE_uxTaskGetStackHighWaterMark2 /;"	d
INCLUDE_uxTaskPriorityGet	../Core/Inc/FreeRTOSConfig.h	/^#define INCLUDE_uxTaskPriorityGet /;"	d
INCLUDE_uxTaskPriorityGet	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define INCLUDE_uxTaskPriorityGet /;"	d
INCLUDE_vTaskCleanUpResources	../Core/Inc/FreeRTOSConfig.h	/^#define INCLUDE_vTaskCleanUpResources /;"	d
INCLUDE_vTaskDelay	../Core/Inc/FreeRTOSConfig.h	/^#define INCLUDE_vTaskDelay /;"	d
INCLUDE_vTaskDelay	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define INCLUDE_vTaskDelay /;"	d
INCLUDE_vTaskDelayUntil	../Core/Inc/FreeRTOSConfig.h	/^#define INCLUDE_vTaskDelayUntil /;"	d
INCLUDE_vTaskDelayUntil	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define INCLUDE_vTaskDelayUntil /;"	d
INCLUDE_vTaskDelete	../Core/Inc/FreeRTOSConfig.h	/^#define INCLUDE_vTaskDelete /;"	d
INCLUDE_vTaskDelete	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define INCLUDE_vTaskDelete /;"	d
INCLUDE_vTaskPrioritySet	../Core/Inc/FreeRTOSConfig.h	/^#define INCLUDE_vTaskPrioritySet /;"	d
INCLUDE_vTaskPrioritySet	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define INCLUDE_vTaskPrioritySet /;"	d
INCLUDE_vTaskSuspend	../Core/Inc/FreeRTOSConfig.h	/^#define INCLUDE_vTaskSuspend /;"	d
INCLUDE_vTaskSuspend	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define INCLUDE_vTaskSuspend /;"	d
INCLUDE_xQueueGetMutexHolder	../Core/Inc/FreeRTOSConfig.h	/^#define INCLUDE_xQueueGetMutexHolder /;"	d
INCLUDE_xQueueGetMutexHolder	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define INCLUDE_xQueueGetMutexHolder /;"	d
INCLUDE_xSemaphoreGetMutexHolder	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define INCLUDE_xSemaphoreGetMutexHolder /;"	d
INCLUDE_xTaskAbortDelay	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define INCLUDE_xTaskAbortDelay /;"	d
INCLUDE_xTaskGetCurrentTaskHandle	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define INCLUDE_xTaskGetCurrentTaskHandle /;"	d
INCLUDE_xTaskGetHandle	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define INCLUDE_xTaskGetHandle /;"	d
INCLUDE_xTaskGetIdleTaskHandle	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define INCLUDE_xTaskGetIdleTaskHandle /;"	d
INCLUDE_xTaskGetSchedulerState	../Core/Inc/FreeRTOSConfig.h	/^#define INCLUDE_xTaskGetSchedulerState /;"	d
INCLUDE_xTaskGetSchedulerState	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define INCLUDE_xTaskGetSchedulerState /;"	d
INCLUDE_xTaskResumeFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define INCLUDE_xTaskResumeFromISR /;"	d
INCLUDE_xTimerPendFunctionCall	../Core/Inc/FreeRTOSConfig.h	/^#define INCLUDE_xTimerPendFunctionCall /;"	d
INCLUDE_xTimerPendFunctionCall	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define INCLUDE_xTimerPendFunctionCall /;"	d
INC_FREERTOS_H	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^#define INC_FREERTOS_H$/;"	d
INC_TASK_H	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define INC_TASK_H$/;"	d
INDEPENDENT_3C	libfoxenflac/foxen/flac.c	/^	INDEPENDENT_3C = 2,$/;"	e	enum:__anon3	file:
INDEPENDENT_4C	libfoxenflac/foxen/flac.c	/^	INDEPENDENT_4C = 3,$/;"	e	enum:__anon3	file:
INDEPENDENT_5C	libfoxenflac/foxen/flac.c	/^	INDEPENDENT_5C = 4,$/;"	e	enum:__anon3	file:
INDEPENDENT_6C	libfoxenflac/foxen/flac.c	/^	INDEPENDENT_6C = 5,$/;"	e	enum:__anon3	file:
INDEPENDENT_7C	libfoxenflac/foxen/flac.c	/^	INDEPENDENT_7C = 6,$/;"	e	enum:__anon3	file:
INDEPENDENT_8C	libfoxenflac/foxen/flac.c	/^	INDEPENDENT_8C = 7,$/;"	e	enum:__anon3	file:
INDEPENDENT_MONO	libfoxenflac/foxen/flac.c	/^	INDEPENDENT_MONO = 0,$/;"	e	enum:__anon3	file:
INDEPENDENT_STEREO	libfoxenflac/foxen/flac.c	/^	INDEPENDENT_STEREO = 1,$/;"	e	enum:__anon3	file:
INSTRUCTION_CACHE_ENABLE	../Core/Inc/stm32f4xx_hal_conf.h	/^#define  INSTRUCTION_CACHE_ENABLE /;"	d
IS_IRQ	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^#define IS_IRQ(/;"	d	file:
IS_IRQ_MASKED	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^#define IS_IRQ_MASKED(/;"	d	file:
IS_IRQ_MODE	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^#define IS_IRQ_MODE(/;"	d	file:
Idle_Stack	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];$/;"	v	file:
Idle_TCB	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^static StaticTask_t Idle_TCB;$/;"	v	file:
KERNEL_ID	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^#define KERNEL_ID /;"	d	file:
KERNEL_VERSION	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^#define KERNEL_VERSION /;"	d	file:
KernelState	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^static osKernelState_t KernelState = osKernelInactive;$/;"	v	file:
LDO_val	../sub/powerui/powerui_types.h	/^    uint8_t LDO_val;$/;"	m	struct:__anon11
LEDAnim	../sub/powerui/powerui_types.h	/^} LEDAnim;$/;"	t	typeref:struct:__anon7
LEDAnimState	../sub/powerui/powerui_types.h	/^} LEDAnimState;$/;"	t	typeref:enum:__anon6
LEDAnimation	../sub/powerui/powerui_types.h	/^} LEDAnimation;$/;"	t	typeref:enum:__anon5
LED_ANIMATIONS	../sub/powerui/powerui_led.h	/^static LEDAnim LED_ANIMATIONS[PWRUI_LED_NUMANIM] = {$/;"	v
LED_ANIM_CHARGE_IND	../sub/powerui/powerui_led.h	/^static const uint8_t LED_ANIM_CHARGE_IND = 1;$/;"	v
LED_ANIM_LOWBAT_IND	../sub/powerui/powerui_led.h	/^static const uint8_t LED_ANIM_LOWBAT_IND = 2;$/;"	v
LED_ANIM_PAIR_IND	../sub/powerui/powerui_led.h	/^static const uint8_t LED_ANIM_PAIR_IND = 0;$/;"	v
LED_Anim_Charging	../sub/powerui/powerui_types.h	/^	LED_Anim_Charging,$/;"	e	enum:__anon5
LED_Anim_Lowbattery	../sub/powerui/powerui_types.h	/^	LED_Anim_Lowbattery,$/;"	e	enum:__anon5
LED_Anim_None	../sub/powerui/powerui_types.h	/^	LED_Anim_None,$/;"	e	enum:__anon5
LED_Anim_Pairing	../sub/powerui/powerui_types.h	/^	LED_Anim_Pairing,$/;"	e	enum:__anon5
LED_Animstate_downward	../sub/powerui/powerui_types.h	/^	LED_Animstate_downward,$/;"	e	enum:__anon6
LED_Animstate_upward	../sub/powerui/powerui_types.h	/^	LED_Animstate_upward,$/;"	e	enum:__anon6
LED_CMD_CHARGE_START	../sub/powerui/powerui_types.h	/^	LED_CMD_CHARGE_START,$/;"	e	enum:__anon8
LED_CMD_LOWBAT_START	../sub/powerui/powerui_types.h	/^	LED_CMD_LOWBAT_START,$/;"	e	enum:__anon8
LED_CMD_OFF	../sub/powerui/powerui_types.h	/^    LED_CMD_OFF,$/;"	e	enum:__anon8
LED_CMD_PAIR_START	../sub/powerui/powerui_types.h	/^	LED_CMD_PAIR_START,$/;"	e	enum:__anon8
LEFT_SIDE_STEREO	libfoxenflac/foxen/flac.c	/^	LEFT_SIDE_STEREO = 8,$/;"	e	enum:__anon3	file:
LIST_H	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^#define LIST_H$/;"	d
LP_SLEEP	../statemachine/statemachine_types.h	/^	LP_SLEEP,$/;"	e	enum:__anon3
LP_STOP	../statemachine/statemachine_types.h	/^	LP_STOP,$/;"	e	enum:__anon3
LSCNTRL_GPIO_Port	../Core/Inc/main.h	/^#define LSCNTRL_GPIO_Port /;"	d
LSCNTRL_Pin	../Core/Inc/main.h	/^#define LSCNTRL_Pin /;"	d
LSE_STARTUP_TIMEOUT	../Core/Inc/stm32f4xx_hal_conf.h	/^  #define LSE_STARTUP_TIMEOUT /;"	d
LSE_VALUE	../Core/Inc/stm32f4xx_hal_conf.h	/^ #define LSE_VALUE /;"	d
LSI_VALUE	../Core/Inc/stm32f4xx_hal_conf.h	/^ #define LSI_VALUE /;"	d
LS_EN_GPIO_Port	../Core/Inc/main.h	/^#define LS_EN_GPIO_Port /;"	d
LS_EN_Pin	../Core/Inc/main.h	/^#define LS_EN_Pin /;"	d
ListItem_t	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^typedef struct xLIST_ITEM ListItem_t;					\/* For some reason lint wants this as two separate definitions. *\/$/;"	t	typeref:struct:xLIST_ITEM
List_t	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^} List_t;$/;"	t	typeref:struct:xLIST
MAC_ADDR0	../Core/Inc/stm32f4xx_hal_conf.h	/^#define MAC_ADDR0 /;"	d
MAC_ADDR1	../Core/Inc/stm32f4xx_hal_conf.h	/^#define MAC_ADDR1 /;"	d
MAC_ADDR2	../Core/Inc/stm32f4xx_hal_conf.h	/^#define MAC_ADDR2 /;"	d
MAC_ADDR3	../Core/Inc/stm32f4xx_hal_conf.h	/^#define MAC_ADDR3 /;"	d
MAC_ADDR4	../Core/Inc/stm32f4xx_hal_conf.h	/^#define MAC_ADDR4 /;"	d
MAC_ADDR5	../Core/Inc/stm32f4xx_hal_conf.h	/^#define MAC_ADDR5 /;"	d
MAX_BITS_EVENT_GROUPS	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^#define MAX_BITS_EVENT_GROUPS /;"	d	file:
MAX_BITS_TASK_NOTIFY	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^#define MAX_BITS_TASK_NOTIFY /;"	d	file:
MBCmdItems	../RTOS/rtos.h	/^} MBCmdItems;$/;"	t	typeref:struct:__anon1
MEMCHUNK_TOTAL	../Core/Inc/mem_map.h	/^#define MEMCHUNK_TOTAL /;"	d
MEMMAP_CHUNK	../Core/Inc/mem_map.h	/^static const MemChunk MEMMAP_CHUNK[MEMCHUNK_TOTAL] =$/;"	v
MEM_BLOCK_WRITTEN	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_BLOCK_WRITTEN = 0;$/;"	v
MEM_BUFF_SIZE	../peripherals/memory/mem_peri.h	/^#define MEM_BUFF_SIZE /;"	d
MEM_BUFF_SIZE	unit_test/mocks/include/mem_peri.h	/^#define MEM_BUFF_SIZE /;"	d
MEM_CHE_TIMEMAX	../peripherals/memory/mem_peri.h	/^static const uint16_t MEM_CHE_TIMEMAX = 2400;$/;"	v
MEM_CHE_TIMEMAX	unit_test/mocks/include/mem_peri.h	/^static const uint16_t MEM_CHE_TIMEMAX = 2400;$/;"	v
MEM_CHUNKBLK_SIZE	../peripherals/memory/mem_peri.h	/^static const uint8_t MEM_CHUNKBLK_SIZE = 2;$/;"	v
MEM_CHUNKBLK_SIZE	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_CHUNKBLK_SIZE = 1;$/;"	v
MEM_CHUNK_EMPTY	../peripherals/memory/mem_peri.h	/^static const uint16_t MEM_CHUNK_EMPTY = 0xFFFF;$/;"	v
MEM_CHUNK_EMPTY	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_CHUNK_EMPTY = 0xFF;$/;"	v
MEM_CHUNK_MAXELEMENTS	unit_test/mocks/include/mem_peri.h	/^#define MEM_CHUNK_MAXELEMENTS /;"	d
MEM_CHUNK_MAXSECTORS	../peripherals/memory/mem_peri.h	/^#define MEM_CHUNK_MAXSECTORS /;"	d
MEM_CHUNK_MINELEMENTS	unit_test/mocks/include/mem_peri.h	/^#define MEM_CHUNK_MINELEMENTS /;"	d
MEM_CHUNK_MINSECTORS	../peripherals/memory/mem_peri.h	/^#define MEM_CHUNK_MINSECTORS /;"	d
MEM_CMD_CHE	../peripherals/memory/mem_peri.h	/^static const uint8_t MEM_CMD_CHE = 0x60;$/;"	v
MEM_CMD_CHE	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_CMD_CHE = 0x60;$/;"	v
MEM_CMD_DP	../peripherals/memory/mem_peri.h	/^static const uint8_t MEM_CMD_DP = 0xB9;$/;"	v
MEM_CMD_DP	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_CMD_DP = 0xB9;$/;"	v
MEM_CMD_PP	../peripherals/memory/mem_peri.h	/^static const uint8_t MEM_CMD_PP = 0x02;$/;"	v
MEM_CMD_PP	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_CMD_PP = 0x02;$/;"	v
MEM_CMD_RDLP	../peripherals/memory/mem_peri.h	/^static const uint8_t MEM_CMD_RDLP = 0x03;$/;"	v
MEM_CMD_RDLP	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_CMD_RDLP = 0x03;$/;"	v
MEM_CMD_RDSR	../peripherals/memory/mem_peri.h	/^static const uint8_t MEM_CMD_RDSR = 0x05;$/;"	v
MEM_CMD_RDSR	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_CMD_RDSR = 0x05;$/;"	v
MEM_CMD_RID	../peripherals/memory/mem_peri.h	/^static const uint8_t MEM_CMD_RID = 0xAB;$/;"	v
MEM_CMD_RID	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_CMD_RID = 0xAB;$/;"	v
MEM_CMD_RJID	../peripherals/memory/mem_peri.h	/^static const uint8_t MEM_CMD_RJID = 0x9F;$/;"	v
MEM_CMD_RJID	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_CMD_RJID = 0x9F;$/;"	v
MEM_CMD_RST	../peripherals/memory/mem_peri.h	/^static const uint8_t MEM_CMD_RST = 0x99;$/;"	v
MEM_CMD_RST	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_CMD_RST = 0x99;$/;"	v
MEM_CMD_RSTEN	../peripherals/memory/mem_peri.h	/^static const uint8_t MEM_CMD_RSTEN = 0x66;$/;"	v
MEM_CMD_RSTEN	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_CMD_RSTEN = 0x66;$/;"	v
MEM_CMD_SSE	../peripherals/memory/mem_peri.h	/^static const uint8_t MEM_CMD_SSE = 0x20;$/;"	v
MEM_CMD_SSE	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_CMD_SSE = 0x20;$/;"	v
MEM_CMD_WRDI	../peripherals/memory/mem_peri.h	/^static const uint8_t MEM_CMD_WRDI = 0x04;$/;"	v
MEM_CMD_WRDI	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_CMD_WRDI = 0x04;$/;"	v
MEM_CMD_WREN	../peripherals/memory/mem_peri.h	/^static const uint8_t MEM_CMD_WREN = 0x06;$/;"	v
MEM_CMD_WREN	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_CMD_WREN = 0x06;$/;"	v
MEM_CS1_GPIO_Port	../Core/Inc/main.h	/^#define MEM_CS1_GPIO_Port /;"	d
MEM_CS1_Pin	../Core/Inc/main.h	/^#define MEM_CS1_Pin /;"	d
MEM_CS2_GPIO_Port	../Core/Inc/main.h	/^#define MEM_CS2_GPIO_Port /;"	d
MEM_CS2_Pin	../Core/Inc/main.h	/^#define MEM_CS2_Pin /;"	d
MEM_ELEMBLK_OFFSET_MASK	../peripherals/memory/mem_peri.h	/^static const uint32_t MEM_ELEMBLK_OFFSET_MASK = 0xFFFFFE;$/;"	v
MEM_ELEMBLK_OFFSET_MASK	unit_test/mocks/include/mem_peri.h	/^static const uint32_t MEM_ELEMBLK_OFFSET_MASK = 0xFFFFFE;$/;"	v
MEM_ELEMBLK_OFFSET_SHIFT	../peripherals/memory/mem_peri.h	/^static const uint8_t MEM_ELEMBLK_OFFSET_SHIFT = 1;$/;"	v
MEM_ELEMBLK_OFFSET_SHIFT	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_ELEMBLK_OFFSET_SHIFT = 1;$/;"	v
MEM_ELEMBLK_SIZE	../peripherals/memory/mem_peri.h	/^static const uint8_t MEM_ELEMBLK_SIZE = 3;$/;"	v
MEM_ELEMBLK_SIZE	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_ELEMBLK_SIZE = 3;$/;"	v
MEM_ELEMBLK_WRITTEN_MASK	../peripherals/memory/mem_peri.h	/^static const uint32_t MEM_ELEMBLK_WRITTEN_MASK = 0x01;$/;"	v
MEM_ELEMBLK_WRITTEN_MASK	unit_test/mocks/include/mem_peri.h	/^static const uint32_t MEM_ELEMBLK_WRITTEN_MASK = 0x01;$/;"	v
MEM_END_ADDRESS	../peripherals/memory/mem_peri.h	/^static const size_t MEM_END_ADDRESS = 0x1DFFFF;     \/\/End of User memory$/;"	v
MEM_END_ADDRESS	unit_test/mocks/include/mem_peri.h	/^static const size_t MEM_END_ADDRESS = 0x1DFFFF;     \/\/End of User memory$/;"	v
MEM_H_	../peripherals/memory/mem_peri.h	/^#define MEM_H_$/;"	d
MEM_H_	unit_test/mocks/include/mem_peri.h	/^#define MEM_H_$/;"	d
MEM_MAP_H_	../Core/Inc/mem_map.h	/^#define MEM_MAP_H_$/;"	d
MEM_NVS_FAIL	../peripherals/memory/mem_peri.h	/^    MEM_NVS_FAIL = 0,$/;"	e	enum:__anon1
MEM_NVS_FAIL	unit_test/mocks/include/mem_peri.h	/^    MEM_NVS_FAIL = 0,$/;"	e	enum:__anon9
MEM_OP_FAIL	../peripherals/memory/mem_peri.h	/^    MEM_OP_FAIL,$/;"	e	enum:__anon1
MEM_OP_FAIL	unit_test/mocks/include/mem_peri.h	/^    MEM_OP_FAIL,$/;"	e	enum:__anon9
MEM_OP_SUCCESS	../peripherals/memory/mem_peri.h	/^    MEM_OP_SUCCESS$/;"	e	enum:__anon1
MEM_OP_SUCCESS	unit_test/mocks/include/mem_peri.h	/^    MEM_OP_SUCCESS$/;"	e	enum:__anon9
MEM_PD_TIME	../peripherals/memory/mem_peri.h	/^static const uint16_t MEM_PD_TIME = 1;$/;"	v
MEM_PD_TIME	unit_test/mocks/include/mem_peri.h	/^static const uint16_t MEM_PD_TIME = 1;$/;"	v
MEM_PP_MAXBYTES	../peripherals/memory/mem_peri.h	/^#define MEM_PP_MAXBYTES	/;"	d
MEM_PP_MAXBYTES	unit_test/mocks/include/mem_peri.h	/^#define MEM_PP_MAXBYTES	/;"	d
MEM_PP_TIMEOUT	../peripherals/memory/mem_peri.h	/^static const uint16_t MEM_PP_TIMEOUT = 10;$/;"	v
MEM_PP_TIMEOUT	unit_test/mocks/include/mem_peri.h	/^static const uint16_t MEM_PP_TIMEOUT = 10;$/;"	v
MEM_PP_TYPICAL	../peripherals/memory/mem_peri.h	/^static const uint16_t MEM_PP_TYPICAL = 1;$/;"	v
MEM_PP_TYPICAL	unit_test/mocks/include/mem_peri.h	/^static const uint16_t MEM_PP_TYPICAL = 1;$/;"	v
MEM_READ_MAXRETRIES	../peripherals/memory/mem_peri.h	/^static const uint16_t MEM_READ_MAXRETRIES = 5;$/;"	v
MEM_RPD_TIME	../peripherals/memory/mem_peri.h	/^static const uint16_t MEM_RPD_TIME = 1;$/;"	v
MEM_RPD_TIME	unit_test/mocks/include/mem_peri.h	/^static const uint16_t MEM_RPD_TIME = 1;$/;"	v
MEM_RSUS_TIME	../peripherals/memory/mem_peri.h	/^static const uint16_t MEM_RSUS_TIME = 1;$/;"	v
MEM_SECTORERASE_TIMEMAX	../peripherals/memory/mem_peri.h	/^static const uint16_t MEM_SECTORERASE_TIMEMAX = 120;$/;"	v
MEM_SECTORERASE_TIMEMAX	unit_test/mocks/include/mem_peri.h	/^static const uint16_t MEM_SECTORERASE_TIMEMAX = 120;$/;"	v
MEM_SECTORERASE_TIMEMIN	../peripherals/memory/mem_peri.h	/^static const uint16_t MEM_SECTORERASE_TIMEMIN = 70;$/;"	v
MEM_SECTOR_SIZE	../Core/Inc/mem_map.h	/^static const uint32_t MEM_SECTOR_SIZE = 4096;$/;"	v
MEM_START_ADDRESS	../peripherals/memory/mem_peri.h	/^static const size_t MEM_START_ADDRESS = 0x0000;     \/\/Start of User memory$/;"	v
MEM_START_ADDRESS	unit_test/mocks/include/mem_peri.h	/^static const size_t MEM_START_ADDRESS = 0x0000;     \/\/Start of User memory$/;"	v
MEM_STATBIT_RDY	../peripherals/memory/mem_peri.h	/^static const uint8_t MEM_STATBIT_RDY = 0;$/;"	v
MEM_STATBIT_RDY	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_STATBIT_RDY = 0;$/;"	v
MEM_STATBIT_WEN	../peripherals/memory/mem_peri.h	/^static const uint8_t MEM_STATBIT_WEN = 1;$/;"	v
MEM_STATBIT_WEN	unit_test/mocks/include/mem_peri.h	/^static const uint8_t MEM_STATBIT_WEN = 1;$/;"	v
MEM_TOTAL_SIZE	../Core/Inc/mem_map.h	/^static const uint32_t MEM_TOTAL_SIZE = 0x200000;$/;"	v
META_TYPE_APPLICATION	libfoxenflac/foxen/flac.c	/^	META_TYPE_APPLICATION = 2,$/;"	e	enum:__anon1	file:
META_TYPE_CUESHEET	libfoxenflac/foxen/flac.c	/^	META_TYPE_CUESHEET = 5,$/;"	e	enum:__anon1	file:
META_TYPE_INVALID	libfoxenflac/foxen/flac.c	/^	META_TYPE_INVALID = 127$/;"	e	enum:__anon1	file:
META_TYPE_PADDING	libfoxenflac/foxen/flac.c	/^	META_TYPE_PADDING = 1,$/;"	e	enum:__anon1	file:
META_TYPE_PICTURE	libfoxenflac/foxen/flac.c	/^	META_TYPE_PICTURE = 6,$/;"	e	enum:__anon1	file:
META_TYPE_SEEKTABLE	libfoxenflac/foxen/flac.c	/^	META_TYPE_SEEKTABLE = 3,$/;"	e	enum:__anon1	file:
META_TYPE_STREAMINFO	libfoxenflac/foxen/flac.c	/^	META_TYPE_STREAMINFO = 0,$/;"	e	enum:__anon1	file:
META_TYPE_VORBIS_COMMENT	libfoxenflac/foxen/flac.c	/^	META_TYPE_VORBIS_COMMENT = 4,$/;"	e	enum:__anon1	file:
MID_SIDE_STEREO	libfoxenflac/foxen/flac.c	/^	MID_SIDE_STEREO = 10,$/;"	e	enum:__anon3	file:
MPU_PROTOTYPES_H	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_prototypes.h	/^#define MPU_PROTOTYPES_H$/;"	d
MPU_WRAPPERS_H	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^#define MPU_WRAPPERS_H$/;"	d
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^#define MPU_WRAPPERS_INCLUDED_FROM_API_FILE$/;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^#undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^#define MPU_WRAPPERS_INCLUDED_FROM_API_FILE$/;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^#undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE$/;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^#define MPU_WRAPPERS_INCLUDED_FROM_API_FILE$/;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^#undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^#define MPU_WRAPPERS_INCLUDED_FROM_API_FILE$/;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^#undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^#define MPU_WRAPPERS_INCLUDED_FROM_API_FILE$/;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^#undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^#define MPU_WRAPPERS_INCLUDED_FROM_API_FILE$/;"	d	file:
MPU_WRAPPERS_INCLUDED_FROM_API_FILE	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^#undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /;"	d	file:
MX_DMA_Init	../Core/Inc/dma.h	/^void MX_DMA_Init(void);$/;"	p
MX_DMA_Init	../Core/Src/dma.c	/^void MX_DMA_Init(void) $/;"	f
MX_FREERTOS_Init	../Core/Src/freertos.c	/^void MX_FREERTOS_Init(void) {$/;"	f
MX_FREERTOS_Init	../Core/Src/freertos.c	/^void MX_FREERTOS_Init(void); \/* (MISRA C 2004 rule 8.1) *\/$/;"	p	file:
MX_FREERTOS_Init	../Core/Src/main.c	/^void MX_FREERTOS_Init(void);$/;"	p	file:
MX_GPIO_Init	../Core/Inc/gpio.h	/^void MX_GPIO_Init(void);$/;"	p
MX_GPIO_Init	../Core/Src/gpio.c	/^void MX_GPIO_Init(void)$/;"	f
MX_I2C1_Init	../Core/Inc/i2c.h	/^void MX_I2C1_Init(void);$/;"	p
MX_I2C1_Init	../Core/Src/i2c.c	/^void MX_I2C1_Init(void)$/;"	f
MX_I2S3_Init	../Core/Inc/i2s.h	/^void MX_I2S3_Init(void);$/;"	p
MX_I2S3_Init	../Core/Src/i2s.c	/^void MX_I2S3_Init(void)$/;"	f
MX_IWDG_Init	../Core/Inc/iwdg.h	/^void MX_IWDG_Init(void);$/;"	p
MX_IWDG_Init	../Core/Src/iwdg.c	/^void MX_IWDG_Init(void)$/;"	f
MX_RTC_Init	../Core/Inc/rtc.h	/^void MX_RTC_Init(void);$/;"	p
MX_RTC_Init	../Core/Src/rtc.c	/^void MX_RTC_Init(void)$/;"	f
MX_SPI1_Init	../Core/Inc/spi.h	/^void MX_SPI1_Init(void);$/;"	p
MX_SPI1_Init	../Core/Src/spi.c	/^void MX_SPI1_Init(void)$/;"	f
MX_SPI2_Init	../Core/Inc/spi.h	/^void MX_SPI2_Init(void);$/;"	p
MX_SPI2_Init	../Core/Src/spi.c	/^void MX_SPI2_Init(void)$/;"	f
MX_USART1_UART_Init	../Core/Inc/usart.h	/^void MX_USART1_UART_Init(void);$/;"	p
MX_USART1_UART_Init	../Core/Src/usart.c	/^void MX_USART1_UART_Init(void)$/;"	f
MX_USART2_UART_Init	../Core/Inc/usart.h	/^void MX_USART2_UART_Init(void);$/;"	p
MX_USART2_UART_Init	../Core/Src/usart.c	/^void MX_USART2_UART_Init(void)$/;"	f
MemChunk	../peripherals/memory/mem_peri.h	/^} MemChunk;$/;"	t	typeref:struct:__anon2
MemChunk	unit_test/mocks/include/mem_peri.h	/^} MemChunk;$/;"	t	typeref:struct:__anon10
MemElement	../peripherals/memory/mem_peri.h	/^} MemElement;$/;"	t	typeref:struct:__anon3
MemElement	unit_test/mocks/include/mem_peri.h	/^} MemElement;$/;"	t	typeref:struct:__anon11
MemManage_Handler	../Core/Inc/stm32f4xx_it.h	/^void MemManage_Handler(void);$/;"	p
MemManage_Handler	../Core/Src/stm32f4xx_it.c	/^void MemManage_Handler(void)$/;"	f
MemObject	../peripherals/memory/mem_peri.h	/^} MemObject;$/;"	t	typeref:struct:__anon4
MemObject	unit_test/mocks/include/mem_peri.h	/^} MemObject;$/;"	t	typeref:struct:__anon12
MemOpStatus	../peripherals/memory/mem_peri.h	/^} MemOpStatus;$/;"	t	typeref:enum:__anon1
MemOpStatus	unit_test/mocks/include/mem_peri.h	/^} MemOpStatus;$/;"	t	typeref:enum:__anon9
MemoryRegion_t	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^} MemoryRegion_t;$/;"	t	typeref:struct:xMEMORY_REGION
MessageBufferHandle_t	../Middlewares/Third_Party/FreeRTOS/Source/include/message_buffer.h	/^typedef void * MessageBufferHandle_t;$/;"	t
MiniListItem_t	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^typedef struct xMINI_LIST_ITEM MiniListItem_t;$/;"	t	typeref:struct:xMINI_LIST_ITEM
NCP_I2C_ADDR	../sub/powerui/powerui_led.h	/^static const uint8_t NCP_I2C_ADDR = 0x38;$/;"	v
NCP_LEDCH_B	../sub/powerui/powerui_led.h	/^static const uint8_t NCP_LEDCH_B = 1;$/;"	v
NCP_LEDCH_R	../sub/powerui/powerui_led.h	/^static const uint8_t NCP_LEDCH_R = 0;$/;"	v
NCP_LEDCH_W	../sub/powerui/powerui_led.h	/^static const uint8_t NCP_LEDCH_W = 2;$/;"	v
NCP_MAX_LEDCH	../sub/powerui/powerui_led.h	/^static const uint8_t NCP_MAX_LEDCH = 3;$/;"	v
NCP_MAX_PWM	../sub/powerui/powerui_led.h	/^static const uint8_t NCP_MAX_PWM = 0x1F;$/;"	v
NCP_MAX_STEPS	../sub/powerui/powerui_led.h	/^static const uint8_t NCP_MAX_STEPS = 0x1F;$/;"	v
NCP_REG_CSHUTDOWN	../sub/powerui/powerui_led.h	/^#define NCP_REG_CSHUTDOWN /;"	d
NCP_REG_CURRSTEP	../sub/powerui/powerui_led.h	/^#define NCP_REG_CURRSTEP /;"	d
NCP_REG_IENDDWN	../sub/powerui/powerui_led.h	/^#define NCP_REG_IENDDWN /;"	d
NCP_REG_IENDUP	../sub/powerui/powerui_led.h	/^#define NCP_REG_IENDUP /;"	d
NCP_REG_LEDPWMBASE	../sub/powerui/powerui_led.h	/^#define NCP_REG_LEDPWMBASE /;"	d
NCP_REG_LEDREGJUMP	../sub/powerui/powerui_led.h	/^#define NCP_REG_LEDREGJUMP /;"	d
NCP_REG_STEPTIME	../sub/powerui/powerui_led.h	/^#define NCP_REG_STEPTIME /;"	d
NMI_Handler	../Core/Inc/stm32f4xx_it.h	/^void NMI_Handler(void);$/;"	p
NMI_Handler	../Core/Src/stm32f4xx_it.c	/^void NMI_Handler(void)$/;"	f
OAD_HASHVERIFY_CALCMISMATCH	../peripherals/memory/mem_peri.h	/^#define OAD_HASHVERIFY_CALCMISMATCH	/;"	d
OAD_HASHVERIFY_CALCMISMATCH	unit_test/mocks/include/mem_peri.h	/^#define OAD_HASHVERIFY_CALCMISMATCH	/;"	d
OAD_HASHVERIFY_HASHPROCERR	../peripherals/memory/mem_peri.h	/^#define OAD_HASHVERIFY_HASHPROCERR	/;"	d
OAD_HASHVERIFY_HASHPROCERR	unit_test/mocks/include/mem_peri.h	/^#define OAD_HASHVERIFY_HASHPROCERR	/;"	d
OAD_HASHVERIFY_RECMISMATCH	../peripherals/memory/mem_peri.h	/^#define OAD_HASHVERIFY_RECMISMATCH	/;"	d
OAD_HASHVERIFY_RECMISMATCH	unit_test/mocks/include/mem_peri.h	/^#define OAD_HASHVERIFY_RECMISMATCH	/;"	d
OAD_HASHVERIFY_SUCCESS	../peripherals/memory/mem_peri.h	/^#define OAD_HASHVERIFY_SUCCESS	/;"	d
OAD_HASHVERIFY_SUCCESS	unit_test/mocks/include/mem_peri.h	/^#define OAD_HASHVERIFY_SUCCESS	/;"	d
OAD_IMAGE_HEADER_HASHOFFS	../peripherals/memory/mem_peri.h	/^#define OAD_IMAGE_HEADER_HASHOFFS	/;"	d
OAD_IMAGE_HEADER_HASHOFFS	unit_test/mocks/include/mem_peri.h	/^#define OAD_IMAGE_HEADER_HASHOFFS	/;"	d
OAD_IMAGE_HEADER_HASHSZ	../peripherals/memory/mem_peri.h	/^#define OAD_IMAGE_HEADER_HASHSZ	/;"	d
OAD_IMAGE_HEADER_HASHSZ	unit_test/mocks/include/mem_peri.h	/^#define OAD_IMAGE_HEADER_HASHSZ	/;"	d
OAD_IMAGE_HEADER_SIZE	../peripherals/memory/mem_peri.h	/^#define OAD_IMAGE_HEADER_SIZE	/;"	d
OAD_IMAGE_HEADER_SIZE	unit_test/mocks/include/mem_peri.h	/^#define OAD_IMAGE_HEADER_SIZE	/;"	d
P	libfoxenflac/test/test_flac_integration.c	/^	const char *P = "flac -d '";$/;"	l
PBIN_EXTI_IRQn	../Core/Inc/main.h	/^#define PBIN_EXTI_IRQn /;"	d
PBIN_GPIO_Port	../Core/Inc/main.h	/^#define PBIN_GPIO_Port /;"	d
PBIN_Pin	../Core/Inc/main.h	/^#define PBIN_Pin /;"	d
PBStatus	../sub/powerui/powerui_types.h	/^} PBStatus;$/;"	t	typeref:enum:__anon4
PB_10t20SPRESS_PERIOD	../sub/powerui/powerui_pb.h	/^static const uint32_t PB_10t20SPRESS_PERIOD = 10000;$/;"	v
PB_3SPRESS_PERIOD	../sub/powerui/powerui_pb.h	/^static const uint32_t PB_3SPRESS_PERIOD = 3000;$/;"	v
PB_3t6SPRESS_PERIOD	../sub/powerui/powerui_pb.h	/^static const uint32_t PB_3t6SPRESS_PERIOD = 3000;$/;"	v
PB_6t10SPRESS_PERIOD	../sub/powerui/powerui_pb.h	/^static const uint32_t PB_6t10SPRESS_PERIOD = 4000;$/;"	v
PB_LongPress_10s	../sub/powerui/powerui_types.h	/^	PB_LongPress_10s,$/;"	e	enum:__anon4
PB_LongPress_20s	../sub/powerui/powerui_types.h	/^	PB_LongPress_20s,$/;"	e	enum:__anon4
PB_LongPress_3s	../sub/powerui/powerui_types.h	/^	PB_LongPress_3s,$/;"	e	enum:__anon4
PB_LongPress_6s	../sub/powerui/powerui_types.h	/^	PB_LongPress_6s,$/;"	e	enum:__anon4
PB_NoClick	../sub/powerui/powerui_types.h	/^    PB_NoClick = 0,$/;"	e	enum:__anon4
PB_PRESSENABLE_PERIOD	../sub/powerui/powerui_pb.h	/^static const uint32_t PB_PRESSENABLE_PERIOD = 50;$/;"	v
PB_SingleClick	../sub/powerui/powerui_types.h	/^    PB_SingleClick,$/;"	e	enum:__anon4
PEEK_BITS	libfoxenflac/foxen/flac.c	/^#define PEEK_BITS(/;"	d	file:
PERIPHERALS_PERIPHERALS_H_	../peripherals/peripherals.h	/^#define PERIPHERALS_PERIPHERALS_H_$/;"	d
PHY_AUTONEGOTIATION	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_AUTONEGOTIATION /;"	d
PHY_AUTONEGO_COMPLETE	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_AUTONEGO_COMPLETE /;"	d
PHY_BCR	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_BCR /;"	d
PHY_BSR	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_BSR /;"	d
PHY_CONFIG_DELAY	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_CONFIG_DELAY /;"	d
PHY_DUPLEX_STATUS	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_DUPLEX_STATUS /;"	d
PHY_FULLDUPLEX_100M	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_FULLDUPLEX_100M /;"	d
PHY_FULLDUPLEX_10M	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_FULLDUPLEX_10M /;"	d
PHY_HALFDUPLEX_100M	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_HALFDUPLEX_100M /;"	d
PHY_HALFDUPLEX_10M	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_HALFDUPLEX_10M /;"	d
PHY_ISOLATE	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_ISOLATE /;"	d
PHY_JABBER_DETECTION	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_JABBER_DETECTION /;"	d
PHY_LINKED_STATUS	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_LINKED_STATUS /;"	d
PHY_LOOPBACK	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_LOOPBACK /;"	d
PHY_POWERDOWN	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_POWERDOWN /;"	d
PHY_READ_TO	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_READ_TO /;"	d
PHY_RESET	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_RESET /;"	d
PHY_RESET_DELAY	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_RESET_DELAY /;"	d
PHY_RESTART_AUTONEGOTIATION	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_RESTART_AUTONEGOTIATION /;"	d
PHY_SPEED_STATUS	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_SPEED_STATUS /;"	d
PHY_SR	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_SR /;"	d
PHY_WRITE_TO	../Core/Inc/stm32f4xx_hal_conf.h	/^#define PHY_WRITE_TO /;"	d
PM_INT_GPIO_Port	../Core/Inc/main.h	/^#define PM_INT_GPIO_Port /;"	d
PM_INT_Pin	../Core/Inc/main.h	/^#define PM_INT_Pin /;"	d
PORTABLE_H	../Middlewares/Third_Party/FreeRTOS/Source/include/portable.h	/^#define PORTABLE_H$/;"	d
POWERUI_FRAME_H_	../sub/powerui/powerui_frame.h	/^#define POWERUI_FRAME_H_$/;"	d
POWERUI_H_	../sub/powerui/powerui.h	/^#define POWERUI_H_$/;"	d
POWERUI_LED_H_	../sub/powerui/powerui_led.h	/^#define POWERUI_LED_H_$/;"	d
POWERUI_PB_H_	../sub/powerui/powerui_pb.h	/^#define POWERUI_PB_H_$/;"	d
POWERUI_PMIC_H_	../sub/powerui/powerui_pmic.h	/^#define POWERUI_PMIC_H_$/;"	d
POWERUI_TYPES_H_	../sub/powerui/powerui_types.h	/^#define POWERUI_TYPES_H_$/;"	d
POWER_MB_SIZE	../sub/powerui/powerui.h	/^#define POWER_MB_SIZE /;"	d
POWER_STACK_SIZE	../RTOS/rtos_config.h	/^#define POWER_STACK_SIZE /;"	d
PREFETCH_ENABLE	../Core/Inc/stm32f4xx_hal_conf.h	/^#define  PREFETCH_ENABLE /;"	d
PRIVILEGED_DATA	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define PRIVILEGED_DATA /;"	d
PRIVILEGED_DATA	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^	#define PRIVILEGED_DATA$/;"	d
PRIVILEGED_FUNCTION	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define PRIVILEGED_FUNCTION /;"	d
PRIVILEGED_FUNCTION	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define PRIVILEGED_FUNCTION$/;"	d
PRIVILEGED_FUNCTION	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^	#define PRIVILEGED_FUNCTION$/;"	d
PROJDEFS_H	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define PROJDEFS_H$/;"	d
PWRUI_CFG_MEMELEM_INDEX	../sub/powerui/powerui_pmic.h	/^static const uint16_t PWRUI_CFG_MEMELEM_INDEX = 0;$/;"	v
PWRUI_CMD_INIT	../sub/powerui/powerui_types.h	/^    PWRUI_CMD_INIT = 0,$/;"	e	enum:__anon8
PWRUI_I2C_RWSIZE	../sub/powerui/powerui.h	/^#define PWRUI_I2C_RWSIZE /;"	d
PWRUI_LEDANIM_MEMELEM_INDEX	../sub/powerui/powerui_led.h	/^static const uint16_t PWRUI_LEDANIM_MEMELEM_INDEX = 0;$/;"	v
PWRUI_LEDANIM_RETRIES	../sub/powerui/powerui_led.h	/^static const uint16_t PWRUI_LEDANIM_RETRIES = 3;$/;"	v
PWRUI_LED_NUMANIM	../sub/powerui/powerui_led.h	/^#define PWRUI_LED_NUMANIM	/;"	d
PWRUI_MEMCHUNK_LED_IND	../sub/powerui/powerui_led.h	/^static const uint16_t PWRUI_MEMCHUNK_LED_IND = 6;$/;"	v
PWRUI_MEMCHUNK_PWRUI_IND	../sub/powerui/powerui_pmic.h	/^static const uint16_t PWRUI_MEMCHUNK_PWRUI_IND = 5;$/;"	v
PWRUI_RTOS_PRIORITY	../RTOS/rtos_config.h	/^static const int PWRUI_RTOS_PRIORITY = 4;$/;"	v
PWR_CMD_ENTERSHIP	../sub/powerui/powerui_types.h	/^	PWR_CMD_ENTERSHIP,$/;"	e	enum:__anon8
PWR_CMD_LSLDO_DIS	../sub/powerui/powerui_types.h	/^    PWR_CMD_LSLDO_DIS,$/;"	e	enum:__anon8
PWR_CMD_LSLDO_EN	../sub/powerui/powerui_types.h	/^    PWR_CMD_LSLDO_EN,$/;"	e	enum:__anon8
PWR_CMD_LS_DIS	../sub/powerui/powerui_types.h	/^    PWR_CMD_LS_DIS,$/;"	e	enum:__anon8
PWR_CMD_LS_EN	../sub/powerui/powerui_types.h	/^    PWR_CMD_LS_EN,$/;"	e	enum:__anon8
PWR_I2C_RETRIES	../sub/powerui/powerui.h	/^#define PWR_I2C_RETRIES /;"	d
PWR_STATUPD_PERIODMS	../sub/powerui/powerui_pmic.h	/^static const uint32_t PWR_STATUPD_PERIODMS = 5000;$/;"	v
PendedFunction_t	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^typedef void (*PendedFunction_t)( void *, uint32_t );$/;"	t
PeriObject	../peripherals/peripherals.h	/^} PeriObject;$/;"	t	typeref:struct:__anon11
PeriphClkInitStruct	../Core/Src/main.c	/^  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};$/;"	l
PowerUICmd	../sub/powerui/powerui_types.h	/^} PowerUICmd;$/;"	t	typeref:struct:__anon10
PowerUICmdType	../sub/powerui/powerui_types.h	/^} PowerUICmdType;$/;"	t	typeref:enum:__anon8
PowerUIState	../sub/powerui/powerui_types.h	/^} PowerUIState;$/;"	t	typeref:struct:__anon11
QUEUE_H	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define QUEUE_H$/;"	d
QUEUE_REGISTRY_ITEM	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	typedef struct QUEUE_REGISTRY_ITEM$/;"	s	file:
QueueDefinition	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^struct QueueDefinition; \/* Using old naming convention so as not to break kernel aware debuggers. *\/$/;"	x
QueueDefinition	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^typedef struct QueueDefinition 		\/* The old naming convention is used to prevent breaking kernel aware debuggers. *\/$/;"	s	file:
QueueHandle_t	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^typedef struct QueueDefinition * QueueHandle_t;$/;"	t	typeref:struct:QueueDefinition
QueuePointers	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^typedef struct QueuePointers$/;"	s	file:
QueuePointers_t	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^} QueuePointers_t;$/;"	t	typeref:struct:QueuePointers	file:
QueueRegistryItem_t	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	typedef xQueueRegistryItem QueueRegistryItem_t;$/;"	t	file:
QueueSetHandle_t	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^typedef struct QueueDefinition * QueueSetHandle_t;$/;"	t	typeref:struct:QueueDefinition
QueueSetMemberHandle_t	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^typedef struct QueueDefinition * QueueSetMemberHandle_t;$/;"	t	typeref:struct:QueueDefinition
Queue_t	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^typedef xQUEUE Queue_t;$/;"	t	file:
RAW_BUF_SIZE	audio_clip_defs.h	/^#define RAW_BUF_SIZE /;"	d
RCC_ClkInitStruct	../Core/Src/main.c	/^  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};$/;"	l
RCC_OscInitStruct	../Core/Src/main.c	/^  RCC_OscInitTypeDef RCC_OscInitStruct = {0};$/;"	l
READ_BITS	libfoxenflac/foxen/flac.c	/^#define READ_BITS(/;"	d	file:
READ_BITS_CRC	libfoxenflac/foxen/flac.c	/^#define READ_BITS_CRC(/;"	d	file:
READ_BITS_DCRC	libfoxenflac/foxen/flac.c	/^#define READ_BITS_DCRC(/;"	d	file:
READ_BITS_FAST	libfoxenflac/foxen/flac.c	/^#define READ_BITS_FAST(/;"	d	file:
READ_BITS_FAST_CRC	libfoxenflac/foxen/flac.c	/^#define READ_BITS_FAST_CRC(/;"	d	file:
READ_BITS_FAST_DCRC	libfoxenflac/foxen/flac.c	/^#define READ_BITS_FAST_DCRC(/;"	d	file:
RES_RESERVED_1	libfoxenflac/foxen/flac.c	/^	RES_RESERVED_1 = 2,$/;"	e	enum:__anon8	file:
RES_RESERVED_2	libfoxenflac/foxen/flac.c	/^	RES_RESERVED_2 = 3$/;"	e	enum:__anon8	file:
RES_RICE	libfoxenflac/foxen/flac.c	/^	RES_RICE = 0,$/;"	e	enum:__anon8	file:
RES_RICE2	libfoxenflac/foxen/flac.c	/^	RES_RICE2 = 1,$/;"	e	enum:__anon8	file:
RIGHT_SIDE_STEREO	libfoxenflac/foxen/flac.c	/^	RIGHT_SIDE_STEREO = 9,$/;"	e	enum:__anon3	file:
RING_BUF_SIZE	audio_clip_defs.h	/^#define RING_BUF_SIZE /;"	d
RING_THRSH	audio_clip_defs.h	/^#define RING_THRSH /;"	d
RTC_WKUP_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void RTC_WKUP_IRQHandler(void);$/;"	p
RTC_WKUP_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void RTC_WKUP_IRQHandler(void)$/;"	f
RTOS_CONFIG_H_	../RTOS/rtos_config.h	/^#define RTOS_CONFIG_H_$/;"	d
RTOS_ID_n	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define RTOS_ID_n /;"	d
RTOS_ID_s	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define RTOS_ID_s /;"	d
RTOS_RTOS_H_	../RTOS/rtos.h	/^#define RTOS_RTOS_H_$/;"	d
S	libfoxenflac/test/test_flac_integration.c	/^	const char *S =$/;"	l
SEMAPHORE_H	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^#define SEMAPHORE_H$/;"	d
SERIAL_RTOS_PRIORITY	../RTOS/rtos_config.h	/^static const int SERIAL_RTOS_PRIORITY = 4;$/;"	v
SERIAL_STACKSIZE	../RTOS/rtos_config.h	/^#define SERIAL_STACKSIZE	/;"	d
SFT_CONSTANT	libfoxenflac/foxen/flac.c	/^	SFT_CONSTANT,$/;"	e	enum:__anon7	file:
SFT_FIXED	libfoxenflac/foxen/flac.c	/^	SFT_FIXED,$/;"	e	enum:__anon7	file:
SFT_LPC	libfoxenflac/foxen/flac.c	/^	SFT_LPC$/;"	e	enum:__anon7	file:
SFT_VERBATIM	libfoxenflac/foxen/flac.c	/^	SFT_VERBATIM,$/;"	e	enum:__anon7	file:
SHA_H_	../peripherals/memory/sha-256.h	/^#define SHA_H_$/;"	d
SIGN_EXTEND	libfoxenflac/foxen/flac.c	/^#define SIGN_EXTEND(/;"	d	file:
SIGN_EXTEND	libfoxenflac/test/test_flac_integration.c	/^#define SIGN_EXTEND(/;"	d	file:
SM_BATCRITICAL_PERCENT	../statemachine/statemachine.h	/^static const int8_t SM_BATCRITICAL_PERCENT = 10;$/;"	v
SM_BATLOW_PERCENT	../statemachine/statemachine.h	/^static const int8_t SM_BATLOW_PERCENT = 20;$/;"	v
SM_FACTORYRST_EQ_ELEMIND	../statemachine/statemachine.h	/^static const uint8_t SM_FACTORYRST_EQ_ELEMIND = 5;$/;"	v
SM_FACTORYRST_INVOLADJ_ELEMIND	../statemachine/statemachine.h	/^static const uint8_t SM_FACTORYRST_INVOLADJ_ELEMIND = 2;$/;"	v
SM_FACTORYRST_INVOL_ELEMIND	../statemachine/statemachine.h	/^static const uint8_t SM_FACTORYRST_INVOL_ELEMIND = 1;$/;"	v
SM_FACTORYRST_OUTVOLADJ_ELEMIND	../statemachine/statemachine.h	/^static const uint8_t SM_FACTORYRST_OUTVOLADJ_ELEMIND = 4;$/;"	v
SM_FACTORYRST_OUTVOL_ELEMIND	../statemachine/statemachine.h	/^static const uint8_t SM_FACTORYRST_OUTVOL_ELEMIND = 3;$/;"	v
SM_FACTORYRST_SYSDETAIL_ELEMIND	../statemachine/statemachine.h	/^static const uint8_t SM_FACTORYRST_SYSDETAIL_ELEMIND = 0;$/;"	v
SM_LOOP_PERIODMS	../statemachine/statemachine.h	/^static const uint16_t SM_LOOP_PERIODMS = 200;$/;"	v
SM_LOWPOWER_PERCENT	../statemachine/statemachine.h	/^static const int8_t SM_LOWPOWER_PERCENT = 0;$/;"	v
SM_MEMCHUNK_FACTORYRST_IND	../statemachine/statemachine.h	/^static const uint8_t SM_MEMCHUNK_FACTORYRST_IND = 7;$/;"	v
SM_MEMCHUNK_SYSDETAIL_IND	../statemachine/statemachine.h	/^static const uint8_t SM_MEMCHUNK_SYSDETAIL_IND = 8;$/;"	v
SM_RTOS_PRIORITY	../RTOS/rtos_config.h	/^static const int SM_RTOS_PRIORITY = 1;$/;"	v
SM_STACKSIZE	../RTOS/rtos_config.h	/^#define SM_STACKSIZE /;"	d
SPI1_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void SPI1_IRQHandler(void);$/;"	p
SPI1_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void SPI1_IRQHandler(void)$/;"	f
SPI2_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void SPI2_IRQHandler(void);$/;"	p
SPI2_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void SPI2_IRQHandler(void)$/;"	f
SPI_H_	../peripherals/spi/spi_peri.h	/^#define SPI_H_$/;"	d
SPI_HandleTypeDef	unit_test/mocks/include/mem_peri.h	/^typedef void* SPI_HandleTypeDef;$/;"	t
SPI_MAX_PERIPH	../peripherals/spi/spi_peri.h	/^#define SPI_MAX_PERIPH	/;"	d
SPI_READ	../peripherals/spi/spi_peri.h	/^	SPI_READ = 0,$/;"	e	enum:__anon7
SPI_RW	../peripherals/spi/spi_peri.h	/^	SPI_RW$/;"	e	enum:__anon7
SPI_TRANSFER_TIMEOUT	../peripherals/spi/spi_peri.h	/^static const uint32_t SPI_TRANSFER_TIMEOUT = 10;$/;"	v
SPI_WRITE	../peripherals/spi/spi_peri.h	/^	SPI_WRITE,$/;"	e	enum:__anon7
SS_12BIT	libfoxenflac/foxen/flac.c	/^	SS_12BIT = 2,$/;"	e	enum:__anon6	file:
SS_16BIT	libfoxenflac/foxen/flac.c	/^	SS_16BIT = 4,$/;"	e	enum:__anon6	file:
SS_20BIT	libfoxenflac/foxen/flac.c	/^	SS_20BIT = 5,$/;"	e	enum:__anon6	file:
SS_24BIT	libfoxenflac/foxen/flac.c	/^	SS_24BIT = 6,$/;"	e	enum:__anon6	file:
SS_8BIT	libfoxenflac/foxen/flac.c	/^	SS_8BIT = 1,$/;"	e	enum:__anon6	file:
SS_RESERVED_1	libfoxenflac/foxen/flac.c	/^	SS_RESERVED_1 = 3,$/;"	e	enum:__anon6	file:
SS_RESERVED_2	libfoxenflac/foxen/flac.c	/^	SS_RESERVED_2 = 7$/;"	e	enum:__anon6	file:
SS_STREAMINFO	libfoxenflac/foxen/flac.c	/^	SS_STREAMINFO = 0,$/;"	e	enum:__anon6	file:
STACK_MACROS_H	../Middlewares/Third_Party/FreeRTOS/Source/include/StackMacros.h	/^#define STACK_MACROS_H$/;"	d
STACK_MACROS_H	../Middlewares/Third_Party/FreeRTOS/Source/include/stack_macros.h	/^#define STACK_MACROS_H$/;"	d
STATEMACHINE_H_	../statemachine/statemachine.h	/^#define STATEMACHINE_H_$/;"	d
STATEMACHINE_TYPES_H_	../statemachine/statemachine_types.h	/^#define STATEMACHINE_TYPES_H_$/;"	d
STATE_ACTIVE	../statemachine/statemachine_types.h	/^	STATE_ACTIVE,$/;"	e	enum:__anon2
STATE_ENTERACTIVE	../statemachine/statemachine_types.h	/^	STATE_ENTERACTIVE,$/;"	e	enum:__anon2
STATE_ENTERLOWPOWER	../statemachine/statemachine_types.h	/^	STATE_ENTERLOWPOWER,$/;"	e	enum:__anon2
STATE_ENTERSLEEP	../statemachine/statemachine_types.h	/^	STATE_ENTERSLEEP,$/;"	e	enum:__anon2
STATE_LOWPOWER	../statemachine/statemachine_types.h	/^	STATE_LOWPOWER,$/;"	e	enum:__anon2
STATE_SLEEP	../statemachine/statemachine_types.h	/^	STATE_SLEEP,$/;"	e	enum:__anon2
STATE_STARTUP	../statemachine/statemachine_types.h	/^	STATE_STARTUP,$/;"	e	enum:__anon2
STREAMING	decoder/decoder.c	/^  STREAMING,$/;"	e	enum:task_state	file:
STREAM_BUFFER_H	../Middlewares/Third_Party/FreeRTOS/Source/include/stream_buffer.h	/^#define STREAM_BUFFER_H$/;"	d
SUB_AUDIO_AUDIO_TYPES_H_	../sub/audio/audio_types.h	/^#define SUB_AUDIO_AUDIO_TYPES_H_$/;"	d
SUB_AUDIO_AUDIO_TYPES_H_	unit_test/mocks/include/audio_types.h	/^#define SUB_AUDIO_AUDIO_TYPES_H_$/;"	d
SVC_Setup	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^__STATIC_INLINE void SVC_Setup (void) {$/;"	f
SYNC_BYTESTREAM	libfoxenflac/foxen/flac.c	/^#define SYNC_BYTESTREAM(/;"	d	file:
SYNC_BYTESTREAM_CRC	libfoxenflac/foxen/flac.c	/^#define SYNC_BYTESTREAM_CRC(/;"	d	file:
SemaphoreData	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^typedef struct SemaphoreData$/;"	s	file:
SemaphoreData_t	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^} SemaphoreData_t;$/;"	t	typeref:struct:SemaphoreData	file:
SemaphoreHandle_t	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^typedef QueueHandle_t SemaphoreHandle_t;$/;"	t
SpiObject	../peripherals/spi/spi_peri.h	/^} SpiObject;$/;"	t	typeref:struct:__anon9
SpiObject	unit_test/mocks/include/mem_peri.h	/^typedef uint32_t SpiObject;$/;"	t
SpiSemaphore	../peripherals/spi/spi_peri.h	/^} SpiSemaphore;$/;"	t	typeref:struct:__anon10
SpiTransaction	../peripherals/spi/spi_peri.h	/^}SpiTransaction;$/;"	t	typeref:struct:__anon8
SpiTransaction	unit_test/mocks/include/mem_peri.h	/^typedef uint32_t SpiTransaction;$/;"	t
SpiTransferMode	../peripherals/spi/spi_peri.h	/^} SpiTransferMode;$/;"	t	typeref:enum:__anon7
StartDefaultTask	../Core/Src/freertos.c	/^__weak void StartDefaultTask(void *argument)$/;"	f
StartDefaultTask	../Core/Src/freertos.c	/^void StartDefaultTask(void *argument);$/;"	p	file:
StaticEventGroup_t	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^} StaticEventGroup_t;$/;"	t	typeref:struct:xSTATIC_EVENT_GROUP
StaticListItem_t	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^typedef struct xSTATIC_LIST_ITEM StaticListItem_t;$/;"	t	typeref:struct:xSTATIC_LIST_ITEM
StaticList_t	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^} StaticList_t;$/;"	t	typeref:struct:xSTATIC_LIST
StaticMessageBuffer_t	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^typedef StaticStreamBuffer_t StaticMessageBuffer_t;$/;"	t
StaticMiniListItem_t	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^typedef struct xSTATIC_MINI_LIST_ITEM StaticMiniListItem_t;$/;"	t	typeref:struct:xSTATIC_MINI_LIST_ITEM
StaticQueue_t	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^} StaticQueue_t;$/;"	t	typeref:struct:xSTATIC_QUEUE
StaticSemaphore_t	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^typedef StaticQueue_t StaticSemaphore_t;$/;"	t
StaticStreamBuffer_t	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^} StaticStreamBuffer_t;$/;"	t	typeref:struct:xSTATIC_STREAM_BUFFER
StaticTask_t	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^} StaticTask_t;$/;"	t	typeref:struct:xSTATIC_TCB
StaticTimer_t	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^} StaticTimer_t;$/;"	t	typeref:struct:xSTATIC_TIMER
StreamBufferDef_t	../Middlewares/Third_Party/FreeRTOS/Source/include/stream_buffer.h	/^struct StreamBufferDef_t;$/;"	x
StreamBufferDef_t	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^typedef struct StreamBufferDef_t \/*lint !e9058 Style convention uses tag. *\/$/;"	s	file:
StreamBufferHandle_t	../Middlewares/Third_Party/FreeRTOS/Source/include/stream_buffer.h	/^typedef struct StreamBufferDef_t * StreamBufferHandle_t;$/;"	t	typeref:struct:StreamBufferDef_t
StreamBuffer_t	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^} StreamBuffer_t;$/;"	t	typeref:struct:StreamBufferDef_t	file:
SysTick_Handler	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^#undef SysTick_Handler$/;"	d	file:
SysTick_Handler	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^extern void SysTick_Handler     (void);$/;"	p	file:
SysTick_Handler	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^void SysTick_Handler (void) {$/;"	f
SystemClock_Config	../Core/Src/main.c	/^void SystemClock_Config(void)$/;"	f
SystemClock_Config	../Core/Src/main.c	/^void SystemClock_Config(void);$/;"	p	file:
SystemCoreClock	../Core/Inc/FreeRTOSConfig.h	/^  extern uint32_t SystemCoreClock;$/;"	x
SystemCoreClock	../Core/Src/system_stm32f4xx.c	/^uint32_t SystemCoreClock = 16000000;$/;"	v
SystemCoreClockUpdate	../Core/Src/system_stm32f4xx.c	/^void SystemCoreClockUpdate(void)$/;"	f
SystemInit	../Core/Src/system_stm32f4xx.c	/^void SystemInit(void)$/;"	f
SystemInit_ExtMemCtl	../Core/Src/system_stm32f4xx.c	/^  static void SystemInit_ExtMemCtl(void); $/;"	p	file:
SystemInit_ExtMemCtl	../Core/Src/system_stm32f4xx.c	/^void SystemInit_ExtMemCtl(void)$/;"	f
TCB_t	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^typedef tskTCB TCB_t;$/;"	t	file:
THREAD_FLAGS_INVALID_BITS	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^#define THREAD_FLAGS_INVALID_BITS /;"	d	file:
TICK_INT_PRIORITY	../Core/Inc/stm32f4xx_hal_conf.h	/^#define  TICK_INT_PRIORITY /;"	d
TIM1_UP_TIM10_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void TIM1_UP_TIM10_IRQHandler(void);$/;"	p
TIM1_UP_TIM10_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void TIM1_UP_TIM10_IRQHandler(void)$/;"	f
TIMERS_H	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define TIMERS_H$/;"	d
TOTAL_LEN_LEN	../peripherals/memory/sha-256.c	/^#define TOTAL_LEN_LEN /;"	d	file:
TZ_MODULEID_T	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define TZ_MODULEID_T$/;"	d
TZ_ModuleId_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^typedef uint32_t TZ_ModuleId_t;$/;"	t
TaskFunction_t	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^typedef void (*TaskFunction_t)( void * );$/;"	t
TaskHandle_t	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^typedef struct tskTaskControlBlock* TaskHandle_t;$/;"	t	typeref:struct:tskTaskControlBlock
TaskHookFunction_t	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^typedef BaseType_t (*TaskHookFunction_t)( void * );$/;"	t
TaskParameters_t	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^} TaskParameters_t;$/;"	t	typeref:struct:xTASK_PARAMETERS
TaskStatus_t	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^} TaskStatus_t;$/;"	t	typeref:struct:xTASK_STATUS
TimeOut_t	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^} TimeOut_t;$/;"	t	typeref:struct:xTIME_OUT
TimerCallback	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^static void TimerCallback (TimerHandle_t hTimer) {$/;"	f	file:
TimerCallbackFunction_t	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^typedef void (*TimerCallbackFunction_t)( TimerHandle_t xTimer );$/;"	t
TimerCallback_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^} TimerCallback_t;$/;"	t	typeref:struct:__anon3	file:
TimerHandle_t	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^typedef struct tmrTimerControl * TimerHandle_t;$/;"	t	typeref:struct:tmrTimerControl
TimerParameter_t	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^} TimerParameter_t;$/;"	t	typeref:struct:tmrTimerParameters	file:
Timer_Stack	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];$/;"	v	file:
Timer_TCB	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^static StaticTask_t Timer_TCB;$/;"	v	file:
Timer_t	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^typedef xTIMER Timer_t;$/;"	t	file:
USART1_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void USART1_IRQHandler(void);$/;"	p
USART1_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void USART1_IRQHandler(void)$/;"	f
USART2_IRQHandler	../Core/Inc/stm32f4xx_it.h	/^void USART2_IRQHandler(void);$/;"	p
USART2_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void USART2_IRQHandler(void)$/;"	f
USER_UART_IRQHandler	../Core/Src/stm32f4xx_it.c	/^void USER_UART_IRQHandler(UART_HandleTypeDef *huart)$/;"	f
USE_FreeRTOS_HEAP_4	../Core/Inc/FreeRTOSConfig.h	/^#define USE_FreeRTOS_HEAP_4$/;"	d
USE_RTOS	../Core/Inc/stm32f4xx_hal_conf.h	/^#define  USE_RTOS /;"	d
USE_SPI_CRC	../Core/Inc/stm32f4xx_hal_conf.h	/^#define USE_SPI_CRC /;"	d
UsageFault_Handler	../Core/Inc/stm32f4xx_it.h	/^void UsageFault_Handler(void);$/;"	p
UsageFault_Handler	../Core/Src/stm32f4xx_it.c	/^void UsageFault_Handler(void)$/;"	f
VBAT_LS_DIS	../sub/powerui/powerui_pmic.h	/^#define VBAT_LS_DIS /;"	d
VBAT_LS_EN	../sub/powerui/powerui_pmic.h	/^#define VBAT_LS_EN /;"	d
VDD_VALUE	../Core/Inc/stm32f4xx_hal_conf.h	/^#define  VDD_VALUE	/;"	d
VECT_TAB_OFFSET	../Core/Src/system_stm32f4xx.c	/^#define VECT_TAB_OFFSET /;"	d	file:
WD_TIMEOUT_MS	../Core/Inc/main.h	/^static const int WD_TIMEOUT_MS = 1000;$/;"	v
XTALClk_TurnOFF	../Core/Inc/main.h	/^void XTALClk_TurnOFF(void);$/;"	p
XTALClk_TurnOFF	../Core/Src/main.c	/^void XTALClk_TurnOFF(void)$/;"	f
XTALClk_TurnON	../Core/Inc/main.h	/^void XTALClk_TurnON(void);$/;"	p
XTALClk_TurnON	../Core/Src/main.c	/^void XTALClk_TurnON(void)$/;"	f
XTALClock_Config	../Core/Inc/main.h	/^void XTALClock_Config(void);$/;"	p
XTALClock_Config	../Core/Src/main.c	/^void XTALClock_Config(void)$/;"	f
_DEFAULT_SOURCE	libfoxenflac/test/test_flac_integration.c	/^#define _DEFAULT_SOURCE /;"	d	file:
__ARM_ARCH_6M__	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  #define __ARM_ARCH_6M__ /;"	d	file:
__ARM_ARCH_7A__	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  #define __ARM_ARCH_7A__ /;"	d	file:
__ARM_ARCH_7EM__	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  #define __ARM_ARCH_7EM__ /;"	d	file:
__ARM_ARCH_7M__	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  #define __ARM_ARCH_7M__ /;"	d	file:
__ARM_ARCH_8M_MAIN__	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  #define __ARM_ARCH_8M_MAIN__ /;"	d	file:
__AUDIO_CLIPS__	api/audio_clip.h	/^#define __AUDIO_CLIPS__$/;"	d
__AUDIO_CLIP_DEFS__	audio_clip_defs.h	/^#define __AUDIO_CLIP_DEFS__$/;"	d
__CLIP_HANDLER__	clip_handler/clip_handler.h	/^#define __CLIP_HANDLER__$/;"	d
__CLIP_H__	unit_test/clips/clip.h	/^#define __CLIP_H__$/;"	d
__DAC_HANDLER__	dac_handler/dac_handler.h	/^#define __DAC_HANDLER__$/;"	d
__DECODER__	decoder/decoder.h	/^#define __DECODER__$/;"	d
__I2S_WRP__	wrappers/wrp_i2s.h	/^#define __I2S_WRP__$/;"	d
__INTERNAL_FLASH_DRIVER_H	../peripherals/memory/internal_flash_driver.h	/^#define __INTERNAL_FLASH_DRIVER_H$/;"	d
__MAIN_H	../Core/Inc/main.h	/^#define __MAIN_H$/;"	d
__NO_RETURN	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define __NO_RETURN /;"	d
__NO_RETURN	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define __NO_RETURN$/;"	d
__RING16_H__	dac_handler/ring16/ring16.h	/^#define __RING16_H__$/;"	d
__STM32F4xx_HAL_CONF_H	../Core/Inc/stm32f4xx_hal_conf.h	/^#define __STM32F4xx_HAL_CONF_H$/;"	d
__STM32F4xx_IT_H	../Core/Inc/stm32f4xx_it.h	/^#define __STM32F4xx_IT_H$/;"	d
__WRAPPER_MEMRD_H__	wrappers/wrp_mem.h	/^#define __WRAPPER_MEMRD_H__$/;"	d
__dma_H	../Core/Inc/dma.h	/^#define __dma_H$/;"	d
__env	../Core/Src/syscalls.c	/^char *__env[1] = { 0 };$/;"	v
__gpio_H	../Core/Inc/gpio.h	/^#define __gpio_H$/;"	d
__i2c_H	../Core/Inc/i2c.h	/^#define __i2c_H$/;"	d
__i2s_H	../Core/Inc/i2s.h	/^#define __i2s_H$/;"	d
__io_getchar	../Core/Src/syscalls.c	/^extern int __io_getchar(void) __attribute__((weak));$/;"	p	file:
__io_putchar	../Core/Src/syscalls.c	/^extern int __io_putchar(int ch) __attribute__((weak));$/;"	p	file:
__iwdg_H	../Core/Inc/iwdg.h	/^#define __iwdg_H$/;"	d
__rtc_H	../Core/Inc/rtc.h	/^#define __rtc_H$/;"	d
__spi_H	../Core/Inc/spi.h	/^#define __spi_H$/;"	d
__usart_H	../Core/Inc/usart.h	/^#define __usart_H$/;"	d
_close	../Core/Src/syscalls.c	/^int _close(int file)$/;"	f
_execve	../Core/Src/syscalls.c	/^int _execve(char *name, char **argv, char **env)$/;"	f
_exit	../Core/Src/syscalls.c	/^void _exit (int status)$/;"	f
_fork	../Core/Src/syscalls.c	/^int _fork(void)$/;"	f
_fstat	../Core/Src/syscalls.c	/^int _fstat(int file, struct stat *st)$/;"	f
_fx_flac_check_params	libfoxenflac/foxen/flac.c	/^static bool _fx_flac_check_params(uint16_t max_block_size, uint8_t max_channels)$/;"	f	file:
_fx_flac_crc16_	libfoxenflac/foxen/flac.c	/^static inline void _fx_flac_crc16_(uint8_t byte, void *data)$/;"	f	file:
_fx_flac_crc8_	libfoxenflac/foxen/flac.c	/^static inline void _fx_flac_crc8_(uint8_t byte, void *data)$/;"	f	file:
_fx_flac_decode_block_size	libfoxenflac/foxen/flac.c	/^static bool _fx_flac_decode_block_size(fx_flac_block_size_t block_size_enum,$/;"	f	file:
_fx_flac_decode_channel_count	libfoxenflac/foxen/flac.c	/^static bool _fx_flac_decode_channel_count($/;"	f	file:
_fx_flac_decode_sample_rate	libfoxenflac/foxen/flac.c	/^static bool _fx_flac_decode_sample_rate(fx_flac_sample_rate_t sample_rate_enum,$/;"	f	file:
_fx_flac_decode_sample_size	libfoxenflac/foxen/flac.c	/^static bool _fx_flac_decode_sample_size(fx_flac_sample_size_t sample_size_enum,$/;"	f	file:
_fx_flac_double_crc_	libfoxenflac/foxen/flac.c	/^static inline void _fx_flac_double_crc_(uint8_t byte, void *data)$/;"	f	file:
_fx_flac_fixed_coeffs	libfoxenflac/foxen/flac.c	/^static const int32_t _fx_flac_fixed_coeffs[5][4] = {$/;"	v	file:
_fx_flac_handle_err	libfoxenflac/foxen/flac.c	/^static bool _fx_flac_handle_err(fx_flac_t *inst)$/;"	f	file:
_fx_flac_post_process_left_side	libfoxenflac/foxen/flac.c	/^static inline void _fx_flac_post_process_left_side(int32_t *blk1, int32_t *blk2,$/;"	f	file:
_fx_flac_post_process_mid_side	libfoxenflac/foxen/flac.c	/^static inline void _fx_flac_post_process_mid_side(int32_t *blk1, int32_t *blk2,$/;"	f	file:
_fx_flac_post_process_right_side	libfoxenflac/foxen/flac.c	/^static inline void _fx_flac_post_process_right_side(int32_t *blk1,$/;"	f	file:
_fx_flac_process_decoded_frame	libfoxenflac/foxen/flac.c	/^static bool _fx_flac_process_decoded_frame(fx_flac_t *inst, int32_t *out,$/;"	f	file:
_fx_flac_process_in_frame	libfoxenflac/foxen/flac.c	/^static bool _fx_flac_process_in_frame(fx_flac_t *inst)$/;"	f	file:
_fx_flac_process_in_metadata	libfoxenflac/foxen/flac.c	/^static bool _fx_flac_process_in_metadata(fx_flac_t *inst)$/;"	f	file:
_fx_flac_process_init	libfoxenflac/foxen/flac.c	/^static bool _fx_flac_process_init(fx_flac_t *inst)$/;"	f	file:
_fx_flac_process_search_frame	libfoxenflac/foxen/flac.c	/^static bool _fx_flac_process_search_frame(fx_flac_t *inst)$/;"	f	file:
_fx_flac_reader_utf8_coded_int	libfoxenflac/foxen/flac.c	/^static bool _fx_flac_reader_utf8_coded_int(fx_flac_t *inst, uint8_t max_n,$/;"	f	file:
_fx_flac_restore_lpc_signal	libfoxenflac/foxen/flac.c	/^static inline void _fx_flac_restore_lpc_signal(int32_t *blk, uint32_t blk_size,$/;"	f	file:
_getpid	../Core/Src/syscalls.c	/^int _getpid(void)$/;"	f
_isatty	../Core/Src/syscalls.c	/^int _isatty(int file)$/;"	f
_kill	../Core/Src/syscalls.c	/^int _kill(int pid, int sig)$/;"	f
_link	../Core/Src/syscalls.c	/^int _link(char *old, char *new)$/;"	f
_lseek	../Core/Src/syscalls.c	/^int _lseek(int file, int ptr, int dir)$/;"	f
_open	../Core/Src/syscalls.c	/^int _open(char *path, int flags, ...)$/;"	f
_read	../Core/Src/syscalls.c	/^__attribute__((weak)) int _read(int file, char *ptr, int len)$/;"	f
_sbrk	../Core/Src/sysmem.c	/^caddr_t _sbrk(int incr)$/;"	f
_stat	../Core/Src/syscalls.c	/^int _stat(char *file, struct stat *st)$/;"	f
_times	../Core/Src/syscalls.c	/^int _times(struct tms *buf)$/;"	f
_unlink	../Core/Src/syscalls.c	/^int _unlink(char *name)$/;"	f
_wait	../Core/Src/syscalls.c	/^int _wait(int *status)$/;"	f
_write	../Core/Src/syscalls.c	/^__attribute__((weak)) int _write(int file, char *ptr, int len)$/;"	f
accu	libfoxenflac/foxen/flac.c	/^		int64_t accu = 0;$/;"	l
acmail	api/audio_clip.c	/^struct acmail {$/;"	s	file:
addr	../sub/powerui/powerui_types.h	/^    uint8_t addr;$/;"	m	struct:__anon2
address	../peripherals/memory/internal_flash_driver.c	/^  uint8_t *address = flash;$/;"	l
address	clip_handler/clip_handler.c	/^  uint32_t address;$/;"	m	struct:clip_node	file:
addrint	../peripherals/memory/internal_flash_driver.c	/^  size_t addrint = address;$/;"	l
adj_updated	../sub/audio/audio_types.h	/^    bool adj_updated;$/;"	m	struct:__anon20
adj_updated	unit_test/mocks/include/audio_types.h	/^    bool adj_updated;$/;"	m	struct:__anon8
ah	../peripherals/memory/sha-256.c	/^		uint32_t ah[8];$/;"	l
anim_active	../sub/powerui/powerui_types.h	/^    LEDAnim *anim_active;$/;"	m	struct:__anon11
anim_state	../sub/powerui/powerui_types.h	/^    LEDAnimState anim_state;$/;"	m	struct:__anon11
animations	../sub/powerui/powerui_types.h	/^    LEDAnim *animations;$/;"	m	struct:__anon11
api	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                       api;   \/\/\/< API version (major.minor.rev: mmnnnrrrr dec).$/;"	m	struct:__anon11
arg	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  void         *arg;$/;"	m	struct:__anon3	file:
assert_failed	../Core/Inc/stm32f4xx_hal_conf.h	/^  void assert_failed(uint8_t* file, uint32_t line);$/;"	p
assert_failed	../Core/Src/main.c	/^void assert_failed(uint8_t *file, uint32_t line)$/;"	f
assert_param	../Core/Inc/stm32f4xx_hal_conf.h	/^  #define assert_param(/;"	d
attr	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osMemoryPoolAttr_t            attr;   \/\/\/< memory pool attributes$/;"	m	struct:os_pool_def
attr	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osMessageQueueAttr_t          attr;   \/\/\/< message queue attributes$/;"	m	struct:os_messageQ_def
attr	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osThreadAttr_t                attr;   \/\/\/< thread attributes$/;"	m	struct:os_thread_def
attr	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osTimerAttr_t                 attr;   \/\/\/< timer attributes$/;"	m	struct:os_timer_def
attr_bits	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                 attr_bits;   \/\/\/< attribute bits$/;"	m	struct:__anon17
attr_bits	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                 attr_bits;   \/\/\/< attribute bits$/;"	m	struct:__anon18
attr_bits	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                 attr_bits;   \/\/\/< attribute bits$/;"	m	struct:__anon19
attr_bits	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                 attr_bits;   \/\/\/< attribute bits$/;"	m	struct:__anon20
attr_bits	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                 attr_bits;   \/\/\/< attribute bits$/;"	m	struct:__anon21
attr_bits	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                 attr_bits;   \/\/\/< attribute bits$/;"	m	struct:__anon22
attr_bits	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                 attr_bits;   \/\/\/< attribute bits$/;"	m	struct:__anon23
aud_buffer	../sub/audio/audio_types.h	/^    uint8_t aud_buffer[AUD_BUFF_SZ];$/;"	m	struct:__anon20
audfile_chunk	../peripherals/i2s/i2s_peri.h	/^	MemChunk *audfile_chunk;$/;"	m	struct:__anon12
audfile_index	../peripherals/i2s/i2s_peri.h	/^	uint16_t audfile_index;$/;"	m	struct:__anon12
audio	../statemachine/statemachine_types.h	/^    AudioState audio;$/;"	m	struct:__anon5
audioClipEOStreamAssignCB	api/audio_clip.c	/^int audioClipEOStreamAssignCB(void (*cb)(void *context)) {$/;"	f
audioClipEOStreamAssignCB	api/audio_clip.h	/^int audioClipEOStreamAssignCB(void (*cb)(void *context));$/;"	p
audioClipInit	api/audio_clip.c	/^int audioClipInit(AudioClipState *state, PeriObject *peri, void (*eos_cb)(void *context)) {$/;"	f
audioClipInit	api/audio_clip.h	/^int audioClipInit(AudioClipState *state, PeriObject *peri, void (*cb)(void *context));$/;"	p
audioClipPlay	api/audio_clip.c	/^int audioClipPlay(audpClip clip, SemaphoreHandle_t *sem) {$/;"	f
audioClipPlay	api/audio_clip.h	/^int audioClipPlay(audpClip clip, SemaphoreHandle_t *sem);$/;"	p
audioClipThread	api/audio_clip.c	/^static int audioClipThread(void *context) {$/;"	f	file:
audioClips	../statemachine/statemachine_types.h	/^    AudioClipState audioClips;$/;"	m	struct:__anon5
audioInit	../sub/audio/audio.c	/^void audioInit(AudioState *state, PowerUIState *pwr, PeriObject *peri,$/;"	f
audioInit	../sub/audio/audio.h	/^void audioInit(AudioState *state, PowerUIState *pwr, PeriObject *peri,$/;"	p
audioLoadDefaultsToNVM	../sub/audio/audio.h	/^bool audioLoadDefaultsToNVM(AudioState *state);$/;"	p
audioLoadDefaultsToNVM	../sub/audio/audio_config.c	/^bool audioLoadDefaultsToNVM(AudioState *state)$/;"	f
audioNVSToDSPLoadAudMemBlock	../sub/audio/audio_mem.c	/^AudMemStatus audioNVSToDSPLoadAudMemBlock(AudioState *state, MemChunk *chunk, uint16_t elem_index)$/;"	f
audioNVSToDSPLoadAudMemBlock	../sub/audio/audio_mem.h	/^AudMemStatus audioNVSToDSPLoadAudMemBlock(AudioState *state, MemChunk *chunk, uint16_t elem_index);$/;"	p
audioNVSToDSPLoadAudMemBlock	unit_test/mocks/include/audio_mem.h	/^AudMemStatus audioNVSToDSPLoadAudMemBlock(AudioState *state, MemChunk *chunk, uint16_t elem_index);$/;"	p
audioNVSToDSPLoadAudMemReg	../sub/audio/audio_mem.c	/^bool audioNVSToDSPLoadAudMemReg(AudioState *state, MemChunk *chunk, uint16_t elem_index)$/;"	f
audioNVSToDSPLoadAudMemReg	../sub/audio/audio_mem.h	/^bool audioNVSToDSPLoadAudMemReg(AudioState *state, MemChunk *chunk, uint16_t elem_index);$/;"	p
audioNVSToDSPLoadAudMemReg	unit_test/mocks/include/audio_mem.h	/^bool audioNVSToDSPLoadAudMemReg(AudioState *state, MemChunk *chunk, uint16_t elem_index);$/;"	p
audioNVSToRAMLoadDSPConfig	../sub/audio/audio_mem.c	/^bool audioNVSToRAMLoadDSPConfig(AudioState *state)$/;"	f
audioNVSToRAMLoadDSPConfig	../sub/audio/audio_mem.h	/^bool audioNVSToRAMLoadDSPConfig(AudioState *state);$/;"	p
audioNVSToRAMLoadDSPConfig	unit_test/mocks/include/audio_mem.h	/^bool audioNVSToRAMLoadDSPConfig(AudioState *state);$/;"	p
audioNVSToRAMLoadEQConfig	../sub/audio/audio_mem.c	/^bool audioNVSToRAMLoadEQConfig(AudioState *state)$/;"	f
audioNVSToRAMLoadEQConfig	../sub/audio/audio_mem.h	/^bool audioNVSToRAMLoadEQConfig(AudioState *state);$/;"	p
audioNVSToRAMLoadInputConfig	../sub/audio/audio_mem.c	/^bool audioNVSToRAMLoadInputConfig(AudioState *state)$/;"	f
audioNVSToRAMLoadInputConfig	../sub/audio/audio_mem.h	/^bool audioNVSToRAMLoadInputConfig(AudioState *state);$/;"	p
audioNVSToRAMLoadInputConfig	unit_test/mocks/include/audio_mem.h	/^bool audioNVSToRAMLoadInputConfig(AudioState *state);$/;"	p
audioNVSToRAMLoadOutputConfig	../sub/audio/audio_mem.c	/^bool audioNVSToRAMLoadOutputConfig(AudioState *state)$/;"	f
audioNVSToRAMLoadOutputConfig	../sub/audio/audio_mem.h	/^bool audioNVSToRAMLoadOutputConfig(AudioState *state);$/;"	p
audioNVSToRAMLoadOutputConfig	unit_test/mocks/include/audio_mem.h	/^bool audioNVSToRAMLoadOutputConfig(AudioState *state);$/;"	p
audioRAMToDSPLoadEQConfig	../sub/audio/audio_mem.c	/^bool audioRAMToDSPLoadEQConfig(AudioState *state, uint8_t channel, bool update)$/;"	f
audioRAMToDSPLoadEQConfig	../sub/audio/audio_mem.h	/^bool audioRAMToDSPLoadEQConfig(AudioState *state, uint8_t channel, bool update);$/;"	p
audioRAMToDSPLoadInputConfig	../sub/audio/audio_mem.c	/^bool audioRAMToDSPLoadInputConfig(AudioState *state, uint8_t channel, bool update)$/;"	f
audioRAMToDSPLoadInputConfig	../sub/audio/audio_mem.h	/^bool audioRAMToDSPLoadInputConfig(AudioState *state, uint8_t channel, bool update);$/;"	p
audioRAMToDSPLoadInputConfig	unit_test/mocks/include/audio_mem.h	/^bool audioRAMToDSPLoadInputConfig(AudioState *state, uint8_t channel, bool update);$/;"	p
audioRAMToDSPLoadOutputConfig	../sub/audio/audio_mem.c	/^bool audioRAMToDSPLoadOutputConfig(AudioState *state, uint8_t channel, bool update)$/;"	f
audioRAMToDSPLoadOutputConfig	../sub/audio/audio_mem.h	/^bool audioRAMToDSPLoadOutputConfig(AudioState *state, uint8_t channel, bool update);$/;"	p
audioRAMToDSPLoadOutputConfig	unit_test/mocks/include/audio_mem.h	/^bool audioRAMToDSPLoadOutputConfig(AudioState *state, uint8_t channel, bool update);$/;"	p
audioRAMToNVSLoadAdjConfig	../sub/audio/audio_mem.c	/^bool audioRAMToNVSLoadAdjConfig(AudioState *state)$/;"	f
audioRAMToNVSLoadAdjConfig	../sub/audio/audio_mem.h	/^bool audioRAMToNVSLoadAdjConfig(AudioState *state);$/;"	p
audioRAMToNVSLoadAdjConfig	unit_test/mocks/include/audio_mem.h	/^bool audioRAMToNVSLoadAdjConfig(AudioState *state);$/;"	p
audioRAMToNVSLoadAudMemReg	../sub/audio/audio_mem.c	/^bool audioRAMToNVSLoadAudMemReg(AudioState *state, MemChunk *chunk,$/;"	f
audioRAMToNVSLoadAudMemReg	../sub/audio/audio_mem.h	/^bool audioRAMToNVSLoadAudMemReg(AudioState *state, MemChunk *chunk, AudMemReg *reg, uint16_t num_regs);$/;"	p
audioRAMToNVSLoadAudMemReg	unit_test/mocks/include/audio_mem.h	/^bool audioRAMToNVSLoadAudMemReg(AudioState *state, MemChunk *chunk, AudMemReg *reg, uint16_t num_regs);$/;"	p
audioRAMToNVSLoadDSPConfig	../sub/audio/audio_mem.c	/^bool audioRAMToNVSLoadDSPConfig(AudioState *state)$/;"	f
audioRAMToNVSLoadDSPConfig	../sub/audio/audio_mem.h	/^bool audioRAMToNVSLoadDSPConfig(AudioState *state);$/;"	p
audioRAMToNVSLoadDSPConfig	unit_test/mocks/include/audio_mem.h	/^bool audioRAMToNVSLoadDSPConfig(AudioState *state);$/;"	p
audio_AIF_enable	../sub/audio/audio.c	/^void audio_AIF_enable(AudioState *state, uint8_t channel, bool enable)$/;"	f
audio_AIF_enable	../sub/audio/audio.h	/^void audio_AIF_enable(AudioState *state, uint8_t channel, bool enable);$/;"	p
audio_EQCoord_Set	../sub/audio/audio.c	/^bool audio_EQCoord_Set(AudioState *state, int8_t *coord)$/;"	f
audio_EQCoord_Set	../sub/audio/audio.h	/^bool audio_EQCoord_Set(AudioState *state, int8_t *coord);$/;"	p
audio_EQ_Set	../sub/audio/audio.c	/^bool audio_EQ_Set(AudioState *state, uint8_t channel, int16_t *bands)$/;"	f
audio_EQ_Set	../sub/audio/audio.h	/^bool audio_EQ_Set(AudioState *state, uint8_t channel, int16_t *bands);$/;"	p
audio_Input_MuteSet	../sub/audio/audio.c	/^bool audio_Input_MuteSet(AudioState *state, uint8_t channel, bool mute)$/;"	f
audio_Input_MuteSet	../sub/audio/audio.h	/^bool audio_Input_MuteSet(AudioState *state, uint8_t channel, bool mute);$/;"	p
audio_Input_SetAll	../sub/audio/audio.c	/^bool audio_Input_SetAll(AudioState *state)$/;"	f
audio_Input_SetAll	../sub/audio/audio.h	/^bool audio_Input_SetAll(AudioState *state);$/;"	p
audio_Input_VolumeSet	../sub/audio/audio.c	/^bool audio_Input_VolumeSet(AudioState *state, uint8_t channel, int16_t volume)$/;"	f
audio_Input_VolumeSet	../sub/audio/audio.h	/^bool audio_Input_VolumeSet(AudioState *state, uint8_t channel, int16_t volume);$/;"	p
audio_Output_MuteSet	../sub/audio/audio.c	/^bool audio_Output_MuteSet(AudioState *state, uint8_t channel, bool mute)$/;"	f
audio_Output_MuteSet	../sub/audio/audio.h	/^bool audio_Output_MuteSet(AudioState *state, uint8_t channel, bool mute);$/;"	p
audio_Output_SetAll	../sub/audio/audio.c	/^bool audio_Output_SetAll(AudioState *state)$/;"	f
audio_Output_SetAll	../sub/audio/audio.h	/^bool audio_Output_SetAll(AudioState *state);$/;"	p
audio_Output_VolumeSet	../sub/audio/audio.c	/^bool audio_Output_VolumeSet(AudioState *state, uint8_t channel, int16_t volume)$/;"	f
audio_Output_VolumeSet	../sub/audio/audio.h	/^bool audio_Output_VolumeSet(AudioState *state, uint8_t channel, int16_t volume);$/;"	p
audio_clips	clip_handler/clip_handler.c	/^struct clip_node *audio_clips[AUDIO_CLIPS_NUMBER] = {$/;"	v	typeref:struct:clip_node
audio_cs_init	../sub/audio/audio.c	/^bool audio_cs_init(AudioState *state)$/;"	f
audio_cs_init	../sub/audio/audio.h	/^bool audio_cs_init(AudioState *state);$/;"	p
audio_cs_slpenter	../sub/audio/audio.c	/^bool audio_cs_slpenter(AudioState *state)$/;"	f
audio_cs_slpenter	../sub/audio/audio.h	/^bool audio_cs_slpenter(AudioState *state);$/;"	p
audio_deinit_SPICS	../sub/audio/audio.c	/^static void audio_deinit_SPICS(AudioState *state);$/;"	p	file:
audio_deinit_SPICS	../sub/audio/audio.c	/^void audio_deinit_SPICS(AudioState *state)$/;"	f
audio_dsps	../sub/audio/audio_mem.h	/^static AudioDSPConfig audio_dsps[AUDIO_DSP_CORES_MAX]= {$/;"	v
audio_dsps	unit_test/mocks/include/audio_mem.h	/^static AudioDSPConfig audio_dsps[AUDIO_DSP_CORES_MAX]= {$/;"	v
audio_eq	../sub/audio/audio_mem.h	/^static AudioEQConfig audio_eq[AUD_EQ_NUM_CHANNELS]= {$/;"	v
audio_fill_buffer	../sub/audio/audio_mem.c	/^static void audio_fill_buffer(uint16_t *buff, uint32_t addr, uint32_t data, bool data_long);$/;"	p	file:
audio_fill_buffer	../sub/audio/audio_mem.c	/^void audio_fill_buffer(uint16_t *txbuff, uint32_t addr, uint32_t data, bool data_long)$/;"	f
audio_fill_bufferheader	../sub/audio/audio_mem.c	/^static void audio_fill_bufferheader(uint16_t *buff, uint32_t addr);$/;"	p	file:
audio_fill_bufferheader	../sub/audio/audio_mem.c	/^void audio_fill_bufferheader(uint16_t *txbuff, uint32_t addr)$/;"	f
audio_fill_readbit	../sub/audio/audio_mem.c	/^static void audio_fill_readbit(SpiObject *spi, uint16_t *txbuff);$/;"	p	file:
audio_fill_readbit	../sub/audio/audio_mem.c	/^void audio_fill_readbit(SpiObject *spi, uint16_t *txbuff)$/;"	f
audio_inadj	../sub/audio/audio_mem.h	/^static int16_t audio_inadj[AUD_INPUT_NUM_CHANNELS] = { 0, 0};$/;"	v
audio_inadj	unit_test/mocks/include/audio_mem.h	/^static int16_t audio_inadj[AUD_INPUT_NUM_CHANNELS] = { 0, 0};$/;"	v
audio_init_DSPs	../sub/audio/audio.c	/^bool audio_init_DSPs(AudioState *state)$/;"	f
audio_init_DSPs	../sub/audio/audio.c	/^static bool audio_init_DSPs(AudioState *state);$/;"	p	file:
audio_init_SPICS	../sub/audio/audio.c	/^static void audio_init_SPICS(AudioState *state);$/;"	p	file:
audio_init_SPICS	../sub/audio/audio.c	/^void audio_init_SPICS(AudioState *state)$/;"	f
audio_inputs	../sub/audio/audio_mem.h	/^static AudioInputConfig audio_inputs[AUD_INPUT_NUM_CHANNELS] = {$/;"	v
audio_inputs	unit_test/mocks/include/audio_mem.h	/^static AudioInputConfig audio_inputs[AUD_INPUT_NUM_CHANNELS] = {$/;"	v
audio_outadj	../sub/audio/audio_mem.h	/^static int16_t audio_outadj[AUD_OUTPUT_NUM_CHANNELS]= { 0, 0};$/;"	v
audio_outadj	unit_test/mocks/include/audio_mem.h	/^static int16_t audio_outadj[AUD_OUTPUT_NUM_CHANNELS]= { 0, 0};$/;"	v
audio_outputs	../sub/audio/audio_mem.h	/^static AudioOutputConfig audio_outputs[AUD_OUTPUT_NUM_CHANNELS]= {$/;"	v
audio_outputs	unit_test/mocks/include/audio_mem.h	/^static AudioOutputConfig audio_outputs[AUD_OUTPUT_NUM_CHANNELS]= {$/;"	v
audio_playfile	../sub/audio/audio.c	/^void audio_playfile(AudioState *state, uint16_t audfile_index, SemaphoreHandle_t *sem)$/;"	f
audio_playfile	../sub/audio/audio.h	/^void audio_playfile(AudioState *state, uint16_t audfile_index, SemaphoreHandle_t *sem);$/;"	p
audio_read_address	../sub/audio/audio_mem.c	/^bool audio_read_address(AudioState *state, uint32_t addr, uint32_t *data)$/;"	f
audio_read_address	../sub/audio/audio_mem.h	/^bool audio_read_address(AudioState *state, uint32_t addr, uint32_t *data);$/;"	p
audio_read_address	unit_test/mocks/include/audio_mem.h	/^bool audio_read_address(AudioState *state, uint32_t addr, uint32_t *data);$/;"	p
audio_read_buffer	../sub/audio/audio_mem.c	/^static uint32_t audio_read_buffer(uint16_t *rxbuff, bool data_long);$/;"	p	file:
audio_read_buffer	../sub/audio/audio_mem.c	/^uint32_t audio_read_buffer(uint16_t *rxbuff, bool data_long)$/;"	f
audio_spi_transfer	../sub/audio/audio_mem.c	/^bool audio_spi_transfer(AudioState *state, size_t word_count, bool read)$/;"	f
audio_spi_transfer	../sub/audio/audio_mem.c	/^static bool audio_spi_transfer(AudioState *state, size_t word_count, bool read);$/;"	p	file:
audio_start_DSP	../sub/audio/audio.c	/^bool audio_start_DSP(AudioState *state, uint32_t core)$/;"	f
audio_start_DSP	../sub/audio/audio.c	/^static bool audio_start_DSP(AudioState *state, uint32_t core);$/;"	p	file:
audio_status	../sub/audio/audio.c	/^CSStatus audio_status(AudioState *state)$/;"	f
audio_status	../sub/audio/audio.h	/^CSStatus audio_status(AudioState *state);$/;"	p
audio_stop_DSP	../sub/audio/audio.c	/^bool audio_stop_DSP(AudioState *state, uint32_t core)$/;"	f
audio_stop_DSP	../sub/audio/audio.c	/^static bool audio_stop_DSP(AudioState *state, uint32_t core);$/;"	p	file:
audio_write_address	../sub/audio/audio_mem.c	/^bool audio_write_address(AudioState *state, uint32_t addr, uint32_t data)$/;"	f
audio_write_address	../sub/audio/audio_mem.h	/^bool audio_write_address(AudioState *state, uint32_t addr, uint32_t data);$/;"	p
audio_write_address	unit_test/mocks/include/audio_mem.h	/^bool audio_write_address(AudioState *state, uint32_t addr, uint32_t data);$/;"	p
audpClip	../statemachine/statemachine_types.h	/^} audpClip;$/;"	t	typeref:enum:__anon4
audplayed_batcritical	../statemachine/statemachine_types.h	/^    bool audplayed_batcritical;$/;"	m	struct:__anon5
audplayed_batlow	../statemachine/statemachine_types.h	/^    bool audplayed_batlow;$/;"	m	struct:__anon5
band	../sub/audio/audio_types.h	/^	int16_t band[10];$/;"	m	struct:__anon18
bat10	clip_handler/clip_handler.c	/^struct clip_node bat10 = {$/;"	v	typeref:struct:clip_node
bat100	clip_handler/clip_handler.c	/^struct clip_node bat100 = {$/;"	v	typeref:struct:clip_node
bat20	clip_handler/clip_handler.c	/^struct clip_node bat20 = {$/;"	v	typeref:struct:clip_node
bat30	clip_handler/clip_handler.c	/^struct clip_node bat30 = {$/;"	v	typeref:struct:clip_node
bat40	clip_handler/clip_handler.c	/^struct clip_node bat40 = {$/;"	v	typeref:struct:clip_node
bat50	clip_handler/clip_handler.c	/^struct clip_node bat50 = {$/;"	v	typeref:struct:clip_node
bat60	clip_handler/clip_handler.c	/^struct clip_node bat60 = {$/;"	v	typeref:struct:clip_node
bat70	clip_handler/clip_handler.c	/^struct clip_node bat70 = {$/;"	v	typeref:struct:clip_node
bat80	clip_handler/clip_handler.c	/^struct clip_node bat80 = {$/;"	v	typeref:struct:clip_node
bat90	clip_handler/clip_handler.c	/^struct clip_node bat90 = {$/;"	v	typeref:struct:clip_node
batV	../sub/powerui/powerui_pmic.c	/^	int16_t batV = 0;$/;"	l
bat_ocp	../sub/powerui/powerui_types.h	/^    bool bat_ocp;$/;"	m	struct:__anon9
bat_uvlo	../sub/powerui/powerui_types.h	/^    bool bat_uvlo;$/;"	m	struct:__anon9
batcritical	clip_handler/clip_handler.c	/^struct clip_node batcritical = {$/;"	v	typeref:struct:clip_node
batlow	clip_handler/clip_handler.c	/^struct clip_node batlow = {$/;"	v	typeref:struct:clip_node
bit	libfoxenflac/foxen/flac.c	/^						const uint8_t bit = READ_BITS_CRC(1U);$/;"	l
bit	libfoxenflac/foxen/flac.c	/^					const uint8_t bit = READ_BITS_FAST_CRC(1U);$/;"	l
bitstream	libfoxenflac/foxen/flac.c	/^	fx_bitstream_t bitstream;$/;"	m	struct:fx_flac	file:
blk	libfoxenflac/foxen/flac.c	/^					int32_t *blk = inst->blkbuf[c];$/;"	l
blk	libfoxenflac/foxen/flac.c	/^	int32_t *blk = inst->blkbuf[inst->chan_cur % FLAC_MAX_CHANNEL_COUNT];$/;"	l
blk_cur	libfoxenflac/foxen/flac.c	/^	uint16_t blk_cur;$/;"	m	struct:fx_flac	file:
blk_n	libfoxenflac/foxen/flac.c	/^	const uint32_t blk_n = fh->block_size;$/;"	l
blkbuf	libfoxenflac/foxen/flac.c	/^	int32_t *blkbuf[FLAC_MAX_CHANNEL_COUNT];$/;"	m	struct:fx_flac	file:
block_size	libfoxenflac/foxen/flac.c	/^	uint32_t block_size;$/;"	m	struct:__anon11	file:
block_size_enum	libfoxenflac/foxen/flac.c	/^	fx_flac_block_size_t block_size_enum;$/;"	m	struct:__anon11	file:
blocking_strategy	libfoxenflac/foxen/flac.c	/^	fx_flac_blocking_strategy_t blocking_strategy;$/;"	m	struct:__anon11	file:
bluetooth	../statemachine/statemachine_types.h	/^    BTState bluetooth;$/;"	m	struct:__anon5
bot_iend	../sub/powerui/powerui_types.h	/^	uint8_t bot_iend;$/;"	m	struct:__anon7
bothold_period	../sub/powerui/powerui_types.h	/^	uint16_t bothold_period;$/;"	m	struct:__anon7
bps	libfoxenflac/foxen/flac.c	/^			const uint8_t bps = sfh->rice_parameter;$/;"	l
bps	libfoxenflac/foxen/flac.c	/^	uint8_t bps = fh->sample_size - sfh->wasted_bits;$/;"	l
bps	libfoxenflac/test/test_flac.c	/^	int bps = 1;$/;"	l
bps	libfoxenflac/test/test_flac_integration.c	/^	int bps = 0;$/;"	l
bs	libfoxenflac/foxen/flac.c	/^	const int32_t bs = fx_flac_block_sizes_[(int)block_size_enum];$/;"	l
bs	libfoxenflac/foxen/flac.c	/^	fx_bitstream_t *bs = &inst->bitstream; \/* Alias *\/$/;"	l
btoff	clip_handler/clip_handler.c	/^struct clip_node btoff = {$/;"	v	typeref:struct:clip_node
bton	clip_handler/clip_handler.c	/^struct clip_node bton = {$/;"	v	typeref:struct:clip_node
btpair	clip_handler/clip_handler.c	/^struct clip_node btpair = {$/;"	v	typeref:struct:clip_node
buf	dac_handler/dac_handler.h	/^  int16_t *buf;$/;"	m	struct:dac
buf	dac_handler/ring16/ring16.h	/^  int16_t *buf;$/;"	m	struct:ring16
buf	libfoxenflac/examples/flac_decoder.c	/^	uint8_t buf[128];$/;"	l
buf	libfoxenflac/test/test_flac_integration.c	/^	char buf[2048];$/;"	l
buf	unit_test/unit_test.c	/^	uint8_t buf[128];$/;"	l
buf_len	libfoxenflac/examples/flac_decoder.c	/^		uint32_t buf_len = buf_wr_cur;$/;"	l
buf_len	unit_test/unit_test.c	/^		uint32_t buf_len = buf_wr_cur;$/;"	l
buf_wr_cur	libfoxenflac/examples/flac_decoder.c	/^	uint32_t buf_wr_cur = 0;$/;"	l
buf_wr_cur	libfoxenflac/test/test_flac_integration.c	/^	uint32_t buf_wr_cur = 0;$/;"	l
buf_wr_cur	unit_test/unit_test.c	/^	uint32_t buf_wr_cur = 0;$/;"	l
buffer	../peripherals/i2s/i2s_peri.h	/^	uint16_t *buffer;$/;"	m	struct:__anon13
buffer	../peripherals/memory/mem_peri.h	/^    uint8_t buffer[MEM_BUFF_SIZE];$/;"	m	struct:__anon4
buffer	unit_test/mocks/include/mem_peri.h	/^    uint8_t buffer[MEM_BUFF_SIZE];$/;"	m	struct:__anon12
buffer_size	../peripherals/i2s/i2s_peri.h	/^  uint32_t buffer_size;$/;"	m	struct:__anon13
buffer_state	../peripherals/memory/sha-256.c	/^struct buffer_state {$/;"	s	file:
buffering	decoder/decoder.c	/^static int32_t buffering(struct decoder *d) {$/;"	f	file:
build_flac_command	libfoxenflac/test/test_flac_integration.c	/^static bool build_flac_command(char *tar, int l, const char *file)$/;"	f	file:
busy	../peripherals/i2c/i2c_peri.h	/^    bool busy;$/;"	m	struct:__anon6
busy	../peripherals/spi/spi_peri.h	/^	bool busy;$/;"	m	struct:__anon9
busy	api/audio_clip.h	/^	SemaphoreHandle_t *busy;$/;"	m	struct:__anon13
byte	libfoxenflac/foxen/flac.c	/^	uint8_t byte = READ_BITS(8);$/;"	l
byte_idx	libfoxenflac/test/test_flac_integration.c	/^	uint64_t byte_idx = 0;$/;"	l
c	libfoxenflac/test/test_flac_integration.c	/^			const char c = *(src++);$/;"	l
c1	libfoxenflac/foxen/flac.c	/^			int32_t *c1 = inst->blkbuf[0], *c2 = inst->blkbuf[1];$/;"	l
c2	libfoxenflac/foxen/flac.c	/^			int32_t *c1 = inst->blkbuf[0], *c2 = inst->blkbuf[1];$/;"	l
cNextChar	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	char cNextChar;$/;"	l
cRxLock	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^			const int8_t cRxLock = pxQueue->cRxLock;$/;"	l
cRxLock	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^		int8_t cRxLock = pxQueue->cRxLock;$/;"	l
cRxLock	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	volatile int8_t cRxLock;		\/*< Stores the number of items received from the queue (removed from the queue) while the queue was locked.  Set to queueUNLOCKED when the queue is not locked. *\/$/;"	m	struct:QueueDefinition	file:
cStatus	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	char cStatus;$/;"	l
cTxLock	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^			const int8_t cTxLock = pxQueue->cTxLock;$/;"	l
cTxLock	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^			const int8_t cTxLock = pxQueueSetContainer->cTxLock;$/;"	l
cTxLock	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^		int8_t cTxLock = pxQueue->cTxLock;$/;"	l
cTxLock	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	volatile int8_t cTxLock;		\/*< Stores the number of items transmitted to the queue (added to the queue) while the queue was locked.  Set to queueUNLOCKED when the queue is not locked. *\/$/;"	m	struct:QueueDefinition	file:
calcHash	../peripherals/memory/mem_peri.c	/^	uint8_t calcHash[OAD_IMAGE_HEADER_HASHSZ];$/;"	l
calc_chunk	../peripherals/memory/sha-256.c	/^static int calc_chunk(uint8_t chunk[CHUNK_SIZE], struct buffer_state * state)$/;"	f	file:
calc_chunk_flash	../peripherals/memory/sha-256.c	/^static int calc_chunk_flash(uint8_t chunk[CHUNK_SIZE], struct buffer_state * state)$/;"	f	file:
calc_sha_256	../peripherals/memory/mem_peri.h	/^void calc_sha_256(uint8_t hash[32],$/;"	p
calc_sha_256	../peripherals/memory/sha-256.c	/^void calc_sha_256(uint8_t hash[32],$/;"	f
calc_sha_256	unit_test/mocks/include/mem_peri.h	/^void calc_sha_256(uint8_t hash[32],$/;"	p
calc_sha_256_flash	../peripherals/memory/mem_peri.h	/^void calc_sha_256_flash(uint8_t hash[32],$/;"	p
calc_sha_256_flash	../peripherals/memory/sha-256.c	/^void calc_sha_256_flash(uint8_t hash[32], const void * input, size_t len)$/;"	f
calc_sha_256_flash	unit_test/mocks/include/mem_peri.h	/^void calc_sha_256_flash(uint8_t hash[32],$/;"	p
calibrated	../statemachine/statemachine_types.h	/^	bool calibrated;$/;"	m	struct:__anon1
callb	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  TimerCallback_t *callb;$/;"	l
capacity	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t capacity;$/;"	l
cb_mem	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  void                      *cb_mem;    \/\/\/< memory for control block$/;"	m	struct:__anon17
cb_mem	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  void                      *cb_mem;    \/\/\/< memory for control block$/;"	m	struct:__anon18
cb_mem	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  void                      *cb_mem;    \/\/\/< memory for control block$/;"	m	struct:__anon19
cb_mem	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  void                      *cb_mem;    \/\/\/< memory for control block$/;"	m	struct:__anon20
cb_mem	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  void                      *cb_mem;    \/\/\/< memory for control block$/;"	m	struct:__anon21
cb_mem	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  void                      *cb_mem;    \/\/\/< memory for control block$/;"	m	struct:__anon22
cb_mem	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  void                      *cb_mem;    \/\/\/< memory for control block$/;"	m	struct:__anon23
cb_size	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                   cb_size;   \/\/\/< size of provided memory for control block$/;"	m	struct:__anon17
cb_size	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                   cb_size;   \/\/\/< size of provided memory for control block$/;"	m	struct:__anon18
cb_size	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                   cb_size;   \/\/\/< size of provided memory for control block$/;"	m	struct:__anon19
cb_size	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                   cb_size;   \/\/\/< size of provided memory for control block$/;"	m	struct:__anon20
cb_size	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                   cb_size;   \/\/\/< size of provided memory for control block$/;"	m	struct:__anon21
cb_size	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                   cb_size;   \/\/\/< size of provided memory for control block$/;"	m	struct:__anon22
cb_size	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                   cb_size;   \/\/\/< size of provided memory for control block$/;"	m	struct:__anon23
cc	libfoxenflac/foxen/flac.c	/^	const uint8_t cc = fh->channel_count;$/;"	l
cd_pin	../sub/powerui/powerui_types.h	/^    uint16_t cd_pin;$/;"	m	struct:__anon11
cflags	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t rflags, cflags;$/;"	l
ch	../peripherals/memory/sha-256.c	/^				const uint32_t ch = (ah[4] & ah[5]) ^ (~ah[4] & ah[6]);$/;"	l
chan_cur	libfoxenflac/foxen/flac.c	/^	uint8_t chan_cur;$/;"	m	struct:fx_flac	file:
channel	../sub/powerui/powerui_types.h	/^	uint8_t channel;$/;"	m	struct:__anon7
channel_assignment	libfoxenflac/foxen/flac.c	/^	fx_flac_channel_assignment_t channel_assignment;$/;"	m	struct:__anon11	file:
channel_count	libfoxenflac/foxen/flac.c	/^	uint8_t channel_count;$/;"	m	struct:__anon11	file:
check_flac_metadata_long	libfoxenflac/test/test_flac.c	/^static void check_flac_metadata_long(fx_flac_t *inst)$/;"	f	file:
check_flac_metadata_short	libfoxenflac/test/test_flac.c	/^static void check_flac_metadata_short(fx_flac_t *inst)$/;"	f	file:
chip_id	../peripherals/memory/mem_peri.h	/^    uint32_t chip_id;$/;"	m	struct:__anon4
chip_id	unit_test/mocks/include/mem_peri.h	/^    uint32_t chip_id;$/;"	m	struct:__anon12
chunk	../peripherals/memory/sha-256.c	/^	MemChunk *chunk;$/;"	m	struct:buffer_state	file:
chunk	../peripherals/memory/sha-256.c	/^	uint8_t *chunk = mem->buffer;$/;"	l
chunk	../peripherals/memory/sha-256.c	/^	uint8_t chunk[64];$/;"	l
chunks	../peripherals/memory/mem_peri.h	/^    MemChunk *chunks;$/;"	m	struct:__anon4
chunks	unit_test/mocks/include/mem_peri.h	/^    MemChunk *chunks;$/;"	m	struct:__anon12
class	libfoxenflac/build/meson-private/sanitycheckc.c	/^int main(void) { int class=0; return class; }$/;"	l
clear	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t clear;$/;"	l
clip	clip_handler/clip_handler.c	/^  struct clip_node *clip;$/;"	m	struct:clip_handler	typeref:struct:clip_handler::clip_node	file:
clip_h	clip_handler/clip_handler.c	/^struct clip_handler clip_h = {$/;"	v	typeref:struct:clip_handler
clip_handle	unit_test/clips/clip.h	/^struct clip_handle {$/;"	s
clip_handler	clip_handler/clip_handler.c	/^struct clip_handler {$/;"	s	file:
clip_handler_chunk_read	clip_handler/clip_handler.c	/^int32_t clip_handler_chunk_read(uint8_t *chk, uint32_t size) {$/;"	f
clip_handler_chunk_read	clip_handler/clip_handler.h	/^int32_t clip_handler_chunk_read(uint8_t *chk, uint32_t size);$/;"	p
clip_handler_get_sample_rate	clip_handler/clip_handler.c	/^uint32_t clip_handler_get_sample_rate(void) {$/;"	f
clip_handler_get_sample_rate	clip_handler/clip_handler.h	/^uint32_t clip_handler_get_sample_rate(void);$/;"	p
clip_handler_init_clip	clip_handler/clip_handler.c	/^int32_t clip_handler_init_clip(uint8_t clip_idx) {$/;"	f
clip_handler_init_clip	clip_handler/clip_handler.h	/^int32_t clip_handler_init_clip(uint8_t clip_idx);$/;"	p
clip_handler_is_stereo	clip_handler/clip_handler.c	/^bool clip_handler_is_stereo(void) {$/;"	f
clip_handler_is_stereo	clip_handler/clip_handler.h	/^bool clip_handler_is_stereo(void);$/;"	p
clip_idx	decoder/decoder.c	/^  uint8_t clip_idx;$/;"	m	struct:decoder	file:
clip_node	clip_handler/clip_handler.c	/^struct clip_node {$/;"	s	file:
clip_siren	unit_test/clips/clip.h	/^struct clip_handle clip_siren = {$/;"	v	typeref:struct:clip_handle
clkconfig	../Core/Src/stm32f4xx_hal_timebase_tim.c	/^  RCC_ClkInitTypeDef    clkconfig;$/;"	l
clockreg	../sub/audio/audio_types.h	/^    uint32_t clockreg;$/;"	m	struct:__anon19
clockreg	unit_test/mocks/include/audio_types.h	/^    uint32_t clockreg;$/;"	m	struct:__anon7
cmd	../sub/powerui/powerui.c	/^    PowerUICmd cmd;$/;"	l
cmd	../sub/powerui/powerui_types.h	/^    PowerUICmdType cmd;$/;"	m	struct:__anon10
coef	libfoxenflac/foxen/flac.c	/^				uint32_t coef = READ_BITS_CRC(sfh->lpc_prec);$/;"	l
coef_cur	libfoxenflac/foxen/flac.c	/^	uint8_t coef_cur;$/;"	m	struct:fx_flac	file:
compare_to_reference_decoder	libfoxenflac/test/test_flac_integration.c	/^static bool compare_to_reference_decoder(const char *file)$/;"	f	file:
configAPPLICATION_ALLOCATED_HEAP	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configAPPLICATION_ALLOCATED_HEAP /;"	d
configASSERT	../Core/Inc/FreeRTOSConfig.h	/^#define configASSERT(/;"	d
configASSERT	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configASSERT(/;"	d
configASSERT_DEFINED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configASSERT_DEFINED /;"	d
configCHECK_FOR_STACK_OVERFLOW	../Core/Inc/FreeRTOSConfig.h	/^#define configCHECK_FOR_STACK_OVERFLOW /;"	d
configCHECK_FOR_STACK_OVERFLOW	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configCHECK_FOR_STACK_OVERFLOW /;"	d
configCPU_CLOCK_HZ	../Core/Inc/FreeRTOSConfig.h	/^#define configCPU_CLOCK_HZ /;"	d
configENABLE_BACKWARD_COMPATIBILITY	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configENABLE_BACKWARD_COMPATIBILITY /;"	d
configENABLE_FPU	../Core/Inc/FreeRTOSConfig.h	/^#define configENABLE_FPU /;"	d
configENABLE_FPU	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configENABLE_FPU /;"	d
configENABLE_MPU	../Core/Inc/FreeRTOSConfig.h	/^#define configENABLE_MPU /;"	d
configENABLE_MPU	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configENABLE_MPU /;"	d
configENABLE_TRUSTZONE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configENABLE_TRUSTZONE /;"	d
configEXPECTED_IDLE_TIME_BEFORE_SLEEP	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configEXPECTED_IDLE_TIME_BEFORE_SLEEP /;"	d
configGENERATE_RUN_TIME_STATS	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configGENERATE_RUN_TIME_STATS /;"	d
configHEAP_5_REGIONS	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^    #define configHEAP_5_REGIONS /;"	d	file:
configHEAP_5_REGIONS	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^    extern HeapRegion_t configHEAP_5_REGIONS[];$/;"	x
configIDLE_SHOULD_YIELD	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configIDLE_SHOULD_YIELD	/;"	d
configIDLE_TASK_NAME	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	#define configIDLE_TASK_NAME /;"	d	file:
configINCLUDE_APPLICATION_DEFINED_PRIVILEGED_FUNCTIONS	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configINCLUDE_APPLICATION_DEFINED_PRIVILEGED_FUNCTIONS /;"	d
configINCLUDE_FREERTOS_TASK_C_ADDITIONS_H	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configINCLUDE_FREERTOS_TASK_C_ADDITIONS_H /;"	d
configINITIAL_TICK_COUNT	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configINITIAL_TICK_COUNT /;"	d
configKERNEL_INTERRUPT_PRIORITY	../Core/Inc/FreeRTOSConfig.h	/^#define configKERNEL_INTERRUPT_PRIORITY /;"	d
configLIBRARY_LOWEST_INTERRUPT_PRIORITY	../Core/Inc/FreeRTOSConfig.h	/^#define configLIBRARY_LOWEST_INTERRUPT_PRIORITY /;"	d
configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY	../Core/Inc/FreeRTOSConfig.h	/^#define configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY /;"	d
configLIST_VOLATILE	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	#define configLIST_VOLATILE$/;"	d
configMAX	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configMAX(/;"	d
configMAX_CO_ROUTINE_PRIORITIES	../Core/Inc/FreeRTOSConfig.h	/^#define configMAX_CO_ROUTINE_PRIORITIES /;"	d
configMAX_PRIORITIES	../Core/Inc/FreeRTOSConfig.h	/^#define configMAX_PRIORITIES /;"	d
configMAX_SYSCALL_INTERRUPT_PRIORITY	../Core/Inc/FreeRTOSConfig.h	/^#define configMAX_SYSCALL_INTERRUPT_PRIORITY /;"	d
configMAX_TASK_NAME_LEN	../Core/Inc/FreeRTOSConfig.h	/^#define configMAX_TASK_NAME_LEN /;"	d
configMAX_TASK_NAME_LEN	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configMAX_TASK_NAME_LEN /;"	d
configMESSAGE_BUFFER_LENGTH_TYPE	../Core/Inc/FreeRTOSConfig.h	/^#define configMESSAGE_BUFFER_LENGTH_TYPE /;"	d
configMESSAGE_BUFFER_LENGTH_TYPE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configMESSAGE_BUFFER_LENGTH_TYPE /;"	d
configMIN	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configMIN(/;"	d
configMINIMAL_STACK_SIZE	../Core/Inc/FreeRTOSConfig.h	/^#define configMINIMAL_STACK_SIZE /;"	d
configNUM_THREAD_LOCAL_STORAGE_POINTERS	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configNUM_THREAD_LOCAL_STORAGE_POINTERS /;"	d
configPOST_SLEEP_PROCESSING	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configPOST_SLEEP_PROCESSING(/;"	d
configPRE_SLEEP_PROCESSING	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configPRE_SLEEP_PROCESSING(/;"	d
configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING(/;"	d
configPRINTF	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configPRINTF(/;"	d
configPRIO_BITS	../Core/Inc/FreeRTOSConfig.h	/^ #define configPRIO_BITS /;"	d
configQUEUE_REGISTRY_SIZE	../Core/Inc/FreeRTOSConfig.h	/^#define configQUEUE_REGISTRY_SIZE /;"	d
configQUEUE_REGISTRY_SIZE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configQUEUE_REGISTRY_SIZE /;"	d
configRECORD_STACK_HIGH_ADDRESS	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configRECORD_STACK_HIGH_ADDRESS /;"	d
configRUN_FREERTOS_SECURE_ONLY	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configRUN_FREERTOS_SECURE_ONLY /;"	d
configSTACK_DEPTH_TYPE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configSTACK_DEPTH_TYPE /;"	d
configSUPPORT_DYNAMIC_ALLOCATION	../Core/Inc/FreeRTOSConfig.h	/^#define configSUPPORT_DYNAMIC_ALLOCATION /;"	d
configSUPPORT_DYNAMIC_ALLOCATION	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configSUPPORT_DYNAMIC_ALLOCATION /;"	d
configSUPPORT_STATIC_ALLOCATION	../Core/Inc/FreeRTOSConfig.h	/^#define configSUPPORT_STATIC_ALLOCATION /;"	d
configSUPPORT_STATIC_ALLOCATION	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configSUPPORT_STATIC_ALLOCATION /;"	d
configTICK_RATE_HZ	../Core/Inc/FreeRTOSConfig.h	/^#define configTICK_RATE_HZ /;"	d
configTIMER_QUEUE_LENGTH	../Core/Inc/FreeRTOSConfig.h	/^#define configTIMER_QUEUE_LENGTH /;"	d
configTIMER_SERVICE_TASK_NAME	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	#define configTIMER_SERVICE_TASK_NAME /;"	d	file:
configTIMER_TASK_PRIORITY	../Core/Inc/FreeRTOSConfig.h	/^#define configTIMER_TASK_PRIORITY /;"	d
configTIMER_TASK_STACK_DEPTH	../Core/Inc/FreeRTOSConfig.h	/^#define configTIMER_TASK_STACK_DEPTH /;"	d
configTOTAL_HEAP_SIZE	../Core/Inc/FreeRTOSConfig.h	/^#define configTOTAL_HEAP_SIZE /;"	d
configUSE_16_BIT_TICKS	../Core/Inc/FreeRTOSConfig.h	/^#define configUSE_16_BIT_TICKS /;"	d
configUSE_ALTERNATIVE_API	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_ALTERNATIVE_API /;"	d
configUSE_APPLICATION_TASK_TAG	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_APPLICATION_TASK_TAG /;"	d
configUSE_COUNTING_SEMAPHORES	../Core/Inc/FreeRTOSConfig.h	/^#define configUSE_COUNTING_SEMAPHORES /;"	d
configUSE_COUNTING_SEMAPHORES	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_COUNTING_SEMAPHORES /;"	d
configUSE_CO_ROUTINES	../Core/Inc/FreeRTOSConfig.h	/^#define configUSE_CO_ROUTINES /;"	d
configUSE_CO_ROUTINES	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_CO_ROUTINES /;"	d
configUSE_DAEMON_TASK_STARTUP_HOOK	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_DAEMON_TASK_STARTUP_HOOK /;"	d
configUSE_IDLE_HOOK	../Core/Inc/FreeRTOSConfig.h	/^#define configUSE_IDLE_HOOK /;"	d
configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^	#define configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES /;"	d
configUSE_MALLOC_FAILED_HOOK	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_MALLOC_FAILED_HOOK /;"	d
configUSE_MUTEXES	../Core/Inc/FreeRTOSConfig.h	/^#define configUSE_MUTEXES /;"	d
configUSE_MUTEXES	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_MUTEXES /;"	d
configUSE_NEWLIB_REENTRANT	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_NEWLIB_REENTRANT /;"	d
configUSE_PORT_OPTIMISED_TASK_SELECTION	../Core/Inc/FreeRTOSConfig.h	/^#define configUSE_PORT_OPTIMISED_TASK_SELECTION /;"	d
configUSE_PORT_OPTIMISED_TASK_SELECTION	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_PORT_OPTIMISED_TASK_SELECTION /;"	d
configUSE_POSIX_ERRNO	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_POSIX_ERRNO /;"	d
configUSE_PREEMPTION	../Core/Inc/FreeRTOSConfig.h	/^#define configUSE_PREEMPTION /;"	d
configUSE_QUEUE_SETS	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_QUEUE_SETS /;"	d
configUSE_RECURSIVE_MUTEXES	../Core/Inc/FreeRTOSConfig.h	/^#define configUSE_RECURSIVE_MUTEXES /;"	d
configUSE_RECURSIVE_MUTEXES	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_RECURSIVE_MUTEXES /;"	d
configUSE_STATS_FORMATTING_FUNCTIONS	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_STATS_FORMATTING_FUNCTIONS /;"	d
configUSE_TASK_FPU_SUPPORT	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_TASK_FPU_SUPPORT /;"	d
configUSE_TASK_NOTIFICATIONS	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_TASK_NOTIFICATIONS /;"	d
configUSE_TICKLESS_IDLE	../Core/Inc/FreeRTOSConfig.h	/^#define configUSE_TICKLESS_IDLE /;"	d
configUSE_TICKLESS_IDLE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_TICKLESS_IDLE /;"	d
configUSE_TICK_HOOK	../Core/Inc/FreeRTOSConfig.h	/^#define configUSE_TICK_HOOK /;"	d
configUSE_TIMERS	../Core/Inc/FreeRTOSConfig.h	/^#define configUSE_TIMERS /;"	d
configUSE_TIMERS	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_TIMERS /;"	d
configUSE_TIME_SLICING	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_TIME_SLICING /;"	d
configUSE_TRACE_FACILITY	../Core/Inc/FreeRTOSConfig.h	/^#define configUSE_TRACE_FACILITY /;"	d
configUSE_TRACE_FACILITY	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define configUSE_TRACE_FACILITY /;"	d
corCoRoutineControlBlock	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^typedef struct corCoRoutineControlBlock$/;"	s
corINITIAL_STATE	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^#define corINITIAL_STATE	/;"	d	file:
core	../sub/audio/audio.c	/^    uint8_t core = 0;$/;"	l
count	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  UBaseType_t count;$/;"	l
count	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t count;$/;"	l
count	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t i, count;$/;"	l
count	../peripherals/spi/spi_peri.h	/^    size_t count;$/;"	m	struct:__anon8
crCOROUTINE_CODE	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^typedef void (*crCOROUTINE_CODE)( CoRoutineHandle_t, UBaseType_t );$/;"	t
crDELAY	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^#define crDELAY(/;"	d
crEND	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^#define crEND(/;"	d
crQUEUE_RECEIVE	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^#define crQUEUE_RECEIVE(/;"	d
crQUEUE_RECEIVE_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^#define crQUEUE_RECEIVE_FROM_ISR(/;"	d
crQUEUE_SEND	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^#define crQUEUE_SEND(/;"	d
crQUEUE_SEND_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^#define crQUEUE_SEND_FROM_ISR(/;"	d
crSET_STATE0	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^#define crSET_STATE0(/;"	d
crSET_STATE1	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^#define crSET_STATE1(/;"	d
crSTART	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^#define crSTART(/;"	d
crc16	libfoxenflac/foxen/flac.c	/^			uint16_t crc16 = READ_BITS(16U);$/;"	l
crc16	libfoxenflac/foxen/flac.c	/^	uint16_t crc16;$/;"	m	struct:fx_flac	file:
crc8	libfoxenflac/foxen/flac.c	/^	uint8_t crc8;$/;"	m	struct:__anon11	file:
crc8	libfoxenflac/foxen/flac.c	/^	uint8_t crc8;$/;"	m	struct:fx_flac	file:
cs_pin	../peripherals/memory/mem_peri.h	/^    uint16_t cs_pin;$/;"	m	struct:__anon4
cs_pin	../sub/audio/audio_types.h	/^	uint16_t cs_pin;$/;"	m	struct:__anon20
cs_pin	unit_test/mocks/include/mem_peri.h	/^    uint16_t cs_pin;$/;"	m	struct:__anon12
cs_port	../peripherals/memory/mem_peri.h	/^    GPIO_TypeDef *cs_port;$/;"	m	struct:__anon4
cs_port	../sub/audio/audio_types.h	/^    GPIO_TypeDef *cs_port;$/;"	m	struct:__anon20
cs_port	unit_test/mocks/include/mem_peri.h	/^    GPIO_TypeDef *cs_port;$/;"	m	struct:__anon12
current_state	../statemachine/statemachine_types.h	/^    sysState current_state;$/;"	m	struct:__anon5
cursor	decoder/decoder.c	/^  uint32_t cursor;$/;"	m	struct:decoder	file:
dac	dac_handler/dac_handler.h	/^struct dac {$/;"	s
dac	decoder/decoder.c	/^struct dac dac = {$/;"	v	typeref:struct:dac
dac_handler_dma_buffer_feed	dac_handler/dac_handler.c	/^int32_t dac_handler_dma_buffer_feed(struct dac *o) {$/;"	f
dac_handler_dma_buffer_feed	dac_handler/dac_handler.h	/^int32_t dac_handler_dma_buffer_feed(struct dac *o);$/;"	p
dac_handler_init	dac_handler/dac_handler.c	/^int32_t dac_handler_init(struct dac *o) {$/;"	f
dac_handler_init	dac_handler/dac_handler.h	/^int32_t dac_handler_init(struct dac *o);$/;"	p
dac_handler_ring_buffer_push_sample	dac_handler/dac_handler.c	/^int32_t dac_handler_ring_buffer_push_sample(int16_t s) {$/;"	f
dac_handler_ring_buffer_push_sample	dac_handler/dac_handler.h	/^int32_t dac_handler_ring_buffer_push_sample(int16_t s);$/;"	p
dac_handler_ring_is_above_threshold	dac_handler/dac_handler.c	/^bool dac_handler_ring_is_above_threshold(void) {$/;"	f
dac_handler_ring_is_above_threshold	dac_handler/dac_handler.h	/^bool dac_handler_ring_is_above_threshold(void);$/;"	p
dac_handler_ring_is_empty	dac_handler/dac_handler.c	/^bool dac_handler_ring_is_empty(void) { return ring.is_empty; }$/;"	f
dac_handler_ring_is_empty	dac_handler/dac_handler.h	/^bool dac_handler_ring_is_empty(void);$/;"	p
dac_handler_start_stream	dac_handler/dac_handler.c	/^int32_t dac_handler_start_stream(struct dac *o) {$/;"	f
dac_handler_start_stream	dac_handler/dac_handler.h	/^int32_t dac_handler_start_stream(struct dac *o);$/;"	p
dac_handler_stop_stream	dac_handler/dac_handler.c	/^int32_t dac_handler_stop_stream(struct dac *o) {$/;"	f
dac_handler_stop_stream	dac_handler/dac_handler.h	/^int32_t dac_handler_stop_stream(struct dac *o);$/;"	p
data	../sub/audio/audio_mem.c	/^    AudMemReg data;$/;"	l
data	../sub/audio/audio_mem.h	/^    uint32_t data;$/;"	m	struct:__anon12
data	../sub/powerui/powerui.c	/^    uint8_t data = 0;$/;"	l
data	../sub/powerui/powerui_led.c	/^    uint8_t data = 0;$/;"	l
data	../sub/powerui/powerui_led.c	/^    uint8_t data = step;$/;"	l
data	../sub/powerui/powerui_types.h	/^    uint8_t data;$/;"	m	struct:__anon2
data	unit_test/mocks/include/audio_mem.h	/^    uint32_t data;$/;"	m	struct:__anon1
data_e	../peripherals/memory/internal_flash_driver.c	/^  uint8_t const *data_e;$/;"	l
data_r	../peripherals/memory/internal_flash_driver.c	/^  uint8_t data_r;$/;"	l
data_s	../peripherals/memory/internal_flash_driver.c	/^  size_t data_s = 0;$/;"	l
data_size	../sub/audio/audio_mem.c	/^    size_t start_address, word_count, data_size;$/;"	l
data_w	../peripherals/memory/internal_flash_driver.c	/^  uint32_t *data_w = (uint32_t *)data_ws;$/;"	l
data_wr	../peripherals/memory/internal_flash_driver.c	/^  uint8_t *data_wr = (uint8_t *)data_w;$/;"	l
data_ws	../peripherals/memory/internal_flash_driver.c	/^  uint8_t *data_ws = data;$/;"	l
date	../statemachine/statemachine.c	/^	RTC_DateTypeDef date;$/;"	l
decoded	decoder/decoder.c	/^  int32_t *decoded;$/;"	m	struct:decoder	file:
decoded_internal	decoder/decoder.c	/^int32_t decoded_internal[DECODED_BUF_SIZE];$/;"	v
decoded_size	decoder/decoder.c	/^  uint32_t decoded_size = DECODED_BUF_SIZE;$/;"	l
decoder	decoder/decoder.c	/^struct decoder decoder = {$/;"	v	typeref:struct:decoder
decoder	decoder/decoder.c	/^struct decoder {$/;"	s	file:
decoder_eostream_assign_callback	decoder/decoder.c	/^int32_t decoder_eostream_assign_callback(void (*cb)(void *context)) {$/;"	f
decoder_eostream_assign_callback	decoder/decoder.h	/^int32_t decoder_eostream_assign_callback(void (*cb)(void *context));$/;"	p
decoder_event	decoder/decoder.h	/^enum decoder_event {$/;"	g
decoder_get_task_state	decoder/decoder.c	/^int32_t decoder_get_task_state(void) { return (int32_t)task_state; }$/;"	f
decoder_get_task_state	decoder/decoder.h	/^int32_t decoder_get_task_state(void);$/;"	p
decoder_play_clip	decoder/decoder.c	/^int32_t decoder_play_clip(uint8_t clip_idx) {$/;"	f
decoder_play_clip	decoder/decoder.h	/^int32_t decoder_play_clip(uint8_t clip_idx);$/;"	p
decoder_thread	decoder/decoder.c	/^int32_t decoder_thread(void) {$/;"	f
decoder_thread	decoder/decoder.h	/^int32_t decoder_thread(void);$/;"	p
def	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  } def;                                \/\/\/< event definition$/;"	m	struct:__anon8	typeref:union:__anon8::__anon10
defaultTaskHandle	../Core/Src/freertos.c	/^osThreadId_t defaultTaskHandle;$/;"	v
defaultTask_attributes	../Core/Src/freertos.c	/^const osThreadAttr_t defaultTask_attributes = {$/;"	v
delay	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  TickType_t tcnt, delay;$/;"	l
details	../statemachine/statemachine_types.h	/^    sysDetails details;$/;"	m	struct:__anon5
devID	../statemachine/statemachine_types.h	/^	char devID[4];$/;"	m	struct:__anon1
devName	../statemachine/statemachine_types.h	/^	char devName[13];$/;"	m	struct:__anon1
dev_id	../peripherals/memory/mem_peri.h	/^    uint8_t dev_id;$/;"	m	struct:__anon4
dev_id	unit_test/mocks/include/mem_peri.h	/^    uint8_t dev_id;$/;"	m	struct:__anon12
dma_buf	wrappers/wrp_i2s.c	/^int16_t dma_buf[DMA_BUF_SIZE];$/;"	v
dma_handle	../peripherals/i2s/i2s_peri.h	/^  DMA_HandleTypeDef *dma_handle;$/;"	m	struct:__anon13
done	libfoxenflac/examples/flac_decoder.c	/^	bool done = false;$/;"	l
done	libfoxenflac/foxen/flac.c	/^	bool done = false;$/;"	l
done	unit_test/unit_test.c	/^	bool done = false;$/;"	l
dsp_config	../sub/audio/audio_types.h	/^    AudioDSPConfig *dsp_config;$/;"	m	struct:__anon20
dsp_config	unit_test/mocks/include/audio_types.h	/^    AudioDSPConfig *dsp_config;$/;"	m	struct:__anon8
dsp_loadstat	../sub/audio/audio.c	/^    AudMemStatus dsp_loadstat = AUDMEM_SUCCESS;$/;"	l
dsp_loadsuccess	../sub/audio/audio.c	/^    bool dsp_loadsuccess = true;$/;"	l
dummy	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  uint32_t                     dummy;   \/\/\/< dummy value$/;"	m	struct:os_mutex_def
dummy	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  uint32_t                     dummy;   \/\/\/< dummy value$/;"	m	struct:os_semaphore_def
e	dac_handler/ring16/ring16.c	/^    int e = ring16_pop(rb, &o[n]);$/;"	l
eAbortSleep	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	eAbortSleep = 0,		\/* A task has been made ready or a context switch pended since portSUPPORESS_TICKS_AND_SLEEP() was called - abort entering a sleep mode. *\/$/;"	e	enum:__anon3
eBlocked	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	eBlocked,		\/* The task being queried is in the Blocked state. *\/$/;"	e	enum:__anon1
eCurrentState	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	eTaskState eCurrentState;		\/* The state in which the task existed when the structure was populated. *\/$/;"	m	struct:xTASK_STATUS
eDeleted	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	eDeleted,		\/* The task being queried has been deleted, but its TCB has not yet been freed. *\/$/;"	e	enum:__anon1
eIncrement	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	eIncrement,					\/* Increment the task's notification value. *\/$/;"	e	enum:__anon2
eInvalid	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	eInvalid		\/* Used as an 'invalid state' value. *\/$/;"	e	enum:__anon1
eNoAction	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	eNoAction = 0,				\/* Notify the task without updating its notify value. *\/$/;"	e	enum:__anon2
eNoTasksWaitingTimeout	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	eNoTasksWaitingTimeout	\/* No tasks are waiting for a timeout so it is safe to enter a sleep mode that can only be exited by an external interrupt. *\/$/;"	e	enum:__anon3
eNotifyAction	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^} eNotifyAction;$/;"	t	typeref:enum:__anon2
eReady	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	eReady,			\/* The task being queried is in a read or pending ready list. *\/$/;"	e	enum:__anon1
eReturn	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	eSleepModeStatus eReturn = eStandardSleep;$/;"	l
eReturn	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	eTaskState eReturn;$/;"	l
eRunning	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	eRunning = 0,	\/* A task is querying the state of itself, so must be running. *\/$/;"	e	enum:__anon1
eSetBits	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	eSetBits,					\/* Set bits in the task's notification value. *\/$/;"	e	enum:__anon2
eSetValueWithOverwrite	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	eSetValueWithOverwrite,		\/* Set the task's notification value to a specific value even if the previous value has not yet been read by the task. *\/$/;"	e	enum:__anon2
eSetValueWithoutOverwrite	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	eSetValueWithoutOverwrite	\/* Set the task's notification value if the previous value has been read by the task. *\/$/;"	e	enum:__anon2
eSleepModeStatus	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^} eSleepModeStatus;$/;"	t	typeref:enum:__anon3
eSleepStatus	../statemachine/statemachine.c	/^	eSleepModeStatus eSleepStatus = eTaskConfirmSleepModeStatus();$/;"	l
eStandardSleep	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	eStandardSleep,			\/* Enter a sleep mode that will not last any longer than the expected idle time. *\/$/;"	e	enum:__anon3
eSuspended	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	eSuspended,		\/* The task being queried is in the Suspended state, or is in the Blocked state with an infinite time out. *\/$/;"	e	enum:__anon1
eTaskConfirmSleepModeStatus	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	eSleepModeStatus eTaskConfirmSleepModeStatus( void )$/;"	f
eTaskGetState	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define eTaskGetState	/;"	d
eTaskGetState	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	eTaskState eTaskGetState( TaskHandle_t xTask )$/;"	f
eTaskState	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^} eTaskState;$/;"	t	typeref:enum:__anon1
eTaskStateGet	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define eTaskStateGet /;"	d
elem	../peripherals/memory/mem_peri.c	/^	MemElement elem;$/;"	l
elem	../peripherals/memory/sha-256.c	/^	MemElement *elem;$/;"	m	struct:buffer_state	file:
elem	../statemachine/statemachine.c	/^	MemElement elem;$/;"	l
elem_index	../peripherals/memory/mem_peri.c	/^    uint16_t elem_index = 0;$/;"	l
elem_index	../statemachine/statemachine.c	/^	uint16_t elem_index;$/;"	l
elem_offset	../sub/audio/audio_mem.c	/^    size_t elem_offset;$/;"	l
elemblock_offset	../peripherals/memory/mem_peri.c	/^    size_t elemblock_offset = memReturnChunkEnd(mem, chunk) - ((elem_index + 1) * MEM_ELEMBLK_SIZE);$/;"	l
elemindex	../sub/audio/audio_mem.c	/^    uint16_t elemindex;$/;"	l
elemindex	../sub/powerui/powerui.c	/^	uint16_t elemindex;$/;"	l
elemoffs	../peripherals/memory/sha-256.c	/^	size_t elemoffs;$/;"	m	struct:buffer_state	file:
enable	../sub/audio/audio_types.h	/^    bool enable;$/;"	m	struct:__anon19
enable	unit_test/mocks/include/audio_types.h	/^    bool enable;$/;"	m	struct:__anon7
end	../peripherals/memory/mem_peri.c	/^    size_t end = chunk->offset;$/;"	l
end_offset	../peripherals/memory/mem_peri.c	/^    size_t end_offset = memExtractElementOffset(temp);$/;"	l
entries	dac_handler/ring16/ring16.h	/^  uint16_t entries;$/;"	m	struct:ring16
environ	../Core/Src/syscalls.c	/^char **environ = __env;$/;"	v
eoc	decoder/decoder.c	/^  bool eoc;$/;"	m	struct:decoder	file:
eostream	dac_handler/dac_handler.h	/^  void (*eostream)(void *context);$/;"	m	struct:dac
eq_config	../sub/audio/audio_types.h	/^    AudioEQConfig *eq_config;$/;"	m	struct:__anon20
eq_coord	../sub/audio/audio_types.h	/^    uint8_t eq_coord[2];$/;"	m	struct:__anon20
errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY	/;"	d
errQUEUE_BLOCKED	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define errQUEUE_BLOCKED	/;"	d
errQUEUE_EMPTY	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define errQUEUE_EMPTY	/;"	d
errQUEUE_FULL	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define errQUEUE_FULL	/;"	d
errQUEUE_YIELD	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define errQUEUE_YIELD	/;"	d
errno	../Core/Src/syscalls.c	/^extern int errno;$/;"	x
errno	../Core/Src/sysmem.c	/^extern int errno;$/;"	x
eventCLEAR_EVENTS_ON_EXIT_BIT	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^	#define eventCLEAR_EVENTS_ON_EXIT_BIT	/;"	d	file:
eventEVENT_BITS_CONTROL_BYTES	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^	#define eventEVENT_BITS_CONTROL_BYTES	/;"	d	file:
eventUNBLOCKED_DUE_TO_BIT_SET	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^	#define eventUNBLOCKED_DUE_TO_BIT_SET	/;"	d	file:
eventWAIT_FOR_ALL_BITS	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^	#define eventWAIT_FOR_ALL_BITS	/;"	d	file:
event_cb	decoder/decoder.c	/^void (*event_cb)(void *context);$/;"	v
evt	decoder/decoder.c	/^  enum decoder_event evt = DECODER_BUFFERING_START;$/;"	l
evt	decoder/decoder.c	/^  enum decoder_event evt = DEC_BUFFERING;$/;"	l
evt	decoder/decoder.c	/^  enum decoder_event evt = DEC_STREAMING;$/;"	l
exit_clr	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  BaseType_t exit_clr;$/;"	l
expect	libfoxenflac/test/test_flac.c	/^			const int32_t expect = out_[out_ptr++];$/;"	l
expected	libfoxenflac/test/test_flac_integration.c	/^			int32_t expected = SIGN_EXTEND(in, bps);$/;"	l
expected_states	libfoxenflac/test/test_flac.c	/^	const fx_flac_state_t expected_states[7][2] = {$/;"	l
f	libfoxenflac/examples/flac_decoder.c	/^	FILE *f = *argv[1] == '-' ? stdin : fopen(argv[1], "rb");$/;"	l
f	unit_test/unit_test.c	/^	FILE *f = *argv[1] == '-' ? stdin : fopen(argv[1], "rb");$/;"	l
fault	../sub/powerui/powerui_types.h	/^    BQFault fault;$/;"	m	struct:__anon11
fflac	libfoxenflac/test/test_flac_integration.c	/^	FILE *fin = NULL, *fflac = NULL;$/;"	l
fh	libfoxenflac/foxen/flac.c	/^	const fx_flac_frame_header_t *fh = inst->frame_header;$/;"	l
fh	libfoxenflac/foxen/flac.c	/^	fx_flac_frame_header_t *fh = inst->frame_header;$/;"	l
fin	libfoxenflac/test/test_flac_integration.c	/^	FILE *fin = NULL, *fflac = NULL;$/;"	l
flac	decoder/decoder.c	/^  fx_flac_t *flac;$/;"	m	struct:decoder	file:
flac	libfoxenflac/examples/flac_decoder.c	/^	fx_flac_t *flac = FX_FLAC_ALLOC_DEFAULT();$/;"	l
flac	libfoxenflac/test/test_flac_integration.c	/^	fx_flac_t *flac = NULL;$/;"	l
flac	unit_test/unit_test.c	/^	fx_flac_t *flac = FX_FLAC_ALLOC_SUBSET_FORMAT_DAT();$/;"	l
flac_bitstream	libfoxenflac/test/test_flac_integration.c	/^	fx_bitstream_t flac_bitstream;$/;"	l
flac_buf	libfoxenflac/test/test_flac_integration.c	/^	uint8_t flac_buf[128];$/;"	l
fn	unit_test/unit_test.c	/^  char fn[] = "decoded\/stereo.mat";$/;"	l
fo	unit_test/unit_test.c	/^  FILE *fo = fopen(fn, "w");$/;"	l
foffset	../peripherals/memory/mem_peri.c	/^	size_t foffset = offset;$/;"	l
fr	clip_handler/clip_handler.c	/^struct clip_node fr = {$/;"	v	typeref:struct:clip_node
frame_debounce_clock	../sub/powerui/powerui_types.h	/^    TimerHandle_t frame_debounce_clock;$/;"	m	struct:__anon11
frame_header	libfoxenflac/foxen/flac.c	/^	fx_flac_frame_header_t *frame_header;$/;"	m	struct:fx_flac	file:
frame_status	../sub/powerui/powerui_types.h	/^    FrameStatus frame_status;$/;"	m	struct:__anon11
frame_status_last	../sub/powerui/powerui_types.h	/^    FrameStatus frame_status_last;$/;"	m	struct:__anon11
freertos_tasks_c_additions_init	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		static void freertos_tasks_c_additions_init( void )$/;"	f	file:
fs	libfoxenflac/foxen/flac.c	/^	const int32_t fs = fx_flac_sample_rates_[(int)sample_rate_enum];$/;"	l
func	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  osTimerFunc_t func;$/;"	m	struct:__anon3	file:
fw_version	../statemachine/statemachine_types.h	/^	uint8_t fw_version;$/;"	m	struct:__anon1
fx_flac	libfoxenflac/foxen/flac.c	/^struct fx_flac {$/;"	s	file:
fx_flac	libfoxenflac/foxen/flac.h	/^struct fx_flac;$/;"	x
fx_flac_block_size_t	libfoxenflac/foxen/flac.c	/^} fx_flac_block_size_t;$/;"	t	typeref:enum:__anon4	file:
fx_flac_block_sizes_	libfoxenflac/foxen/flac.c	/^static const int32_t fx_flac_block_sizes_[] = {$/;"	v	file:
fx_flac_blocking_strategy_t	libfoxenflac/foxen/flac.c	/^typedef enum { BLK_FIXED = 0, BLK_VARIABLE = 1 } fx_flac_blocking_strategy_t;$/;"	t	typeref:enum:__anon2	file:
fx_flac_channel_assignment_t	libfoxenflac/foxen/flac.c	/^} fx_flac_channel_assignment_t;$/;"	t	typeref:enum:__anon3	file:
fx_flac_crc16_table_	libfoxenflac/foxen/flac.c	/^static const uint16_t fx_flac_crc16_table_[256] = {$/;"	v	file:
fx_flac_crc8_table_	libfoxenflac/foxen/flac.c	/^static const uint8_t fx_flac_crc8_table_[256] = {$/;"	v	file:
fx_flac_frame_header_t	libfoxenflac/foxen/flac.c	/^} fx_flac_frame_header_t;$/;"	t	typeref:struct:__anon11	file:
fx_flac_get_state	libfoxenflac/foxen/flac.c	/^fx_flac_state_t fx_flac_get_state(const fx_flac_t *inst)$/;"	f
fx_flac_get_state	libfoxenflac/foxen/flac.h	/^FX_EXPORT fx_flac_state_t fx_flac_get_state(const fx_flac_t *inst);$/;"	p
fx_flac_get_streaminfo	libfoxenflac/foxen/flac.c	/^int64_t fx_flac_get_streaminfo(fx_flac_t const *inst,$/;"	f
fx_flac_get_streaminfo	libfoxenflac/foxen/flac.h	/^FX_EXPORT int64_t fx_flac_get_streaminfo(const fx_flac_t *inst,$/;"	p
fx_flac_init	libfoxenflac/foxen/flac.c	/^fx_flac_t *fx_flac_init(void *mem, uint16_t max_block_size,$/;"	f
fx_flac_init	libfoxenflac/foxen/flac.h	/^FX_EXPORT fx_flac_t *fx_flac_init(void *mem, uint16_t max_block_size,$/;"	p
fx_flac_metadata_t	libfoxenflac/foxen/flac.c	/^} fx_flac_metadata_t;$/;"	t	typeref:struct:__anon9	file:
fx_flac_metadata_type_t	libfoxenflac/foxen/flac.c	/^} fx_flac_metadata_type_t;$/;"	t	typeref:enum:__anon1	file:
fx_flac_private_state_t	libfoxenflac/foxen/flac.c	/^} fx_flac_private_state_t;$/;"	t	typeref:enum:__anon13	file:
fx_flac_process	libfoxenflac/foxen/flac.c	/^fx_flac_state_t fx_flac_process(fx_flac_t *inst, const uint8_t *in,$/;"	f
fx_flac_process	libfoxenflac/foxen/flac.h	/^FX_EXPORT fx_flac_state_t fx_flac_process(fx_flac_t *inst, const uint8_t *in,$/;"	p
fx_flac_reset	libfoxenflac/foxen/flac.c	/^void fx_flac_reset(fx_flac_t *inst)$/;"	f
fx_flac_reset	libfoxenflac/foxen/flac.h	/^FX_EXPORT void fx_flac_reset(fx_flac_t *inst);$/;"	p
fx_flac_residual_method_t	libfoxenflac/foxen/flac.c	/^} fx_flac_residual_method_t;$/;"	t	typeref:enum:__anon8	file:
fx_flac_sample_rate_t	libfoxenflac/foxen/flac.c	/^} fx_flac_sample_rate_t;$/;"	t	typeref:enum:__anon5	file:
fx_flac_sample_rates_	libfoxenflac/foxen/flac.c	/^static const int32_t fx_flac_sample_rates_[] = {$/;"	v	file:
fx_flac_sample_size_t	libfoxenflac/foxen/flac.c	/^} fx_flac_sample_size_t;$/;"	t	typeref:enum:__anon6	file:
fx_flac_sample_sizes_	libfoxenflac/foxen/flac.c	/^static const int8_t fx_flac_sample_sizes_[] = {0, 8, 12, -1, 16, 20, 24, -1};$/;"	v	file:
fx_flac_size	libfoxenflac/foxen/flac.c	/^uint32_t fx_flac_size(uint32_t max_block_size, uint8_t max_channels)$/;"	f
fx_flac_size	libfoxenflac/foxen/flac.h	/^FX_EXPORT uint32_t fx_flac_size(uint32_t max_block_size, uint8_t max_channels);$/;"	p
fx_flac_state_t	libfoxenflac/foxen/flac.h	/^} fx_flac_state_t;$/;"	t	typeref:enum:__anon14
fx_flac_streaminfo_key_t	libfoxenflac/foxen/flac.h	/^} fx_flac_streaminfo_key_t;$/;"	t	typeref:enum:__anon15
fx_flac_streaminfo_t	libfoxenflac/foxen/flac.c	/^} fx_flac_streaminfo_t;$/;"	t	typeref:struct:__anon10	file:
fx_flac_subframe_header_t	libfoxenflac/foxen/flac.c	/^} fx_flac_subframe_header_t;$/;"	t	typeref:struct:__anon12	file:
fx_flac_subframe_type_t	libfoxenflac/foxen/flac.c	/^} fx_flac_subframe_type_t;$/;"	t	typeref:enum:__anon7	file:
fx_flac_t	libfoxenflac/foxen/flac.h	/^typedef struct fx_flac fx_flac_t;$/;"	t	typeref:struct:fx_flac
generic_test_flac_single_frame	libfoxenflac/test/test_flac.c	/^static void generic_test_flac_single_frame(const uint8_t *in,$/;"	f	file:
generic_test_flac_single_frame_ex	libfoxenflac/test/test_flac.c	/^static void generic_test_flac_single_frame_ex(const uint8_t *in_,$/;"	f	file:
get_addr	clip_handler/clip_handler.c	/^  int32_t (*get_addr)(void);$/;"	m	struct:clip_handler	file:
get_size	clip_handler/clip_handler.c	/^  int32_t (*get_size)(void);$/;"	m	struct:clip_handler	file:
h	../peripherals/memory/sha-256.c	/^	uint32_t h[] = { 0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19 };$/;"	l
hEventGroup	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  EventGroupHandle_t hEventGroup = (EventGroupHandle_t)ef_id;$/;"	l
hEventGroup	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  EventGroupHandle_t hEventGroup;$/;"	l
hMutex	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  SemaphoreHandle_t hMutex;$/;"	l
hQueue	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  QueueHandle_t hQueue = (QueueHandle_t)mq_id;$/;"	l
hQueue	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  QueueHandle_t hQueue;$/;"	l
hSemaphore	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;$/;"	l
hSemaphore	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  SemaphoreHandle_t hSemaphore;$/;"	l
hTask	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  TaskHandle_t hTask = (TaskHandle_t)thread_id;$/;"	l
hTask	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  TaskHandle_t hTask;$/;"	l
hTimer	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  TimerHandle_t hTimer = (TimerHandle_t)timer_id;$/;"	l
hTimer	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  TimerHandle_t hTimer;$/;"	l
hall_pin	../sub/powerui/powerui_types.h	/^    uint16_t hall_pin;$/;"	m	struct:__anon11
hall_port	../sub/powerui/powerui_types.h	/^    GPIO_TypeDef *hall_port;$/;"	m	struct:__anon11
handle	../peripherals/i2c/i2c_peri.h	/^    I2C_HandleTypeDef *handle;$/;"	m	struct:__anon6
handle	../peripherals/i2s/i2s_peri.h	/^	I2S_HandleTypeDef *handle;$/;"	m	struct:__anon13
handle	../peripherals/spi/spi_peri.h	/^	SPI_HandleTypeDef *handle;$/;"	m	struct:__anon10
handle	../peripherals/spi/spi_peri.h	/^	SPI_HandleTypeDef *handle;$/;"	m	struct:__anon9
hdma_i2c1_rx	../Core/Inc/i2c.h	/^extern DMA_HandleTypeDef hdma_i2c1_rx;$/;"	x
hdma_i2c1_rx	../Core/Src/i2c.c	/^DMA_HandleTypeDef hdma_i2c1_rx;$/;"	v
hdma_i2c1_rx	../Core/Src/stm32f4xx_it.c	/^extern DMA_HandleTypeDef hdma_i2c1_rx;$/;"	x
hdma_i2c1_tx	../Core/Inc/i2c.h	/^extern DMA_HandleTypeDef hdma_i2c1_tx;$/;"	x
hdma_i2c1_tx	../Core/Src/i2c.c	/^DMA_HandleTypeDef hdma_i2c1_tx;$/;"	v
hdma_i2c1_tx	../Core/Src/stm32f4xx_it.c	/^extern DMA_HandleTypeDef hdma_i2c1_tx;$/;"	x
hdma_spi1_rx	../Core/Inc/spi.h	/^extern DMA_HandleTypeDef hdma_spi1_rx;$/;"	x
hdma_spi1_rx	../Core/Src/spi.c	/^DMA_HandleTypeDef hdma_spi1_rx;$/;"	v
hdma_spi1_rx	../Core/Src/stm32f4xx_it.c	/^extern DMA_HandleTypeDef hdma_spi1_rx;$/;"	x
hdma_spi1_tx	../Core/Inc/spi.h	/^extern DMA_HandleTypeDef hdma_spi1_tx;$/;"	x
hdma_spi1_tx	../Core/Src/spi.c	/^DMA_HandleTypeDef hdma_spi1_tx;$/;"	v
hdma_spi1_tx	../Core/Src/stm32f4xx_it.c	/^extern DMA_HandleTypeDef hdma_spi1_tx;$/;"	x
hdma_spi2_rx	../Core/Inc/spi.h	/^extern DMA_HandleTypeDef hdma_spi2_rx;$/;"	x
hdma_spi2_rx	../Core/Src/spi.c	/^DMA_HandleTypeDef hdma_spi2_rx;$/;"	v
hdma_spi2_rx	../Core/Src/stm32f4xx_it.c	/^extern DMA_HandleTypeDef hdma_spi2_rx;$/;"	x
hdma_spi2_tx	../Core/Inc/spi.h	/^extern DMA_HandleTypeDef hdma_spi2_tx;$/;"	x
hdma_spi2_tx	../Core/Src/spi.c	/^DMA_HandleTypeDef hdma_spi2_tx;$/;"	v
hdma_spi2_tx	../Core/Src/stm32f4xx_it.c	/^extern DMA_HandleTypeDef hdma_spi2_tx;$/;"	x
hdma_spi3_tx	../Core/Inc/i2s.h	/^extern DMA_HandleTypeDef hdma_spi3_tx;$/;"	x
hdma_spi3_tx	../Core/Src/i2s.c	/^DMA_HandleTypeDef hdma_spi3_tx;$/;"	v
hdma_spi3_tx	../Core/Src/stm32f4xx_it.c	/^extern DMA_HandleTypeDef hdma_spi3_tx;$/;"	x
hdma_usart1_rx	../Core/Src/stm32f4xx_it.c	/^extern DMA_HandleTypeDef hdma_usart1_rx;$/;"	x
hdma_usart1_rx	../Core/Src/usart.c	/^DMA_HandleTypeDef hdma_usart1_rx;$/;"	v
hdma_usart1_tx	../Core/Src/stm32f4xx_it.c	/^extern DMA_HandleTypeDef hdma_usart1_tx;$/;"	x
hdma_usart1_tx	../Core/Src/usart.c	/^DMA_HandleTypeDef hdma_usart1_tx;$/;"	v
hdma_usart2_rx	../Core/Inc/usart.h	/^extern DMA_HandleTypeDef hdma_usart2_rx;$/;"	x
hdma_usart2_rx	../Core/Src/stm32f4xx_it.c	/^extern DMA_HandleTypeDef hdma_usart2_rx;$/;"	x
hdma_usart2_rx	../Core/Src/usart.c	/^DMA_HandleTypeDef hdma_usart2_rx;$/;"	v
hdma_usart2_tx	../Core/Inc/usart.h	/^extern DMA_HandleTypeDef hdma_usart2_tx;$/;"	x
hdma_usart2_tx	../Core/Src/stm32f4xx_it.c	/^extern DMA_HandleTypeDef hdma_usart2_tx;$/;"	x
hdma_usart2_tx	../Core/Src/usart.c	/^DMA_HandleTypeDef hdma_usart2_tx;$/;"	v
head	dac_handler/ring16/ring16.h	/^  uint16_t head;$/;"	m	struct:ring16
heapBITS_PER_BYTE	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^#define heapBITS_PER_BYTE	/;"	d	file:
heapMINIMUM_BLOCK_SIZE	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^#define heapMINIMUM_BLOCK_SIZE	/;"	d	file:
heap_end	../Core/Src/sysmem.c	/^	static char *heap_end;$/;"	l	file:
hi2c1	../Core/Inc/i2c.h	/^extern I2C_HandleTypeDef hi2c1;$/;"	x
hi2c1	../Core/Src/i2c.c	/^I2C_HandleTypeDef hi2c1;$/;"	v
hi2c1	../Core/Src/stm32f4xx_it.c	/^extern I2C_HandleTypeDef hi2c1;$/;"	x
hi2s3	../Core/Inc/i2s.h	/^extern I2S_HandleTypeDef hi2s3;$/;"	x
hi2s3	../Core/Src/i2s.c	/^I2S_HandleTypeDef hi2s3;$/;"	v
hiwdg	../Core/Inc/iwdg.h	/^extern IWDG_HandleTypeDef hiwdg;$/;"	x
hiwdg	../Core/Src/iwdg.c	/^IWDG_HandleTypeDef hiwdg;$/;"	v
hold_period	../sub/powerui/powerui_led.c	/^	uint32_t hold_period = 0;$/;"	l
hrtc	../Core/Inc/rtc.h	/^extern RTC_HandleTypeDef hrtc;$/;"	x
hrtc	../Core/Src/rtc.c	/^RTC_HandleTypeDef hrtc;$/;"	v
hrtc	../Core/Src/stm32f4xx_it.c	/^extern RTC_HandleTypeDef hrtc;$/;"	x
hspi1	../Core/Inc/spi.h	/^extern SPI_HandleTypeDef hspi1;$/;"	x
hspi1	../Core/Src/spi.c	/^SPI_HandleTypeDef hspi1;$/;"	v
hspi1	../Core/Src/stm32f4xx_it.c	/^extern SPI_HandleTypeDef hspi1;$/;"	x
hspi2	../Core/Inc/spi.h	/^extern SPI_HandleTypeDef hspi2;$/;"	x
hspi2	../Core/Src/spi.c	/^SPI_HandleTypeDef hspi2;$/;"	v
hspi2	../Core/Src/stm32f4xx_it.c	/^extern SPI_HandleTypeDef hspi2;$/;"	x
htim1	../Core/Src/stm32f4xx_hal_timebase_tim.c	/^TIM_HandleTypeDef        htim1; $/;"	v
htim1	../Core/Src/stm32f4xx_it.c	/^extern TIM_HandleTypeDef htim1;$/;"	x
huart1	../Core/Inc/usart.h	/^extern UART_HandleTypeDef huart1;$/;"	x
huart1	../Core/Src/stm32f4xx_it.c	/^extern UART_HandleTypeDef huart1;$/;"	x
huart1	../Core/Src/usart.c	/^UART_HandleTypeDef huart1;$/;"	v
huart2	../Core/Inc/usart.h	/^extern UART_HandleTypeDef huart2;$/;"	x
huart2	../Core/Src/stm32f4xx_it.c	/^extern UART_HandleTypeDef huart2;$/;"	x
huart2	../Core/Src/usart.c	/^UART_HandleTypeDef huart2;$/;"	v
i	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t i, count;$/;"	l
i	../peripherals/memory/sha-256.c	/^		int i;$/;"	l
i	../peripherals/memory/sha-256.c	/^	unsigned i, j;$/;"	l
i	libfoxenflac/foxen/flac.c	/^	const uint8_t i = ((inst->crc16 >> 8U) ^ byte) & 0xFF;$/;"	l
i2c	../peripherals/peripherals.h	/^    I2cObject i2c;$/;"	m	struct:__anon11
i2cCheckBusy	../peripherals/i2c/i2c_peri.c	/^bool i2cCheckBusy(I2cObject *i2c)$/;"	f
i2cCheckBusy	../peripherals/i2c/i2c_peri.h	/^bool i2cCheckBusy(I2cObject *i2c);$/;"	p
i2cInit	../peripherals/i2c/i2c_peri.c	/^void i2cInit(I2cObject *i2c, I2C_HandleTypeDef *handle)$/;"	f
i2cInit	../peripherals/i2c/i2c_peri.h	/^void i2cInit(I2cObject *i2c, I2C_HandleTypeDef *handle);$/;"	p
i2cInitTransaction	../peripherals/i2c/i2c_peri.c	/^void i2cInitTransaction(I2cTransaction *new_trans, uint8_t address, size_t mem_addr_size,$/;"	f
i2cInitTransaction	../peripherals/i2c/i2c_peri.h	/^void i2cInitTransaction(I2cTransaction *new_trans, uint8_t address, size_t mem_addr_size,$/;"	p
i2cNewRX	../peripherals/i2c/i2c_peri.c	/^static void i2cNewRX(I2cObject *i2c, I2cTransaction *new_trans,$/;"	p	file:
i2cNewRX	../peripherals/i2c/i2c_peri.c	/^void i2cNewRX(I2cObject *i2c, I2cTransaction *new_trans,$/;"	f
i2cNewRXWait	../peripherals/i2c/i2c_peri.c	/^bool i2cNewRXWait(I2cObject *i2c, I2cTransaction *new_trans,$/;"	f
i2cNewRXWait	../peripherals/i2c/i2c_peri.h	/^bool i2cNewRXWait(I2cObject *i2c, I2cTransaction *new_trans,$/;"	p
i2cNewTX	../peripherals/i2c/i2c_peri.c	/^static void i2cNewTX(I2cObject *i2c, I2cTransaction *new_trans,$/;"	p	file:
i2cNewTX	../peripherals/i2c/i2c_peri.c	/^void i2cNewTX(I2cObject *i2c, I2cTransaction *new_trans,$/;"	f
i2cNewTXWait	../peripherals/i2c/i2c_peri.c	/^bool i2cNewTXWait(I2cObject *i2c, I2cTransaction *new_trans,$/;"	f
i2cNewTXWait	../peripherals/i2c/i2c_peri.h	/^bool i2cNewTXWait(I2cObject *i2c, I2cTransaction *new_trans,$/;"	p
i2cReleaseLock	../peripherals/i2c/i2c_peri.c	/^static void i2cReleaseLock(void);$/;"	p	file:
i2cReleaseLock	../peripherals/i2c/i2c_peri.c	/^void i2cReleaseLock(void)$/;"	f
i2cTransfer	../peripherals/i2c/i2c_peri.c	/^static void i2cTransfer(I2cObject *i2c, I2cTransaction *trans);$/;"	p	file:
i2cTransfer	../peripherals/i2c/i2c_peri.c	/^void i2cTransfer(I2cObject *i2c, I2cTransaction *trans)$/;"	f
i2cTransferResult	../peripherals/i2c/i2c_peri.c	/^bool i2cTransferResult(I2cObject *i2c)$/;"	f
i2cTransferResult	../peripherals/i2c/i2c_peri.c	/^static bool i2cTransferResult(I2cObject *i2c);$/;"	p	file:
i2cWaitComplete	../peripherals/i2c/i2c_peri.c	/^bool i2cWaitComplete(I2cObject *i2c)$/;"	f
i2cWaitComplete	../peripherals/i2c/i2c_peri.h	/^bool i2cWaitComplete(I2cObject *i2c);$/;"	p
i2c_MspDeInit	../peripherals/i2c/i2c_peri.c	/^void i2c_MspDeInit(I2cObject *i2c)$/;"	f
i2c_MspDeInit	../peripherals/i2c/i2c_peri.h	/^void i2c_MspDeInit(I2cObject *i2c);$/;"	p
i2c_MspInit	../peripherals/i2c/i2c_peri.c	/^void i2c_MspInit(I2cObject *i2c)$/;"	f
i2c_MspInit	../peripherals/i2c/i2c_peri.h	/^void i2c_MspInit(I2cObject *i2c);$/;"	p
i2c_fail	../sub/powerui/powerui_types.h	/^    bool i2c_fail;$/;"	m	struct:__anon11
i2c_pin	../sub/powerui/powerui_types.h	/^	uint16_t i2c_pin;$/;"	m	struct:__anon11
i2c_port	../sub/powerui/powerui_types.h	/^	GPIO_TypeDef *i2c_port;$/;"	m	struct:__anon11
i2c_sem_done	../peripherals/i2c/i2c_peri.c	/^SemaphoreHandle_t i2c_sem_done;$/;"	v
i2c_sem_lock	../peripherals/i2c/i2c_peri.c	/^SemaphoreHandle_t i2c_sem_lock;$/;"	v
i2s	../peripherals/i2s/i2s_peri.c	/^	I2sObject *i2s = NULL;$/;"	l
i2s	../peripherals/peripherals.h	/^    I2sObject i2s;$/;"	m	struct:__anon11
i2s	wrappers/wrp_i2s.c	/^I2sObject *i2s;$/;"	v
i2sCheckBusy	../peripherals/i2s/i2s_peri.c	/^bool i2sCheckBusy(I2sObject *i2s)$/;"	f
i2sCheckBusy	../peripherals/i2s/i2s_peri.h	/^bool i2sCheckBusy(I2sObject *i2s);$/;"	p
i2sInit	../peripherals/i2s/i2s_peri.c	/^void i2sInit(I2sObject *i2s, I2S_HandleTypeDef *handle, DMA_HandleTypeDef *dma_handle, uint8_t periph_index)$/;"	f
i2sInit	../peripherals/i2s/i2s_peri.h	/^void i2sInit(I2sObject *i2s, I2S_HandleTypeDef *handl, DMA_HandleTypeDef *dma_handle , uint8_t periph_index);$/;"	p
i2s_MspDeInit	../peripherals/i2s/i2s_peri.c	/^void i2s_MspDeInit(I2sObject *i2s)$/;"	f
i2s_MspDeInit	../peripherals/i2s/i2s_peri.h	/^void i2s_MspDeInit(I2sObject *i2s);$/;"	p
i2s_MspInit	../peripherals/i2s/i2s_peri.c	/^void i2s_MspInit(I2sObject *i2s)$/;"	f
i2s_MspInit	../peripherals/i2s/i2s_peri.h	/^void i2s_MspInit(I2sObject *i2s);$/;"	p
i2s_buff	../peripherals/i2s/i2s_peri.c	/^uint16_t i2s_buff[I2S_BUFFSZ];$/;"	v
i2s_instance	../peripherals/i2s/i2s_peri.c	/^I2sObject *i2s_instance[I2S_MAX_PERIPH];$/;"	v
i2s_matchObject	../peripherals/i2s/i2s_peri.c	/^I2sObject *i2s_matchObject(I2S_HandleTypeDef *hi2s)$/;"	f
i2s_startEmptyStream	../peripherals/i2s/i2s_peri.c	/^void i2s_startEmptyStream(I2sObject *i2s)$/;"	f
i2s_startEmptyStream	../peripherals/i2s/i2s_peri.h	/^void i2s_startEmptyStream(I2sObject *i2s);$/;"	p
i2s_stopStream	../peripherals/i2s/i2s_peri.c	/^void i2s_stopStream(I2sObject *i2s)$/;"	f
i2s_stopStream	../peripherals/i2s/i2s_peri.h	/^void i2s_stopStream(I2sObject *i2s);$/;"	p
iDummy22	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		int				iDummy22;$/;"	m	struct:xSTATIC_TCB
iTaskErrno	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		int iTaskErrno;$/;"	m	struct:tskTaskControlBlock	file:
id	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  osThreadId_t id;$/;"	l
id	../peripherals/memory/mem_peri.c	/^	uint32_t id = 0xFFFFFF;$/;"	l
id	../peripherals/memory/mem_peri.c	/^	uint32_t id = 0xFFFFFFFF;$/;"	l
idle	decoder/decoder.c	/^static int32_t idle(void) { return 0; }$/;"	f	file:
iend_reg	../sub/powerui/powerui_led.c	/^	uint8_t iend_reg;$/;"	l
ilen	../peripherals/memory/mem_peri.c	/^	size_t ilen = 0;$/;"	l
ilim	../sub/powerui/powerui_types.h	/^    bool ilim;$/;"	m	struct:__anon9
in	libfoxenflac/test/test_flac.c	/^	uint8_t const *in = in_;$/;"	l
in	libfoxenflac/test/test_flac_integration.c	/^			uint32_t in = fx_bitstream_read_msb(&flac_bitstream, bps);$/;"	l
in_buf_len	libfoxenflac/test/test_flac_integration.c	/^		uint32_t in_buf_len = buf_wr_cur;$/;"	l
in_len	libfoxenflac/test/test_flac.c	/^		uint32_t in_len = (in_rem > 0U) ? 1U : 0U;$/;"	l
in_rem	libfoxenflac/test/test_flac.c	/^		uint32_t in_rem = in_len_ - (in - in_);$/;"	l
index	../Core/Src/system_stm32f4xx.c	/^  register __IO uint32_t index;$/;"	l
index	../sub/audio/audio_mem.c	/^    uint16_t index = 0;$/;"	l
init_buf_state	../peripherals/memory/sha-256.c	/^static void init_buf_state(struct buffer_state * state,$/;"	f	file:
init_buf_state_flash	../peripherals/memory/sha-256.c	/^static void init_buf_state_flash(struct buffer_state * state, const void * input, size_t len)$/;"	f	file:
initialise_monitor_handles	../Core/Src/syscalls.c	/^void initialise_monitor_handles()$/;"	f
initialized	../sub/powerui/powerui_types.h	/^    bool initialized;$/;"	m	struct:__anon11
input_adj	../sub/audio/audio_types.h	/^    int16_t *input_adj;$/;"	m	struct:__anon20
input_adj	unit_test/mocks/include/audio_types.h	/^    int16_t *input_adj;$/;"	m	struct:__anon8
input_config	../sub/audio/audio_types.h	/^    AudioInputConfig *input_config;$/;"	m	struct:__anon20
input_config	unit_test/mocks/include/audio_types.h	/^    AudioInputConfig *input_config;$/;"	m	struct:__anon8
inst	libfoxenflac/foxen/flac.c	/^		fx_flac_t *inst = (fx_flac_t *)fx_mem_align(&mem, sizeof(fx_flac_t));$/;"	l
inst	libfoxenflac/foxen/flac.c	/^	fx_flac_t *inst = (fx_flac_t *)FX_ASSUME_ALIGNED(data);$/;"	l
inst	libfoxenflac/test/test_flac.c	/^	fx_flac_t *inst = FX_FLAC_ALLOC_DEFAULT();$/;"	l
inst_unaligned	libfoxenflac/foxen/flac.c	/^	fx_flac_t *inst_unaligned = (fx_flac_t *)mem;$/;"	l
instances	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  uint32_t                 instances;   \/\/\/< maximum number of instances of that thread function$/;"	m	struct:os_thread_def
int_pin	../sub/powerui/powerui_types.h	/^	uint16_t int_pin;$/;"	m	struct:__anon11
internal_eoc_callback	api/audio_clip.c	/^static void internal_eoc_callback(void) {$/;"	f	file:
irqmask	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t irqmask = IS_IRQ_MASKED();$/;"	l
is	libfoxenflac/test/test_flac.c	/^			const int32_t is = out[i] >> (32 - bps);$/;"	l
is	libfoxenflac/test/test_flac_integration.c	/^			int32_t is = (out_buf[i]) >> (32 - bps);$/;"	l
is_empty	dac_handler/ring16/ring16.h	/^  bool is_empty : 1;$/;"	m	struct:ring16
is_full	dac_handler/ring16/ring16.h	/^  bool is_full : 1;$/;"	m	struct:ring16
is_last	libfoxenflac/foxen/flac.c	/^	bool is_last;$/;"	m	struct:__anon9	file:
is_stereo	clip_handler/clip_handler.c	/^  uint8_t is_stereo;$/;"	m	struct:clip_node	file:
is_stereo	dac_handler/dac_handler.h	/^  bool is_stereo;$/;"	m	struct:dac
is_streaming	dac_handler/dac_handler.h	/^  bool is_streaming;$/;"	m	struct:dac
isrm	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t isrm;$/;"	l
item_sz	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  uint32_t                   item_sz;   \/\/\/< size of an item$/;"	m	struct:os_mailQ_def
item_sz	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  uint32_t                   item_sz;   \/\/\/< size of an item$/;"	m	struct:os_pool_def
items	../sub/powerui/powerui_types.h	/^    MBCmdItems items;$/;"	m	struct:__anon10
j	../peripherals/memory/sha-256.c	/^	unsigned i, j;$/;"	l
k	../peripherals/memory/sha-256.c	/^static const uint32_t k[] = {$/;"	v	file:
kernel	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                    kernel;   \/\/\/< Kernel version (major.minor.rev: mmnnnrrrr dec).$/;"	m	struct:__anon11
last_state	libfoxenflac/test/test_flac.c	/^	fx_flac_state_t last_state = fx_flac_get_state(inst);$/;"	l
ldo1v2en_pin	../sub/powerui/powerui_types.h	/^	uint16_t ldo1v2en_pin;$/;"	m	struct:__anon11
led_active_animation	../sub/powerui/powerui_types.h	/^    LEDAnimation led_active_animation;$/;"	m	struct:__anon11
led_i2c_trans	../sub/powerui/powerui_types.h	/^    I2cTransaction led_i2c_trans;$/;"	m	struct:__anon11
led_timer	../sub/powerui/powerui_types.h	/^    TimerHandle_t led_timer;$/;"	m	struct:__anon11
left	../peripherals/memory/sha-256.c	/^		const size_t left = space_in_chunk - TOTAL_LEN_LEN;$/;"	l
leftover_count	../sub/audio/audio_mem.c	/^    uint32_t leftover_count;$/;"	l
len	../peripherals/memory/sha-256.c	/^		size_t len = state->total_len;$/;"	l
len	../peripherals/memory/sha-256.c	/^	size_t len;$/;"	m	struct:buffer_state	file:
len	libfoxenflac/test/test_flac.c	/^		uint32_t len = 1U;$/;"	l
len	libfoxenflac/test/test_flac.c	/^	uint32_t len = len_;$/;"	l
len	libfoxenflac/test/test_flac.c	/^	uint32_t len = sizeof(FLAC_HEADER_ERR_METADATA_TOO_LONG);$/;"	l
length	../peripherals/memory/mem_peri.c	/^	size_t length = size;$/;"	l
length	../sub/audio/audio_mem.h	/^    uint32_t length;$/;"	m	struct:__anon13
length	libfoxenflac/foxen/flac.c	/^	uint32_t length;$/;"	m	struct:__anon9	file:
length	unit_test/mocks/include/audio_mem.h	/^    uint32_t length;$/;"	m	struct:__anon2
listCURRENT_LIST_LENGTH	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^#define listCURRENT_LIST_LENGTH(/;"	d
listFIRST_LIST_INTEGRITY_CHECK_VALUE	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	#define listFIRST_LIST_INTEGRITY_CHECK_VALUE	/;"	d
listFIRST_LIST_INTEGRITY_CHECK_VALUE	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	#define listFIRST_LIST_INTEGRITY_CHECK_VALUE$/;"	d
listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	#define listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE	/;"	d
listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	#define listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE$/;"	d
listGET_END_MARKER	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^#define listGET_END_MARKER(/;"	d
listGET_HEAD_ENTRY	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^#define listGET_HEAD_ENTRY(/;"	d
listGET_ITEM_VALUE_OF_HEAD_ENTRY	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^#define listGET_ITEM_VALUE_OF_HEAD_ENTRY(/;"	d
listGET_LIST_ITEM_OWNER	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^#define listGET_LIST_ITEM_OWNER(/;"	d
listGET_LIST_ITEM_VALUE	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^#define listGET_LIST_ITEM_VALUE(/;"	d
listGET_NEXT	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^#define listGET_NEXT(/;"	d
listGET_OWNER_OF_HEAD_ENTRY	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^#define listGET_OWNER_OF_HEAD_ENTRY(/;"	d
listGET_OWNER_OF_NEXT_ENTRY	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^#define listGET_OWNER_OF_NEXT_ENTRY(/;"	d
listIS_CONTAINED_WITHIN	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^#define listIS_CONTAINED_WITHIN(/;"	d
listLIST_IS_EMPTY	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^#define listLIST_IS_EMPTY(/;"	d
listLIST_IS_INITIALISED	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^#define listLIST_IS_INITIALISED(/;"	d
listLIST_ITEM_CONTAINER	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^#define listLIST_ITEM_CONTAINER(/;"	d
listSECOND_LIST_INTEGRITY_CHECK_VALUE	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	#define listSECOND_LIST_INTEGRITY_CHECK_VALUE	/;"	d
listSECOND_LIST_INTEGRITY_CHECK_VALUE	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	#define listSECOND_LIST_INTEGRITY_CHECK_VALUE$/;"	d
listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	#define listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE	/;"	d
listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	#define listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE$/;"	d
listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	#define listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE(/;"	d
listSET_LIST_INTEGRITY_CHECK_1_VALUE	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	#define listSET_LIST_INTEGRITY_CHECK_1_VALUE(/;"	d
listSET_LIST_INTEGRITY_CHECK_2_VALUE	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	#define listSET_LIST_INTEGRITY_CHECK_2_VALUE(/;"	d
listSET_LIST_ITEM_OWNER	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^#define listSET_LIST_ITEM_OWNER(/;"	d
listSET_LIST_ITEM_VALUE	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^#define listSET_LIST_ITEM_VALUE(/;"	d
listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	#define listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE(/;"	d
listTEST_LIST_INTEGRITY	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	#define listTEST_LIST_INTEGRITY(/;"	d
listTEST_LIST_ITEM_INTEGRITY	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	#define listTEST_LIST_ITEM_INTEGRITY(/;"	d
lock	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  int32_t lock;$/;"	l
long_enable	../sub/audio/audio_mem.c	/^    bool long_enable = false;$/;"	l
lowpower_mode	../statemachine/statemachine_types.h	/^    lpMode lowpower_mode;$/;"	m	struct:__anon5
lpMode	../statemachine/statemachine_types.h	/^} lpMode;$/;"	t	typeref:enum:__anon3
lpc_coeffs	libfoxenflac/foxen/flac.c	/^	int32_t *lpc_coeffs;$/;"	m	struct:__anon12	file:
lpc_prec	libfoxenflac/foxen/flac.c	/^	uint8_t lpc_prec;$/;"	m	struct:__anon12	file:
lpc_shift	libfoxenflac/foxen/flac.c	/^	int8_t lpc_shift;$/;"	m	struct:__anon12	file:
lscntrl_pin	../sub/powerui/powerui_types.h	/^	uint16_t lscntrl_pin;$/;"	m	struct:__anon11
lsen_pin	../sub/powerui/powerui_types.h	/^	uint16_t lsen_pin;$/;"	m	struct:__anon11
mail	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  void                         *mail;   \/\/\/< pointer to mail$/;"	m	struct:os_mailQ_def
mail	api/audio_clip.h	/^	QueueHandle_t mail;$/;"	m	struct:__anon13
mail_cmd	../sub/powerui/powerui_types.h	/^    QueueHandle_t mail_cmd;$/;"	m	struct:__anon11
mail_id	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^    osMailQId                mail_id;   \/\/\/< mail id obtained by \\ref osMailCreate$/;"	m	union:__anon8::__anon10
main	../Core/Src/main.c	/^int main(void)$/;"	f
main	libfoxenflac/build/meson-private/sanitycheckc.c	/^int main(void) { int class=0; return class; }$/;"	f
main	libfoxenflac/examples/flac_decoder.c	/^int main(int argc, char *argv[])$/;"	f
main	libfoxenflac/test/test_flac.c	/^int main()$/;"	f
main	libfoxenflac/test/test_flac_integration.c	/^int main(int argc, const char *argv[])$/;"	f
main	unit_test/unit_test.c	/^int main(int argc, char *argv[])$/;"	f
mainState	../statemachine/statemachine_types.h	/^} mainState;$/;"	t	typeref:struct:__anon5
main_state	../statemachine/statemachine.h	/^mainState main_state;$/;"	v
maj	../peripherals/memory/sha-256.c	/^				const uint32_t maj = (ah[0] & ah[1]) ^ (ah[0] & ah[2]) ^ (ah[1] & ah[2]);$/;"	l
max_block_size	libfoxenflac/foxen/flac.c	/^	uint16_t max_block_size;$/;"	m	struct:__anon10	file:
max_block_size	libfoxenflac/foxen/flac.c	/^	uint16_t max_block_size;$/;"	m	struct:fx_flac	file:
max_channels	libfoxenflac/foxen/flac.c	/^	uint8_t max_channels;$/;"	m	struct:fx_flac	file:
max_frame_size	libfoxenflac/foxen/flac.c	/^	uint32_t max_frame_size;$/;"	m	struct:__anon10	file:
md5_sum	libfoxenflac/foxen/flac.c	/^	uint8_t md5_sum[16];$/;"	m	struct:__anon10	file:
mem	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  int32_t  mem;$/;"	l
mem	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  int32_t mem;$/;"	l
mem	../peripherals/memory/sha-256.c	/^	MemObject *mem;$/;"	m	struct:buffer_state	file:
mem	../peripherals/peripherals.h	/^    MemObject mem;$/;"	m	struct:__anon11
memAddElement	../peripherals/memory/mem_peri.c	/^MemOpStatus memAddElement(MemObject *mem, MemChunk *chunk, size_t elem_size, MemElement *elem_return, uint16_t *elemindex_return)$/;"	f
memAddElement	../peripherals/memory/mem_peri.h	/^MemOpStatus memAddElement(MemObject *mem, MemChunk *chunk, size_t elem_size,$/;"	p
memAddElement	unit_test/mocks/include/mem_peri.h	/^MemOpStatus memAddElement(MemObject *mem, MemChunk *chunk, size_t elem_size,$/;"	p
memCheckBusy	../peripherals/memory/mem_peri.c	/^bool memCheckBusy(MemObject *mem)$/;"	f
memCheckBusy	../peripherals/memory/mem_peri.h	/^bool memCheckBusy(MemObject *mem);$/;"	p
memCheckBusy	unit_test/mocks/include/mem_peri.h	/^bool memCheckBusy(MemObject *mem);$/;"	p
memCheckChunk	../peripherals/memory/mem_peri.c	/^MemOpStatus memCheckChunk(MemObject *mem, MemChunk *chunk)$/;"	f
memCheckChunk	../peripherals/memory/mem_peri.h	/^MemOpStatus memCheckChunk(MemObject *mem, MemChunk *chunk);$/;"	p
memCheckChunk	unit_test/mocks/include/mem_peri.h	/^MemOpStatus memCheckChunk(MemObject *mem, MemChunk *chunk);$/;"	p
memCheckHashOAD	../peripherals/memory/mem_peri.c	/^uint8_t memCheckHashOAD(MemObject *mem, MemChunk *chunk, uint8_t *refHash)$/;"	f
memCheckHashOAD	../peripherals/memory/mem_peri.h	/^uint8_t memCheckHashOAD(MemObject *mem, MemChunk *chunk, uint8_t *refhash);$/;"	p
memCheckHashOAD	unit_test/mocks/include/mem_peri.h	/^uint8_t memCheckHashOAD(MemObject *mem, MemChunk *chunk, uint8_t *refhash);$/;"	p
memExtractElementOffset	../peripherals/memory/mem_peri.c	/^size_t memExtractElementOffset(uint32_t temp)$/;"	f
memExtractElementOffset	../peripherals/memory/mem_peri.c	/^static size_t memExtractElementOffset(uint32_t temp);$/;"	p	file:
memInit	../peripherals/memory/mem_peri.c	/^bool memInit(MemObject *mem, SPI_HandleTypeDef *handle, uint8_t spi_index,$/;"	f
memInit	../peripherals/memory/mem_peri.h	/^bool memInit(MemObject *mem, SPI_HandleTypeDef *handle, uint8_t spi_index,$/;"	p
memInit	unit_test/mocks/include/mem_peri.h	/^bool memInit(MemObject *mem, SPI_HandleTypeDef *handle, uint8_t spi_index,$/;"	p
memInitChunk	../peripherals/memory/mem_peri.c	/^MemOpStatus memInitChunk(MemObject *mem, MemChunk *chunk)$/;"	f
memInitChunk	../peripherals/memory/mem_peri.h	/^MemOpStatus memInitChunk(MemObject *mem, MemChunk *chunk);$/;"	p
memInitChunk	unit_test/mocks/include/mem_peri.h	/^MemOpStatus memInitChunk(MemObject *mem, MemChunk *chunk);$/;"	p
memReadElementParam	../peripherals/memory/mem_peri.c	/^MemOpStatus memReadElementParam(MemObject *mem, MemChunk *chunk, MemElement *elem,$/;"	f
memReadElementParam	../peripherals/memory/mem_peri.h	/^MemOpStatus memReadElementParam(MemObject *mem, MemChunk *chunk, MemElement *elem,$/;"	p
memReadElementParam	unit_test/mocks/include/mem_peri.h	/^MemOpStatus memReadElementParam(MemObject *mem, MemChunk *chunk, MemElement *elem,$/;"	p
memReadFromElement	../peripherals/memory/mem_peri.c	/^MemOpStatus memReadFromElement(MemObject *mem, MemChunk *chunk, MemElement *elem, size_t offset,$/;"	f
memReadFromElement	../peripherals/memory/mem_peri.h	/^MemOpStatus memReadFromElement(MemObject *mem, MemChunk *chunk, MemElement *elem, size_t offset,$/;"	p
memReadFromElement	unit_test/mocks/include/mem_peri.h	/^MemOpStatus memReadFromElement(MemObject *mem, MemChunk *chunk, MemElement *elem, size_t offset,$/;"	p
memReturnChunkEnd	../peripherals/memory/mem_peri.c	/^size_t memReturnChunkEnd(MemObject *mem, MemChunk *chunk)$/;"	f
memReturnChunkEnd	../peripherals/memory/mem_peri.c	/^static size_t memReturnChunkEnd(MemObject *mem, MemChunk *chunk);$/;"	p	file:
memStartChunk	../peripherals/memory/mem_peri.c	/^MemOpStatus memStartChunk(MemObject *mem, MemChunk *chunk)$/;"	f
memStartChunk	../peripherals/memory/mem_peri.h	/^MemOpStatus memStartChunk(MemObject *mem, MemChunk *chunk);$/;"	p
memWriteToElement	../peripherals/memory/mem_peri.c	/^MemOpStatus memWriteToElement(MemObject *mem, MemChunk *chunk, MemElement *elem, size_t offset,$/;"	f
memWriteToElement	../peripherals/memory/mem_peri.h	/^MemOpStatus memWriteToElement(MemObject *mem, MemChunk *chunk, MemElement *elem, size_t offset,$/;"	p
memWriteToElement	unit_test/mocks/include/mem_peri.h	/^MemOpStatus memWriteToElement(MemObject *mem, MemChunk *chunk, MemElement *elem, size_t offset,$/;"	p
mem_addr	../peripherals/i2c/i2c_peri.h	/^	uint32_t mem_addr;$/;"	m	struct:__anon5
mem_addr_size	../peripherals/i2c/i2c_peri.h	/^	size_t mem_addr_size;$/;"	m	struct:__anon5
mem_aud	../peripherals/peripherals.h	/^    MemObject mem_aud;$/;"	m	struct:__anon11
mem_elem	wrappers/wrp_mem.c	/^MemElement mem_elem;$/;"	v
mem_obj	wrappers/wrp_mem.c	/^MemObject *mem_obj;$/;"	v
mem_read	clip_handler/clip_handler.c	/^  clip_h.mem_read(chk, clip_h.offset, nbytes);$/;"	p	file:
mem_read	clip_handler/clip_handler.c	/^  int32_t (*mem_read)(uint8_t *buf, uint32_t offset, uint32_t size);$/;"	m	struct:clip_handler	file:
memblk_elem	../sub/audio/audio.c	/^    uint16_t memblk_elem = 0;$/;"	l
memcpy	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQueue->uxItemSize );$/;"	p	file:
memcpy	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQueue->uxItemSize );$/;"	p	file:
memcpy	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); \/*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. *\/$/;"	p	file:
memcpy	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); \/*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. *\/$/;"	p	file:
memcpy	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); \/*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. *\/$/;"	p	file:
memcpy	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^			( void ) memcpy( ( void * ) &( pucData[ xFirstLength ] ), ( void * ) ( pxStreamBuffer->pucBuffer ), xCount - xFirstLength ); \/*lint !e9087 memcpy() requires void *. *\/$/;"	p	file:
memcpy	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^		( void ) memcpy( ( void * ) pucData, ( const void * ) &( pxStreamBuffer->pucBuffer[ xNextTail ] ), xFirstLength ); \/*lint !e9087 memcpy() requires void *. *\/$/;"	p	file:
memcpy	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^		( void ) memcpy( ( void * ) pxStreamBuffer->pucBuffer, ( const void * ) &( pucData[ xFirstLength ] ), xCount - xFirstLength ); \/*lint !e9087 memcpy() requires void *. *\/$/;"	p	file:
memcpy	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	( void ) memcpy( ( void* ) ( &( pxStreamBuffer->pucBuffer[ xNextHead ] ) ), ( const void * ) pucData, xFirstLength ); \/*lint !e9087 memcpy() requires void *. *\/$/;"	p	file:
memset	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	( void ) memset( ( void * ) pxStreamBuffer, 0x00, sizeof( StreamBuffer_t ) ); \/*lint !e9087 memset() requires void *. *\/$/;"	p	file:
message_id	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^    osMessageQId          message_id;   \/\/\/< message id obtained by \\ref osMessageCreate$/;"	m	union:__anon8::__anon10
metadata	libfoxenflac/foxen/flac.c	/^	fx_flac_metadata_t *metadata;$/;"	m	struct:fx_flac	file:
mid	libfoxenflac/foxen/flac.c	/^		int32_t mid = blk1[i];$/;"	l
min_block_size	libfoxenflac/foxen/flac.c	/^	uint16_t min_block_size;$/;"	m	struct:__anon10	file:
min_frame_size	libfoxenflac/foxen/flac.c	/^	uint32_t min_frame_size;$/;"	m	struct:__anon10	file:
mode	../peripherals/spi/spi_peri.h	/^    SpiTransferMode mode;$/;"	m	struct:__anon8
mode	../sub/audio/audio_mem.c	/^    SpiTransferMode mode = SPI_WRITE;$/;"	l
model	../statemachine/statemachine_types.h	/^	char model[2];$/;"	m	struct:__anon1
mp_attr	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osMemoryPoolAttr_t         mp_attr;   \/\/\/< memory pool attributes$/;"	m	struct:os_mailQ_def
mp_mem	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  void                      *mp_mem;    \/\/\/< memory for data storage$/;"	m	struct:__anon22
mp_size	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                   mp_size;   \/\/\/< size of provided memory for data storage$/;"	m	struct:__anon22
mq	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  StaticQueue_t *mq = (StaticQueue_t *)mq_id;$/;"	l
mq_attr	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osMessageQueueAttr_t       mq_attr;   \/\/\/< message queue attributes$/;"	m	struct:os_mailQ_def
mq_mem	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  void                      *mq_mem;    \/\/\/< memory for data storage$/;"	m	struct:__anon23
mq_size	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                   mq_size;   \/\/\/< size of provided memory for data storage$/;"	m	struct:__anon23
mtCOVERAGE_TEST_DELAY	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define mtCOVERAGE_TEST_DELAY(/;"	d
mtCOVERAGE_TEST_MARKER	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define mtCOVERAGE_TEST_MARKER(/;"	d
mute	../sub/audio/audio_types.h	/^    bool mute;$/;"	m	struct:__anon16
mute	../sub/audio/audio_types.h	/^    bool mute;$/;"	m	struct:__anon17
mute	unit_test/mocks/include/audio_types.h	/^    bool mute;$/;"	m	struct:__anon5
mute	unit_test/mocks/include/audio_types.h	/^    bool mute;$/;"	m	struct:__anon6
n	libfoxenflac/foxen/flac.c	/^			const uint32_t n = (sfh->type == SFT_VERBATIM) ? blk_n : sfh->order;$/;"	l
n	libfoxenflac/test/test_flac_integration.c	/^				size_t n = fread(flac_buf, 1, sizeof(flac_buf), fflac);$/;"	l
n_bits	libfoxenflac/foxen/flac.c	/^			uint8_t n_bits = (sfh->residual_method == RES_RICE) ? 4U : 5U;$/;"	l
n_bytes_rem	libfoxenflac/foxen/flac.c	/^	uint32_t n_bytes_rem;$/;"	m	struct:fx_flac	file:
n_channels	libfoxenflac/foxen/flac.c	/^	uint8_t n_channels;$/;"	m	struct:__anon10	file:
n_ones	libfoxenflac/foxen/flac.c	/^	uint8_t n_ones = 0U;$/;"	l
n_read	libfoxenflac/examples/flac_decoder.c	/^			size_t n_read = fread(buf + buf_wr_cur, 1, to_read, f);$/;"	l
n_read	libfoxenflac/foxen/flac.c	/^			const uint8_t n_read =$/;"	l
n_read	libfoxenflac/test/test_flac_integration.c	/^		size_t to_read = sizeof(buf) - buf_wr_cur, n_read = 0;$/;"	l
n_read	unit_test/unit_test.c	/^			size_t n_read = fread(buf + buf_wr_cur, 1, to_read, f);$/;"	l
n_samples	libfoxenflac/foxen/flac.c	/^	uint64_t n_samples;$/;"	m	struct:__anon10	file:
n_smpls_rem	libfoxenflac/foxen/flac.c	/^	uint32_t n_smpls_rem =$/;"	l
name	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  const char *name;$/;"	l
name	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  const char                   *name;   \/\/\/< name of the event flags$/;"	m	struct:__anon19
name	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  const char                   *name;   \/\/\/< name of the memory pool$/;"	m	struct:__anon22
name	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  const char                   *name;   \/\/\/< name of the message queue$/;"	m	struct:__anon23
name	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  const char                   *name;   \/\/\/< name of the mutex$/;"	m	struct:__anon20
name	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  const char                   *name;   \/\/\/< name of the semaphore$/;"	m	struct:__anon21
name	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  const char                   *name;   \/\/\/< name of the thread$/;"	m	struct:__anon17
name	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  const char                   *name;   \/\/\/< name of the timer$/;"	m	struct:__anon18
name	clip_handler/clip_handler.c	/^  uint8_t name[32];$/;"	m	struct:clip_node	file:
nbytes	clip_handler/clip_handler.c	/^  int32_t nbytes = 0;$/;"	l
nbytes	decoder/decoder.c	/^    uint32_t nbytes =$/;"	l
new_elem_end	../peripherals/memory/mem_peri.c	/^    size_t new_elem_end = temp.offset + temp.size + elem_size;$/;"	l
num_chunks	../peripherals/memory/mem_peri.h	/^    uint16_t num_chunks;$/;"	m	struct:__anon4
num_chunks	unit_test/mocks/include/mem_peri.h	/^    uint16_t num_chunks;$/;"	m	struct:__anon12
num_sectors	../peripherals/memory/mem_peri.h	/^    uint16_t num_sectors;         \/\/Size of chunk in sectors$/;"	m	struct:__anon2
num_sectors	unit_test/mocks/include/mem_peri.h	/^    uint8_t num_sectors;         \/\/Size of chunk in sectors$/;"	m	struct:__anon10
nval	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t rflags, nval;$/;"	l
nvsChipErase	../peripherals/memory/mem_peri.c	/^bool nvsChipErase(MemObject *mem)$/;"	f
nvsChipErase	../peripherals/memory/mem_peri.c	/^static bool nvsChipErase(MemObject *mem);$/;"	p	file:
nvsEnterDeepPowerdown	../peripherals/memory/mem_peri.c	/^bool nvsEnterDeepPowerdown(MemObject *mem)$/;"	f
nvsEnterDeepPowerdown	../peripherals/memory/mem_peri.c	/^static bool nvsEnterDeepPowerdown(MemObject *mem);$/;"	p	file:
nvsErase	../peripherals/memory/mem_peri.c	/^bool nvsErase(MemObject *mem, size_t offset, uint16_t num_sectors)$/;"	f
nvsErase	../peripherals/memory/mem_peri.h	/^bool nvsErase(MemObject *mem, size_t offset, uint16_t size);$/;"	p
nvsErase	unit_test/mocks/include/mem_peri.h	/^bool nvsErase(MemObject *mem, size_t offset, uint16_t size);$/;"	p
nvsExitDeepPowerdown	../peripherals/memory/mem_peri.c	/^bool nvsExitDeepPowerdown(MemObject *mem)$/;"	f
nvsExitDeepPowerdown	../peripherals/memory/mem_peri.c	/^static bool nvsExitDeepPowerdown(MemObject *mem);$/;"	p	file:
nvsReadID	../peripherals/memory/mem_peri.c	/^static uint8_t nvsReadID(MemObject *mem);$/;"	p	file:
nvsReadID	../peripherals/memory/mem_peri.c	/^uint8_t nvsReadID(MemObject *mem)$/;"	f
nvsReadJID	../peripherals/memory/mem_peri.c	/^static uint32_t nvsReadJID(MemObject *mem);$/;"	p	file:
nvsReadJID	../peripherals/memory/mem_peri.c	/^uint32_t nvsReadJID(MemObject *mem)$/;"	f
nvsReadStatus	../peripherals/memory/mem_peri.c	/^bool nvsReadStatus(MemObject *mem, uint8_t *status)$/;"	f
nvsReadStatus	../peripherals/memory/mem_peri.c	/^static bool nvsReadStatus(MemObject *mem, uint8_t *status);$/;"	p	file:
nvsReadTo	../peripherals/memory/mem_peri.c	/^bool nvsReadTo(MemObject *mem, size_t offset, void *dest, size_t size)$/;"	f
nvsReadTo	../peripherals/memory/mem_peri.h	/^bool nvsReadTo(MemObject *mem, size_t offset, void *dest, size_t size);$/;"	p
nvsReadTo	unit_test/mocks/include/mem_peri.h	/^bool nvsReadTo(MemObject *mem, size_t offset, void *dest, size_t size);$/;"	p
nvsReset	../peripherals/memory/mem_peri.c	/^bool nvsReset(MemObject *mem)$/;"	f
nvsReset	../peripherals/memory/mem_peri.c	/^static bool nvsReset(MemObject *mem);$/;"	p	file:
nvsVerify	../peripherals/memory/mem_peri.c	/^bool nvsVerify(MemObject *mem, size_t offset, void *source, size_t size)$/;"	f
nvsVerify	../peripherals/memory/mem_peri.c	/^static bool nvsVerify(MemObject *mem, size_t offset, void *source, size_t size);$/;"	p	file:
nvsWaitReady	../peripherals/memory/mem_peri.c	/^bool nvsWaitReady(MemObject *mem)$/;"	f
nvsWaitReady	../peripherals/memory/mem_peri.c	/^static bool nvsWaitReady(MemObject *mem);$/;"	p	file:
nvsWriteDisable	../peripherals/memory/mem_peri.c	/^bool nvsWriteDisable(MemObject *mem)$/;"	f
nvsWriteDisable	../peripherals/memory/mem_peri.c	/^static bool nvsWriteDisable(MemObject *mem);$/;"	p	file:
nvsWriteEnable	../peripherals/memory/mem_peri.c	/^bool nvsWriteEnable(MemObject *mem)$/;"	f
nvsWriteEnable	../peripherals/memory/mem_peri.c	/^static bool nvsWriteEnable(MemObject *mem);$/;"	p	file:
nvsWriteFrom	../peripherals/memory/mem_peri.c	/^bool nvsWriteFrom(MemObject *mem, size_t offset, void *source, size_t size)$/;"	f
nvsWriteFrom	../peripherals/memory/mem_peri.h	/^bool nvsWriteFrom(MemObject *mem, size_t offset, void *source, size_t size);$/;"	p
nvsWriteFrom	unit_test/mocks/include/mem_peri.h	/^bool nvsWriteFrom(MemObject *mem, size_t offset, void *source, size_t size);$/;"	p
offset	../peripherals/memory/mem_peri.c	/^	size_t offset = OAD_IMAGE_HEADER_SIZE;$/;"	l
offset	../peripherals/memory/mem_peri.c	/^    size_t offset = memReturnChunkEnd(mem, chunk) - ((element_index + 1) * MEM_ELEMBLK_SIZE);$/;"	l
offset	../peripherals/memory/mem_peri.h	/^    size_t offset;               \/\/Offset of chunk within memory$/;"	m	struct:__anon2
offset	../peripherals/memory/mem_peri.h	/^    size_t offset;               \/\/Offset of element within chunk (19 bits)$/;"	m	struct:__anon3
offset	../sub/audio/audio_mem.h	/^    uint32_t offset;$/;"	m	struct:__anon12
offset	../sub/audio/audio_mem.h	/^    uint32_t offset;$/;"	m	struct:__anon13
offset	clip_handler/clip_handler.c	/^  uint32_t offset;$/;"	m	struct:clip_handler	file:
offset	dac_handler/dac_handler.c	/^  uint32_t offset;$/;"	l
offset	unit_test/clips/clip.h	/^	int offset;$/;"	m	struct:clip_handle
offset	unit_test/mocks/include/audio_mem.h	/^    uint32_t offset;$/;"	m	struct:__anon1
offset	unit_test/mocks/include/audio_mem.h	/^    uint32_t offset;$/;"	m	struct:__anon2
offset	unit_test/mocks/include/mem_peri.h	/^    size_t offset;               \/\/Offset of chunk within memory$/;"	m	struct:__anon10
offset	unit_test/mocks/include/mem_peri.h	/^    size_t offset;               \/\/Offset of element within chunk (19 bits)$/;"	m	struct:__anon11
ok	libfoxenflac/foxen/flac.c	/^	bool ok = _fx_flac_check_params(max_block_size, max_channels) &&$/;"	l
ok	libfoxenflac/test/test_flac_integration.c	/^	bool ok = false;$/;"	l
old_state	libfoxenflac/foxen/flac.c	/^	fx_flac_state_t old_state = inst->state;$/;"	l
order	libfoxenflac/foxen/flac.c	/^	uint8_t order;$/;"	m	struct:__anon12	file:
osCMSIS	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osCMSIS /;"	d
osCMSIS_FreeRTOS	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osCMSIS_FreeRTOS /;"	d
osDelay	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osStatus osDelay (uint32_t millisec);$/;"	p
osDelay	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osDelay (uint32_t ticks) {$/;"	f
osDelay	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osDelay (uint32_t ticks);$/;"	p
osDelayUntil	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osDelayUntil (uint32_t ticks) {$/;"	f
osDelayUntil	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osDelayUntil (uint32_t ticks);$/;"	p
osError	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osError                   = -1,         \/\/\/< Unspecified RTOS error: run-time error but no other error message fits.$/;"	e	enum:__anon16
osErrorISR	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osErrorISR              = 0x82,       \/\/\/< Not allowed in ISR context: the function cannot be called from interrupt service routines.$/;"	e	enum:__anon7
osErrorISR	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osErrorISR                = -6,         \/\/\/< Not allowed in ISR context: the function cannot be called from interrupt service routines.$/;"	e	enum:__anon16
osErrorISRRecursive	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osErrorISRRecursive     = 0x83,       \/\/\/< Function called multiple times from ISR with same object.$/;"	e	enum:__anon7
osErrorISRRecursive	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osErrorISRRecursive /;"	d
osErrorNoMemory	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osErrorNoMemory         = 0x85,       \/\/\/< System is out of memory: it was impossible to allocate or reserve memory for the operation.$/;"	e	enum:__anon7
osErrorNoMemory	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osErrorNoMemory           = -5,         \/\/\/< System is out of memory: it was impossible to allocate or reserve memory for the operation.$/;"	e	enum:__anon16
osErrorOS	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osErrorOS               = 0xFF,       \/\/\/< Unspecified RTOS error: run-time error but no other error message fits.$/;"	e	enum:__anon7
osErrorOS	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osErrorOS /;"	d
osErrorParameter	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osErrorParameter        = 0x80,       \/\/\/< Parameter error: a mandatory parameter was missing or specified an incorrect object.$/;"	e	enum:__anon7
osErrorParameter	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osErrorParameter          = -4,         \/\/\/< Parameter error.$/;"	e	enum:__anon16
osErrorPriority	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osErrorPriority         = 0x84,       \/\/\/< System cannot determine priority or thread has illegal priority.$/;"	e	enum:__anon7
osErrorPriority	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osErrorPriority /;"	d
osErrorResource	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osErrorResource         = 0x81,       \/\/\/< Resource not available: a specified resource was not available.$/;"	e	enum:__anon7
osErrorResource	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osErrorResource           = -3,         \/\/\/< Resource not available.$/;"	e	enum:__anon16
osErrorTimeout	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osErrorTimeout            = -2,         \/\/\/< Operation not completed within the timeout period.$/;"	e	enum:__anon16
osErrorTimeoutResource	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osErrorTimeoutResource  = 0xC1,       \/\/\/< Resource not available within given time: a specified resource was not available within the timeout period.$/;"	e	enum:__anon7
osErrorTimeoutResource	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osErrorTimeoutResource /;"	d
osErrorValue	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osErrorValue            = 0x86,       \/\/\/< Value of a parameter is out of range.$/;"	e	enum:__anon7
osErrorValue	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osErrorValue /;"	d
osEvent	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^} osEvent;$/;"	t	typeref:struct:__anon8
osEventFlagsAttr_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^} osEventFlagsAttr_t;$/;"	t	typeref:struct:__anon19
osEventFlagsClear	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osEventFlagsClear (osEventFlagsId_t ef_id, uint32_t flags) {$/;"	f
osEventFlagsClear	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osEventFlagsClear (osEventFlagsId_t ef_id, uint32_t flags);$/;"	p
osEventFlagsDelete	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osEventFlagsDelete (osEventFlagsId_t ef_id) {$/;"	f
osEventFlagsDelete	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osEventFlagsDelete (osEventFlagsId_t ef_id);$/;"	p
osEventFlagsGet	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osEventFlagsGet (osEventFlagsId_t ef_id) {$/;"	f
osEventFlagsGet	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osEventFlagsGet (osEventFlagsId_t ef_id);$/;"	p
osEventFlagsGetName	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^const char *osEventFlagsGetName (osEventFlagsId_t ef_id);$/;"	p
osEventFlagsId_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^typedef void *osEventFlagsId_t;$/;"	t
osEventFlagsNew	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osEventFlagsId_t osEventFlagsNew (const osEventFlagsAttr_t *attr) {$/;"	f
osEventFlagsNew	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osEventFlagsId_t osEventFlagsNew (const osEventFlagsAttr_t *attr);$/;"	p
osEventFlagsSet	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osEventFlagsSet (osEventFlagsId_t ef_id, uint32_t flags) {$/;"	f
osEventFlagsSet	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osEventFlagsSet (osEventFlagsId_t ef_id, uint32_t flags);$/;"	p
osEventFlagsWait	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osEventFlagsWait (osEventFlagsId_t ef_id, uint32_t flags, uint32_t options, uint32_t timeout) {$/;"	f
osEventFlagsWait	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osEventFlagsWait (osEventFlagsId_t ef_id, uint32_t flags, uint32_t options, uint32_t timeout);$/;"	p
osEventMail	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osEventMail             = 0x20,       \/\/\/< Function completed; mail event occurred.$/;"	e	enum:__anon7
osEventMail	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osEventMail /;"	d
osEventMessage	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osEventMessage          = 0x10,       \/\/\/< Function completed; message event occurred.$/;"	e	enum:__anon7
osEventMessage	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osEventMessage /;"	d
osEventSignal	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osEventSignal           = 0x08,       \/\/\/< Function completed; signal event occurred.$/;"	e	enum:__anon7
osEventSignal	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osEventSignal /;"	d
osEventTimeout	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osEventTimeout          = 0x40,       \/\/\/< Function completed; timeout occurred.$/;"	e	enum:__anon7
osEventTimeout	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osEventTimeout /;"	d
osFeature_MailQ	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osFeature_MailQ /;"	d
osFeature_MainThread	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osFeature_MainThread /;"	d
osFeature_MessageQ	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osFeature_MessageQ /;"	d
osFeature_Pool	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osFeature_Pool /;"	d
osFeature_Semaphore	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osFeature_Semaphore /;"	d
osFeature_Signals	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osFeature_Signals /;"	d
osFeature_SysTick	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osFeature_SysTick /;"	d
osFeature_Wait	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osFeature_Wait /;"	d
osFlagsError	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define osFlagsError /;"	d
osFlagsErrorISR	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define osFlagsErrorISR /;"	d
osFlagsErrorParameter	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define osFlagsErrorParameter /;"	d
osFlagsErrorResource	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define osFlagsErrorResource /;"	d
osFlagsErrorTimeout	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define osFlagsErrorTimeout /;"	d
osFlagsErrorUnknown	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define osFlagsErrorUnknown /;"	d
osFlagsNoClear	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define osFlagsNoClear /;"	d
osFlagsWaitAll	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define osFlagsWaitAll /;"	d
osFlagsWaitAny	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define osFlagsWaitAny /;"	d
osKernelError	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osKernelError           = -1,         \/\/\/< Error.$/;"	e	enum:__anon12
osKernelGetInfo	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osKernelGetInfo (osVersion_t *version, char *id_buf, uint32_t id_size) {$/;"	f
osKernelGetInfo	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osKernelGetInfo (osVersion_t *version, char *id_buf, uint32_t id_size);$/;"	p
osKernelGetState	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osKernelState_t osKernelGetState (void) {$/;"	f
osKernelGetState	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osKernelState_t osKernelGetState (void);$/;"	p
osKernelGetSysTimerCount	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osKernelGetSysTimerCount (void) {$/;"	f
osKernelGetSysTimerCount	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osKernelGetSysTimerCount (void);$/;"	p
osKernelGetSysTimerFreq	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osKernelGetSysTimerFreq (void) {$/;"	f
osKernelGetSysTimerFreq	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osKernelGetSysTimerFreq (void);$/;"	p
osKernelGetTickCount	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osKernelGetTickCount (void) {$/;"	f
osKernelGetTickCount	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osKernelGetTickCount (void);$/;"	p
osKernelGetTickFreq	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osKernelGetTickFreq (void) {$/;"	f
osKernelGetTickFreq	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osKernelGetTickFreq (void);$/;"	p
osKernelInactive	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osKernelInactive        =  0,         \/\/\/< Inactive.$/;"	e	enum:__anon12
osKernelInitialize	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osStatus osKernelInitialize (void);$/;"	p
osKernelInitialize	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osKernelInitialize (void) {$/;"	f
osKernelInitialize	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osKernelInitialize (void);$/;"	p
osKernelLock	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^int32_t osKernelLock (void) {$/;"	f
osKernelLock	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^int32_t osKernelLock (void);$/;"	p
osKernelLocked	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osKernelLocked          =  3,         \/\/\/< Locked.$/;"	e	enum:__anon12
osKernelReady	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osKernelReady           =  1,         \/\/\/< Ready.$/;"	e	enum:__anon12
osKernelReserved	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osKernelReserved        = 0x7FFFFFFFU \/\/\/< Prevents enum down-size compiler optimization.$/;"	e	enum:__anon12
osKernelRestoreLock	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^int32_t osKernelRestoreLock (int32_t lock) {$/;"	f
osKernelRestoreLock	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^int32_t osKernelRestoreLock (int32_t lock);$/;"	p
osKernelResume	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^void osKernelResume (uint32_t sleep_ticks);$/;"	p
osKernelRunning	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^int32_t osKernelRunning(void);$/;"	p
osKernelRunning	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osKernelRunning         =  2,         \/\/\/< Running.$/;"	e	enum:__anon12
osKernelStart	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osStatus osKernelStart (void);$/;"	p
osKernelStart	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osKernelStart (void) {$/;"	f
osKernelStart	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osKernelStart (void);$/;"	p
osKernelState_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^} osKernelState_t;$/;"	t	typeref:enum:__anon12
osKernelSuspend	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osKernelSuspend (void);$/;"	p
osKernelSuspended	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osKernelSuspended       =  4,         \/\/\/< Suspended.$/;"	e	enum:__anon12
osKernelSysTick	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define  osKernelSysTick /;"	d
osKernelSysTick	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^uint32_t osKernelSysTick (void);$/;"	p
osKernelSysTickFrequency	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osKernelSysTickFrequency /;"	d
osKernelSysTickMicroSec	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osKernelSysTickMicroSec(/;"	d
osKernelSystemId	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osKernelSystemId /;"	d
osKernelUnlock	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^int32_t osKernelUnlock (void) {$/;"	f
osKernelUnlock	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^int32_t osKernelUnlock (void);$/;"	p
osMailAlloc	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^void *osMailAlloc (osMailQId queue_id, uint32_t millisec);$/;"	p
osMailCAlloc	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^void *osMailCAlloc (osMailQId queue_id, uint32_t millisec);$/;"	p
osMailCreate	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osMailQId osMailCreate (const osMailQDef_t *queue_def, osThreadId thread_id);$/;"	p
osMailFree	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osStatus osMailFree (osMailQId queue_id, void *mail);$/;"	p
osMailGet	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^os_InRegs osEvent osMailGet (osMailQId queue_id, uint32_t millisec);$/;"	p
osMailPut	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osStatus osMailPut (osMailQId queue_id, const void *mail);$/;"	p
osMailQ	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osMailQ(/;"	d
osMailQDef	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osMailQDef(/;"	d
osMailQDef_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^} osMailQDef_t;$/;"	t	typeref:struct:os_mailQ_def
osMailQId	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^typedef void *osMailQId;$/;"	t
osMemoryPoolAlloc	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^void *osMemoryPoolAlloc (osMemoryPoolId_t mp_id, uint32_t timeout);$/;"	p
osMemoryPoolAttr_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^} osMemoryPoolAttr_t;$/;"	t	typeref:struct:__anon22
osMemoryPoolDelete	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osMemoryPoolDelete (osMemoryPoolId_t mp_id);$/;"	p
osMemoryPoolFree	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osMemoryPoolFree (osMemoryPoolId_t mp_id, void *block);$/;"	p
osMemoryPoolGetBlockSize	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osMemoryPoolGetBlockSize (osMemoryPoolId_t mp_id);$/;"	p
osMemoryPoolGetCapacity	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osMemoryPoolGetCapacity (osMemoryPoolId_t mp_id);$/;"	p
osMemoryPoolGetCount	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osMemoryPoolGetCount (osMemoryPoolId_t mp_id);$/;"	p
osMemoryPoolGetName	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^const char *osMemoryPoolGetName (osMemoryPoolId_t mp_id);$/;"	p
osMemoryPoolGetSpace	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osMemoryPoolGetSpace (osMemoryPoolId_t mp_id);$/;"	p
osMemoryPoolId_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^typedef void *osMemoryPoolId_t;$/;"	t
osMemoryPoolNew	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osMemoryPoolId_t osMemoryPoolNew (uint32_t block_count, uint32_t block_size, const osMemoryPoolAttr_t *attr);$/;"	p
osMessageCreate	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osMessageQId osMessageCreate (const osMessageQDef_t *queue_def, osThreadId thread_id);$/;"	p
osMessageGet	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^os_InRegs osEvent osMessageGet (osMessageQId queue_id, uint32_t millisec);$/;"	p
osMessagePut	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osStatus osMessagePut (osMessageQId queue_id, uint32_t info, uint32_t millisec);$/;"	p
osMessageQ	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osMessageQ(/;"	d
osMessageQDef	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osMessageQDef(/;"	d
osMessageQDef_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^} osMessageQDef_t;$/;"	t	typeref:struct:os_messageQ_def
osMessageQId	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^typedef void *osMessageQId;$/;"	t
osMessageQueueAttr_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^} osMessageQueueAttr_t;$/;"	t	typeref:struct:__anon23
osMessageQueueDelete	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osMessageQueueDelete (osMessageQueueId_t mq_id) {$/;"	f
osMessageQueueDelete	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osMessageQueueDelete (osMessageQueueId_t mq_id);$/;"	p
osMessageQueueGet	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {$/;"	f
osMessageQueueGet	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout);$/;"	p
osMessageQueueGetCapacity	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osMessageQueueGetCapacity (osMessageQueueId_t mq_id) {$/;"	f
osMessageQueueGetCapacity	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osMessageQueueGetCapacity (osMessageQueueId_t mq_id);$/;"	p
osMessageQueueGetCount	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osMessageQueueGetCount (osMessageQueueId_t mq_id) {$/;"	f
osMessageQueueGetCount	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osMessageQueueGetCount (osMessageQueueId_t mq_id);$/;"	p
osMessageQueueGetMsgSize	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osMessageQueueGetMsgSize (osMessageQueueId_t mq_id) {$/;"	f
osMessageQueueGetMsgSize	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osMessageQueueGetMsgSize (osMessageQueueId_t mq_id);$/;"	p
osMessageQueueGetName	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^const char *osMessageQueueGetName (osMessageQueueId_t mq_id);$/;"	p
osMessageQueueGetSpace	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osMessageQueueGetSpace (osMessageQueueId_t mq_id) {$/;"	f
osMessageQueueGetSpace	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osMessageQueueGetSpace (osMessageQueueId_t mq_id);$/;"	p
osMessageQueueId_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^typedef void *osMessageQueueId_t;$/;"	t
osMessageQueueNew	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {$/;"	f
osMessageQueueNew	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr);$/;"	p
osMessageQueuePut	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {$/;"	f
osMessageQueuePut	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout);$/;"	p
osMessageQueueReset	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osMessageQueueReset (osMessageQueueId_t mq_id) {$/;"	f
osMessageQueueReset	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osMessageQueueReset (osMessageQueueId_t mq_id);$/;"	p
osMutex	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osMutex(/;"	d
osMutexAcquire	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {$/;"	f
osMutexAcquire	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout);$/;"	p
osMutexAttr_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^} osMutexAttr_t;$/;"	t	typeref:struct:__anon20
osMutexCreate	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osMutexId osMutexCreate (const osMutexDef_t *mutex_def);$/;"	p
osMutexDef	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osMutexDef(/;"	d
osMutexDef_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osMutexDef_t /;"	d
osMutexDef_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^} osMutexDef_t;$/;"	t	typeref:struct:os_mutex_def
osMutexDelete	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osStatus osMutexDelete (osMutexId mutex_id);$/;"	p
osMutexDelete	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osMutexDelete (osMutexId_t mutex_id) {$/;"	f
osMutexDelete	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osMutexDelete (osMutexId_t mutex_id);$/;"	p
osMutexGetName	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^const char *osMutexGetName (osMutexId_t mutex_id);$/;"	p
osMutexGetOwner	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osThreadId_t osMutexGetOwner (osMutexId_t mutex_id) {$/;"	f
osMutexGetOwner	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osThreadId_t osMutexGetOwner (osMutexId_t mutex_id);$/;"	p
osMutexId	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osMutexId /;"	d
osMutexId	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^typedef void *osMutexId;$/;"	t
osMutexId_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^typedef void *osMutexId_t;$/;"	t
osMutexNew	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osMutexId_t osMutexNew (const osMutexAttr_t *attr) {$/;"	f
osMutexNew	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osMutexId_t osMutexNew (const osMutexAttr_t *attr);$/;"	p
osMutexPrioInherit	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define osMutexPrioInherit /;"	d
osMutexRecursive	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define osMutexRecursive /;"	d
osMutexRelease	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osStatus osMutexRelease (osMutexId mutex_id);$/;"	p
osMutexRelease	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osMutexRelease (osMutexId_t mutex_id) {$/;"	f
osMutexRelease	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osMutexRelease (osMutexId_t mutex_id);$/;"	p
osMutexRobust	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define osMutexRobust /;"	d
osMutexWait	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define  osMutexWait /;"	d
osMutexWait	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osStatus osMutexWait (osMutexId mutex_id, uint32_t millisec);$/;"	p
osOK	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osOK                    =    0,       \/\/\/< Function completed; no error or event occurred.$/;"	e	enum:__anon7
osOK	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osOK                      =  0,         \/\/\/< Operation completed successfully.$/;"	e	enum:__anon16
osPool	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osPool(/;"	d
osPoolAlloc	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^void *osPoolAlloc (osPoolId pool_id);$/;"	p
osPoolCAlloc	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^void *osPoolCAlloc (osPoolId pool_id);$/;"	p
osPoolCreate	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osPoolId osPoolCreate (const osPoolDef_t *pool_def);$/;"	p
osPoolDef	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osPoolDef(/;"	d
osPoolDef_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^} osPoolDef_t;$/;"	t	typeref:struct:os_pool_def
osPoolFree	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osStatus osPoolFree (osPoolId pool_id, void *block);$/;"	p
osPoolId	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^typedef void *osPoolId;$/;"	t
osPriority	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osPriority /;"	d
osPriority	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^} osPriority;$/;"	t	typeref:enum:__anon5
osPriorityAboveNormal	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osPriorityAboveNormal   = +1,         \/\/\/< Priority: above normal$/;"	e	enum:__anon5
osPriorityAboveNormal	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityAboveNormal   = 32,         \/\/\/< Priority: above normal$/;"	e	enum:__anon14
osPriorityAboveNormal1	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityAboveNormal1  = 32+1,       \/\/\/< Priority: above normal + 1$/;"	e	enum:__anon14
osPriorityAboveNormal2	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityAboveNormal2  = 32+2,       \/\/\/< Priority: above normal + 2$/;"	e	enum:__anon14
osPriorityAboveNormal3	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityAboveNormal3  = 32+3,       \/\/\/< Priority: above normal + 3$/;"	e	enum:__anon14
osPriorityAboveNormal4	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityAboveNormal4  = 32+4,       \/\/\/< Priority: above normal + 4$/;"	e	enum:__anon14
osPriorityAboveNormal5	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityAboveNormal5  = 32+5,       \/\/\/< Priority: above normal + 5$/;"	e	enum:__anon14
osPriorityAboveNormal6	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityAboveNormal6  = 32+6,       \/\/\/< Priority: above normal + 6$/;"	e	enum:__anon14
osPriorityAboveNormal7	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityAboveNormal7  = 32+7,       \/\/\/< Priority: above normal + 7$/;"	e	enum:__anon14
osPriorityBelowNormal	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osPriorityBelowNormal   = -1,         \/\/\/< Priority: below normal$/;"	e	enum:__anon5
osPriorityBelowNormal	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityBelowNormal   = 16,         \/\/\/< Priority: below normal$/;"	e	enum:__anon14
osPriorityBelowNormal1	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityBelowNormal1  = 16+1,       \/\/\/< Priority: below normal + 1$/;"	e	enum:__anon14
osPriorityBelowNormal2	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityBelowNormal2  = 16+2,       \/\/\/< Priority: below normal + 2$/;"	e	enum:__anon14
osPriorityBelowNormal3	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityBelowNormal3  = 16+3,       \/\/\/< Priority: below normal + 3$/;"	e	enum:__anon14
osPriorityBelowNormal4	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityBelowNormal4  = 16+4,       \/\/\/< Priority: below normal + 4$/;"	e	enum:__anon14
osPriorityBelowNormal5	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityBelowNormal5  = 16+5,       \/\/\/< Priority: below normal + 5$/;"	e	enum:__anon14
osPriorityBelowNormal6	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityBelowNormal6  = 16+6,       \/\/\/< Priority: below normal + 6$/;"	e	enum:__anon14
osPriorityBelowNormal7	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityBelowNormal7  = 16+7,       \/\/\/< Priority: below normal + 7$/;"	e	enum:__anon14
osPriorityError	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osPriorityError         = 0x84,       \/\/\/< System cannot determine priority or illegal priority.$/;"	e	enum:__anon5
osPriorityError	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityError         = -1,         \/\/\/< System cannot determine priority or illegal priority.$/;"	e	enum:__anon14
osPriorityHigh	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osPriorityHigh          = +2,         \/\/\/< Priority: high$/;"	e	enum:__anon5
osPriorityHigh	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityHigh          = 40,         \/\/\/< Priority: high$/;"	e	enum:__anon14
osPriorityHigh1	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityHigh1         = 40+1,       \/\/\/< Priority: high + 1$/;"	e	enum:__anon14
osPriorityHigh2	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityHigh2         = 40+2,       \/\/\/< Priority: high + 2$/;"	e	enum:__anon14
osPriorityHigh3	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityHigh3         = 40+3,       \/\/\/< Priority: high + 3$/;"	e	enum:__anon14
osPriorityHigh4	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityHigh4         = 40+4,       \/\/\/< Priority: high + 4$/;"	e	enum:__anon14
osPriorityHigh5	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityHigh5         = 40+5,       \/\/\/< Priority: high + 5$/;"	e	enum:__anon14
osPriorityHigh6	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityHigh6         = 40+6,       \/\/\/< Priority: high + 6$/;"	e	enum:__anon14
osPriorityHigh7	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityHigh7         = 40+7,       \/\/\/< Priority: high + 7$/;"	e	enum:__anon14
osPriorityISR	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityISR           = 56,         \/\/\/< Reserved for ISR deferred thread.$/;"	e	enum:__anon14
osPriorityIdle	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osPriorityIdle          = -3,         \/\/\/< Priority: idle (lowest)$/;"	e	enum:__anon5
osPriorityIdle	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityIdle          =  1,         \/\/\/< Reserved for Idle thread.$/;"	e	enum:__anon14
osPriorityLow	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osPriorityLow           = -2,         \/\/\/< Priority: low$/;"	e	enum:__anon5
osPriorityLow	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityLow           =  8,         \/\/\/< Priority: low$/;"	e	enum:__anon14
osPriorityLow1	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityLow1          =  8+1,       \/\/\/< Priority: low + 1$/;"	e	enum:__anon14
osPriorityLow2	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityLow2          =  8+2,       \/\/\/< Priority: low + 2$/;"	e	enum:__anon14
osPriorityLow3	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityLow3          =  8+3,       \/\/\/< Priority: low + 3$/;"	e	enum:__anon14
osPriorityLow4	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityLow4          =  8+4,       \/\/\/< Priority: low + 4$/;"	e	enum:__anon14
osPriorityLow5	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityLow5          =  8+5,       \/\/\/< Priority: low + 5$/;"	e	enum:__anon14
osPriorityLow6	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityLow6          =  8+6,       \/\/\/< Priority: low + 6$/;"	e	enum:__anon14
osPriorityLow7	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityLow7          =  8+7,       \/\/\/< Priority: low + 7$/;"	e	enum:__anon14
osPriorityNone	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityNone          =  0,         \/\/\/< No priority (not initialized).$/;"	e	enum:__anon14
osPriorityNormal	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osPriorityNormal        =  0,         \/\/\/< Priority: normal (default)$/;"	e	enum:__anon5
osPriorityNormal	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityNormal        = 24,         \/\/\/< Priority: normal$/;"	e	enum:__anon14
osPriorityNormal1	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityNormal1       = 24+1,       \/\/\/< Priority: normal + 1$/;"	e	enum:__anon14
osPriorityNormal2	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityNormal2       = 24+2,       \/\/\/< Priority: normal + 2$/;"	e	enum:__anon14
osPriorityNormal3	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityNormal3       = 24+3,       \/\/\/< Priority: normal + 3$/;"	e	enum:__anon14
osPriorityNormal4	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityNormal4       = 24+4,       \/\/\/< Priority: normal + 4$/;"	e	enum:__anon14
osPriorityNormal5	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityNormal5       = 24+5,       \/\/\/< Priority: normal + 5$/;"	e	enum:__anon14
osPriorityNormal6	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityNormal6       = 24+6,       \/\/\/< Priority: normal + 6$/;"	e	enum:__anon14
osPriorityNormal7	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityNormal7       = 24+7,       \/\/\/< Priority: normal + 7$/;"	e	enum:__anon14
osPriorityRealtime	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osPriorityRealtime      = +3,         \/\/\/< Priority: realtime (highest)$/;"	e	enum:__anon5
osPriorityRealtime	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityRealtime      = 48,         \/\/\/< Priority: realtime$/;"	e	enum:__anon14
osPriorityRealtime1	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityRealtime1     = 48+1,       \/\/\/< Priority: realtime + 1$/;"	e	enum:__anon14
osPriorityRealtime2	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityRealtime2     = 48+2,       \/\/\/< Priority: realtime + 2$/;"	e	enum:__anon14
osPriorityRealtime3	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityRealtime3     = 48+3,       \/\/\/< Priority: realtime + 3$/;"	e	enum:__anon14
osPriorityRealtime4	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityRealtime4     = 48+4,       \/\/\/< Priority: realtime + 4$/;"	e	enum:__anon14
osPriorityRealtime5	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityRealtime5     = 48+5,       \/\/\/< Priority: realtime + 5$/;"	e	enum:__anon14
osPriorityRealtime6	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityRealtime6     = 48+6,       \/\/\/< Priority: realtime + 6$/;"	e	enum:__anon14
osPriorityRealtime7	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityRealtime7     = 48+7,       \/\/\/< Priority: realtime + 7$/;"	e	enum:__anon14
osPriorityReserved	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osPriorityReserved      = 0x7FFFFFFF  \/\/\/< Prevents enum down-size compiler optimization.$/;"	e	enum:__anon5
osPriorityReserved	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriorityReserved      = 0x7FFFFFFF  \/\/\/< Prevents enum down-size compiler optimization.$/;"	e	enum:__anon14
osPriority_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^} osPriority_t;$/;"	t	typeref:enum:__anon14
osSemaphore	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osSemaphore(/;"	d
osSemaphoreAcquire	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {$/;"	f
osSemaphoreAcquire	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout);$/;"	p
osSemaphoreAttr_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^} osSemaphoreAttr_t;$/;"	t	typeref:struct:__anon21
osSemaphoreCreate	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osSemaphoreId osSemaphoreCreate (const osSemaphoreDef_t *semaphore_def, int32_t count);$/;"	p
osSemaphoreDef	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osSemaphoreDef(/;"	d
osSemaphoreDef_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osSemaphoreDef_t /;"	d
osSemaphoreDef_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^} osSemaphoreDef_t;$/;"	t	typeref:struct:os_semaphore_def
osSemaphoreDelete	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osStatus osSemaphoreDelete (osSemaphoreId semaphore_id);$/;"	p
osSemaphoreDelete	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osSemaphoreDelete (osSemaphoreId_t semaphore_id) {$/;"	f
osSemaphoreDelete	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osSemaphoreDelete (osSemaphoreId_t semaphore_id);$/;"	p
osSemaphoreGetCount	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id) {$/;"	f
osSemaphoreGetCount	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id);$/;"	p
osSemaphoreGetName	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^const char *osSemaphoreGetName (osSemaphoreId_t semaphore_id);$/;"	p
osSemaphoreId	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osSemaphoreId /;"	d
osSemaphoreId	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^typedef void *osSemaphoreId;$/;"	t
osSemaphoreId_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^typedef void *osSemaphoreId_t;$/;"	t
osSemaphoreNew	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {$/;"	f
osSemaphoreNew	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr);$/;"	p
osSemaphoreRelease	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osStatus osSemaphoreRelease (osSemaphoreId semaphore_id);$/;"	p
osSemaphoreRelease	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {$/;"	f
osSemaphoreRelease	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id);$/;"	p
osSemaphoreWait	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^int32_t osSemaphoreWait (osSemaphoreId semaphore_id, uint32_t millisec);$/;"	p
osSignalClear	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^int32_t osSignalClear (osThreadId thread_id, int32_t signals);$/;"	p
osSignalSet	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^int32_t osSignalSet (osThreadId thread_id, int32_t signals);$/;"	p
osSignalWait	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^os_InRegs osEvent osSignalWait (int32_t signals, uint32_t millisec);$/;"	p
osStatus	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^typedef int32_t                  osStatus;$/;"	t
osStatus	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^} osStatus;$/;"	t	typeref:enum:__anon7
osStatusReserved	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osStatusReserved        = 0x7FFFFFFF  \/\/\/< Prevents enum down-size compiler optimization.$/;"	e	enum:__anon7
osStatusReserved	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osStatusReserved          = 0x7FFFFFFF  \/\/\/< Prevents enum down-size compiler optimization.$/;"	e	enum:__anon16
osStatus_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^} osStatus_t;$/;"	t	typeref:enum:__anon16
osThread	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osThread(/;"	d
osThreadAttr_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^} osThreadAttr_t;$/;"	t	typeref:struct:__anon17
osThreadBlocked	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osThreadBlocked         =  3,         \/\/\/< Blocked.$/;"	e	enum:__anon13
osThreadCreate	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osThreadId osThreadCreate (const osThreadDef_t *thread_def, void *argument);$/;"	p
osThreadDef	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osThreadDef(/;"	d
osThreadDef_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^} osThreadDef_t;$/;"	t	typeref:struct:os_thread_def
osThreadDetach	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osThreadDetach (osThreadId_t thread_id);$/;"	p
osThreadDetached	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define osThreadDetached /;"	d
osThreadEnumerate	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osThreadEnumerate (osThreadId_t *thread_array, uint32_t array_items) {$/;"	f
osThreadEnumerate	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osThreadEnumerate (osThreadId_t *thread_array, uint32_t array_items);$/;"	p
osThreadError	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osThreadError           = -1,         \/\/\/< Error.$/;"	e	enum:__anon13
osThreadExit	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^__NO_RETURN void osThreadExit (void) {$/;"	f
osThreadExit	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^__NO_RETURN void osThreadExit (void);$/;"	p
osThreadFlagsClear	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osThreadFlagsClear (uint32_t flags) {$/;"	f
osThreadFlagsClear	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osThreadFlagsClear (uint32_t flags);$/;"	p
osThreadFlagsGet	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osThreadFlagsGet (void) {$/;"	f
osThreadFlagsGet	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osThreadFlagsGet (void);$/;"	p
osThreadFlagsSet	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osThreadFlagsSet (osThreadId_t thread_id, uint32_t flags) {$/;"	f
osThreadFlagsSet	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osThreadFlagsSet (osThreadId_t thread_id, uint32_t flags);$/;"	p
osThreadFlagsWait	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osThreadFlagsWait (uint32_t flags, uint32_t options, uint32_t timeout) {$/;"	f
osThreadFlagsWait	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osThreadFlagsWait (uint32_t flags, uint32_t options, uint32_t timeout);$/;"	p
osThreadFunc_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^typedef void (*osThreadFunc_t) (void *argument);$/;"	t
osThreadGetCount	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osThreadGetCount (void) {$/;"	f
osThreadGetCount	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osThreadGetCount (void);$/;"	p
osThreadGetId	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osThreadId osThreadGetId (void);$/;"	p
osThreadGetId	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osThreadId_t osThreadGetId (void) {$/;"	f
osThreadGetId	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osThreadId_t osThreadGetId (void);$/;"	p
osThreadGetName	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^const char *osThreadGetName (osThreadId_t thread_id) {$/;"	f
osThreadGetName	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^const char *osThreadGetName (osThreadId_t thread_id);$/;"	p
osThreadGetPriority	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osPriority osThreadGetPriority (osThreadId thread_id);$/;"	p
osThreadGetPriority	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osPriority_t osThreadGetPriority (osThreadId_t thread_id) {$/;"	f
osThreadGetPriority	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osPriority_t osThreadGetPriority (osThreadId_t thread_id);$/;"	p
osThreadGetStackSize	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osThreadGetStackSize (osThreadId_t thread_id);$/;"	p
osThreadGetStackSpace	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osThreadGetStackSpace (osThreadId_t thread_id) {$/;"	f
osThreadGetStackSpace	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osThreadGetStackSpace (osThreadId_t thread_id);$/;"	p
osThreadGetState	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osThreadState_t osThreadGetState (osThreadId_t thread_id) {$/;"	f
osThreadGetState	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osThreadState_t osThreadGetState (osThreadId_t thread_id);$/;"	p
osThreadId	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osThreadId /;"	d
osThreadId	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^typedef void *osThreadId;$/;"	t
osThreadId_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^typedef void *osThreadId_t;$/;"	t
osThreadInactive	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osThreadInactive        =  0,         \/\/\/< Inactive.$/;"	e	enum:__anon13
osThreadJoin	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osThreadJoin (osThreadId_t thread_id);$/;"	p
osThreadJoinable	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define osThreadJoinable /;"	d
osThreadNew	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {$/;"	f
osThreadNew	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr);$/;"	p
osThreadReady	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osThreadReady           =  1,         \/\/\/< Ready.$/;"	e	enum:__anon13
osThreadReserved	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osThreadReserved        = 0x7FFFFFFF  \/\/\/< Prevents enum down-size compiler optimization.$/;"	e	enum:__anon13
osThreadResume	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osThreadResume (osThreadId_t thread_id) {$/;"	f
osThreadResume	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osThreadResume (osThreadId_t thread_id);$/;"	p
osThreadRunning	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osThreadRunning         =  2,         \/\/\/< Running.$/;"	e	enum:__anon13
osThreadSetPriority	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osStatus osThreadSetPriority (osThreadId thread_id, osPriority priority);$/;"	p
osThreadSetPriority	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osThreadSetPriority (osThreadId_t thread_id, osPriority_t priority) {$/;"	f
osThreadSetPriority	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osThreadSetPriority (osThreadId_t thread_id, osPriority_t priority);$/;"	p
osThreadState_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^} osThreadState_t;$/;"	t	typeref:enum:__anon13
osThreadSuspend	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osThreadSuspend (osThreadId_t thread_id) {$/;"	f
osThreadSuspend	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osThreadSuspend (osThreadId_t thread_id);$/;"	p
osThreadTerminate	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osStatus osThreadTerminate (osThreadId thread_id);$/;"	p
osThreadTerminate	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osThreadTerminate (osThreadId_t thread_id) {$/;"	f
osThreadTerminate	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osThreadTerminate (osThreadId_t thread_id);$/;"	p
osThreadTerminated	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osThreadTerminated      =  4,         \/\/\/< Terminated.$/;"	e	enum:__anon13
osThreadYield	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osStatus osThreadYield (void);$/;"	p
osThreadYield	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osThreadYield (void) {$/;"	f
osThreadYield	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osThreadYield (void);$/;"	p
osTimer	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osTimer(/;"	d
osTimerAttr_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^} osTimerAttr_t;$/;"	t	typeref:struct:__anon18
osTimerCreate	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osTimerId osTimerCreate (const osTimerDef_t *timer_def, os_timer_type type, void *argument);$/;"	p
osTimerDef	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osTimerDef(/;"	d
osTimerDef_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^} osTimerDef_t;$/;"	t	typeref:struct:os_timer_def
osTimerDelete	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osStatus osTimerDelete (osTimerId timer_id);$/;"	p
osTimerDelete	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osTimerDelete (osTimerId_t timer_id) {$/;"	f
osTimerDelete	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osTimerDelete (osTimerId_t timer_id);$/;"	p
osTimerFunc_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^typedef void (*osTimerFunc_t) (void *argument);$/;"	t
osTimerGetName	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^const char *osTimerGetName (osTimerId_t timer_id) {$/;"	f
osTimerGetName	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^const char *osTimerGetName (osTimerId_t timer_id);$/;"	p
osTimerId	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osTimerId /;"	d
osTimerId	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^typedef void *osTimerId;$/;"	t
osTimerId_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^typedef void *osTimerId_t;$/;"	t
osTimerIsRunning	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^uint32_t osTimerIsRunning (osTimerId_t timer_id) {$/;"	f
osTimerIsRunning	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^uint32_t osTimerIsRunning (osTimerId_t timer_id);$/;"	p
osTimerNew	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osTimerId_t osTimerNew (osTimerFunc_t func, osTimerType_t type, void *argument, const osTimerAttr_t *attr) {$/;"	f
osTimerNew	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osTimerId_t osTimerNew (osTimerFunc_t func, osTimerType_t type, void *argument, const osTimerAttr_t *attr);$/;"	p
osTimerOnce	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osTimerOnce             = 0,          \/\/\/< One-shot timer.$/;"	e	enum:__anon6
osTimerOnce	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osTimerOnce               = 0,          \/\/\/< One-shot timer.$/;"	e	enum:__anon15
osTimerPeriodic	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osTimerPeriodic         = 1           \/\/\/< Repeating timer.$/;"	e	enum:__anon6
osTimerPeriodic	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osTimerPeriodic           = 1           \/\/\/< Repeating timer.$/;"	e	enum:__anon15
osTimerStart	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osStatus osTimerStart (osTimerId timer_id, uint32_t millisec);$/;"	p
osTimerStart	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osTimerStart (osTimerId_t timer_id, uint32_t ticks) {$/;"	f
osTimerStart	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osTimerStart (osTimerId_t timer_id, uint32_t ticks);$/;"	p
osTimerStop	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^osStatus osTimerStop (osTimerId timer_id);$/;"	p
osTimerStop	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^osStatus_t osTimerStop (osTimerId_t timer_id) {$/;"	f
osTimerStop	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^osStatus_t osTimerStop (osTimerId_t timer_id);$/;"	p
osTimerType_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^} osTimerType_t;$/;"	t	typeref:enum:__anon15
osVersion_t	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^} osVersion_t;$/;"	t	typeref:struct:__anon11
osWait	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^os_InRegs osEvent osWait (uint32_t millisec);$/;"	p
osWaitForever	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define osWaitForever /;"	d
osWaitForever	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^#define osWaitForever /;"	d
os_InRegs	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define os_InRegs /;"	d
os_InRegs	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define os_InRegs$/;"	d
os_mailQ_def	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^typedef struct os_mailQ_def {$/;"	s
os_messageQ_def	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^typedef struct os_messageQ_def {$/;"	s
os_mutex_def	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^typedef struct os_mutex_def {$/;"	s
os_pool_def	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^typedef struct os_pool_def {$/;"	s
os_pthread	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^typedef void (*os_pthread) (void const *argument);$/;"	t
os_ptimer	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^typedef void (*os_ptimer) (void const *argument);$/;"	t
os_semaphore_def	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^typedef struct os_semaphore_def {$/;"	s
os_thread_def	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^typedef struct os_thread_def {$/;"	s
os_timer_def	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^typedef struct os_timer_def {$/;"	s
os_timer_type	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^#define os_timer_type /;"	d
os_timer_type	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^} os_timer_type;$/;"	t	typeref:enum:__anon6
out	libfoxenflac/test/test_flac.c	/^	int32_t out[512U];$/;"	l
out_buf	libfoxenflac/examples/flac_decoder.c	/^	int32_t out_buf[512];$/;"	l
out_buf	libfoxenflac/test/test_flac_integration.c	/^	int32_t out_buf[64];$/;"	l
out_buf	unit_test/unit_test.c	/^	int32_t out_buf[512];$/;"	l
out_buf_len	libfoxenflac/examples/flac_decoder.c	/^		uint32_t out_buf_len = 512;$/;"	l
out_buf_len	libfoxenflac/test/test_flac_integration.c	/^		uint32_t out_buf_len = sizeof(out_buf) \/ sizeof(out_buf[0]);$/;"	l
out_buf_len	unit_test/unit_test.c	/^		uint32_t out_buf_len = 512;$/;"	l
out_len	libfoxenflac/test/test_flac.c	/^		uint32_t out_len = samplewise ? 1U : 512U;$/;"	l
out_len_	libfoxenflac/foxen/flac.c	/^	uint32_t out_len_ = 0U;$/;"	l
out_ptr	libfoxenflac/test/test_flac.c	/^	uint32_t out_ptr = 0U;$/;"	l
output_adj	../sub/audio/audio_types.h	/^    int16_t *output_adj;$/;"	m	struct:__anon20
output_adj	unit_test/mocks/include/audio_types.h	/^    int16_t *output_adj;$/;"	m	struct:__anon8
output_config	../sub/audio/audio_types.h	/^    AudioOutputConfig *output_config;$/;"	m	struct:__anon20
output_config	unit_test/mocks/include/audio_types.h	/^    AudioOutputConfig *output_config;$/;"	m	struct:__anon8
owner	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  osThreadId_t owner;$/;"	l
p	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^    void                          *p;   \/\/\/< message or mail as void pointer$/;"	m	union:__anon8::__anon9
p	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  const char *p;$/;"	l
p	../peripherals/memory/sha-256.c	/^		const uint8_t *p = chunk;$/;"	l
p	../peripherals/memory/sha-256.c	/^	const uint8_t * p;$/;"	m	struct:buffer_state	file:
pFLatency	../Core/Src/stm32f4xx_hal_timebase_tim.c	/^  uint32_t              pFLatency;$/;"	l
p_callback	api/audio_clip.c	/^static void (*p_callback)(void *context);$/;"	v	file:
padding	libfoxenflac/foxen/flac.c	/^			uint8_t padding = READ_BITS_FAST_CRC(1U);$/;"	l
partition_cur	libfoxenflac/foxen/flac.c	/^	uint16_t partition_cur;$/;"	m	struct:fx_flac	file:
partition_sample	libfoxenflac/foxen/flac.c	/^	uint16_t partition_sample;$/;"	m	struct:fx_flac	file:
pbPressEnable_clock	../sub/powerui/powerui_types.h	/^    TimerHandle_t pbPressEnable_clock;$/;"	m	struct:__anon11
pbPressTimer_clock	../sub/powerui/powerui_types.h	/^    TimerHandle_t pbPressTimer_clock;$/;"	m	struct:__anon11
pb_laststate	../statemachine/statemachine_types.h	/^    PBStatus pb_laststate;$/;"	m	struct:__anon5
pb_pin	../sub/powerui/powerui_types.h	/^    uint16_t pb_pin;$/;"	m	struct:__anon11
pb_port	../sub/powerui/powerui_types.h	/^    GPIO_TypeDef *pb_port;$/;"	m	struct:__anon11
pb_status	../sub/powerui/powerui_types.h	/^    PBStatus pb_status;$/;"	m	struct:__anon11
pcHead	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	int8_t *pcHead;					\/*< Points to the beginning of the queue storage area. *\/$/;"	m	struct:QueueDefinition	file:
pcName	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	const char * const pcName;	\/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	m	struct:xTASK_PARAMETERS
pcOriginalReadPosition	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^int8_t *pcOriginalReadPosition;$/;"	l
pcQueueGetName	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define pcQueueGetName(/;"	d
pcQueueGetName	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^			#define pcQueueGetName	/;"	d
pcQueueGetName	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	const char *pcQueueGetName( QueueHandle_t xQueue ) \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	f
pcQueueGetQueueName	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define pcQueueGetQueueName /;"	d
pcQueueName	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^		const char *pcQueueName; \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	m	struct:QUEUE_REGISTRY_ITEM	file:
pcReadFrom	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	int8_t *pcReadFrom;				\/*< Points to the last place that a queued item was read from when the structure is used as a queue. *\/$/;"	m	struct:QueuePointers	file:
pcReturn	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	const char *pcReturn = NULL; \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	l
pcTail	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	int8_t *pcTail;					\/*< Points to the byte at the end of the queue storage area.  Once more byte is allocated than necessary to store the queue items, this is used as a marker. *\/$/;"	m	struct:QueuePointers	file:
pcTaskGetName	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define pcTaskGetName	/;"	d
pcTaskGetName	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^char *pcTaskGetName( TaskHandle_t xTaskToQuery ) \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	f
pcTaskGetTaskName	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define pcTaskGetTaskName /;"	d
pcTaskName	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	const char *pcTaskName;			\/* A pointer to the task's name.  This value will be invalid if the task was deleted since the structure was populated! *\/ \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	m	struct:xTASK_STATUS
pcTaskName	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	char				pcTaskName[ configMAX_TASK_NAME_LEN ];\/*< Descriptive name given to the task when created.  Facilitates debugging only. *\/ \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	m	struct:tskTaskControlBlock	file:
pcTimerGetName	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define pcTimerGetName	/;"	d
pcTimerGetName	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^const char * pcTimerGetName( TimerHandle_t xTimer ) \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	f
pcTimerGetTimerName	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define pcTimerGetTimerName /;"	d
pcTimerName	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	const char				*pcTimerName;		\/*<< Text name.  This is not used by the kernel, it is included simply to make debugging easier. *\/ \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	m	struct:tmrTimerControl	file:
pcWriteTo	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	int8_t *pcWriteTo;				\/*< Points to the free next place in the storage area. *\/$/;"	m	struct:QueueDefinition	file:
pdBIG_ENDIAN	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define pdBIG_ENDIAN	/;"	d
pdFAIL	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define pdFAIL	/;"	d
pdFALSE	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define pdFALSE	/;"	d
pdFREERTOS_BIG_ENDIAN	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define pdFREERTOS_BIG_ENDIAN	/;"	d
pdFREERTOS_ERRNO_EACCES	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EACCES	/;"	d
pdFREERTOS_ERRNO_EADDRINUSE	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EADDRINUSE	/;"	d
pdFREERTOS_ERRNO_EADDRNOTAVAIL	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EADDRNOTAVAIL /;"	d
pdFREERTOS_ERRNO_EAGAIN	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EAGAIN	/;"	d
pdFREERTOS_ERRNO_EALREADY	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EALREADY	/;"	d
pdFREERTOS_ERRNO_EBADE	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EBADE	/;"	d
pdFREERTOS_ERRNO_EBADF	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EBADF	/;"	d
pdFREERTOS_ERRNO_EBUSY	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EBUSY	/;"	d
pdFREERTOS_ERRNO_ECANCELED	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_ECANCELED	/;"	d
pdFREERTOS_ERRNO_EEXIST	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EEXIST	/;"	d
pdFREERTOS_ERRNO_EFAULT	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EFAULT	/;"	d
pdFREERTOS_ERRNO_EFTYPE	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EFTYPE	/;"	d
pdFREERTOS_ERRNO_EILSEQ	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EILSEQ	/;"	d
pdFREERTOS_ERRNO_EINPROGRESS	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EINPROGRESS	/;"	d
pdFREERTOS_ERRNO_EINTR	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EINTR	/;"	d
pdFREERTOS_ERRNO_EINVAL	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EINVAL	/;"	d
pdFREERTOS_ERRNO_EIO	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EIO	/;"	d
pdFREERTOS_ERRNO_EISCONN	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EISCONN	/;"	d
pdFREERTOS_ERRNO_EISDIR	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EISDIR	/;"	d
pdFREERTOS_ERRNO_ENAMETOOLONG	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_ENAMETOOLONG /;"	d
pdFREERTOS_ERRNO_ENMFILE	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_ENMFILE	/;"	d
pdFREERTOS_ERRNO_ENOBUFS	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_ENOBUFS	/;"	d
pdFREERTOS_ERRNO_ENODEV	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_ENODEV	/;"	d
pdFREERTOS_ERRNO_ENOENT	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_ENOENT	/;"	d
pdFREERTOS_ERRNO_ENOMEDIUM	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_ENOMEDIUM	/;"	d
pdFREERTOS_ERRNO_ENOMEM	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_ENOMEM	/;"	d
pdFREERTOS_ERRNO_ENOPROTOOPT	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_ENOPROTOOPT	/;"	d
pdFREERTOS_ERRNO_ENOSPC	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_ENOSPC	/;"	d
pdFREERTOS_ERRNO_ENOTCONN	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_ENOTCONN	/;"	d
pdFREERTOS_ERRNO_ENOTDIR	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_ENOTDIR	/;"	d
pdFREERTOS_ERRNO_ENOTEMPTY	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_ENOTEMPTY	/;"	d
pdFREERTOS_ERRNO_ENXIO	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_ENXIO	/;"	d
pdFREERTOS_ERRNO_EOPNOTSUPP	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EOPNOTSUPP	/;"	d
pdFREERTOS_ERRNO_EROFS	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EROFS	/;"	d
pdFREERTOS_ERRNO_ESPIPE	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_ESPIPE	/;"	d
pdFREERTOS_ERRNO_ETIMEDOUT	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_ETIMEDOUT	/;"	d
pdFREERTOS_ERRNO_EUNATCH	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EUNATCH	/;"	d
pdFREERTOS_ERRNO_EWOULDBLOCK	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EWOULDBLOCK	/;"	d
pdFREERTOS_ERRNO_EXDEV	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define	pdFREERTOS_ERRNO_EXDEV	/;"	d
pdFREERTOS_ERRNO_NONE	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define pdFREERTOS_ERRNO_NONE	/;"	d
pdFREERTOS_LITTLE_ENDIAN	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define pdFREERTOS_LITTLE_ENDIAN	/;"	d
pdINTEGRITY_CHECK_VALUE	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^	#define pdINTEGRITY_CHECK_VALUE /;"	d
pdLITTLE_ENDIAN	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define pdLITTLE_ENDIAN	/;"	d
pdMS_TO_TICKS	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^	#define pdMS_TO_TICKS(/;"	d
pdPASS	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define pdPASS	/;"	d
pdTASK_CODE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define pdTASK_CODE /;"	d
pdTASK_HOOK_CODE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define pdTASK_HOOK_CODE /;"	d
pdTRUE	../Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h	/^#define pdTRUE	/;"	d
peri	../sub/audio/audio_types.h	/^    PeriObject *peri;$/;"	m	struct:__anon20
peri	../sub/powerui/powerui_types.h	/^    PeriObject *peri;$/;"	m	struct:__anon11
periph_index	../peripherals/i2s/i2s_peri.h	/^	uint8_t periph_index; \/\/ TODO: use I2SObject with wrp_i2s$/;"	m	struct:__anon13
periph_index	../peripherals/spi/spi_peri.c	/^	uint8_t periph_index;$/;"	l
periph_index	../peripherals/spi/spi_peri.h	/^	uint8_t periph_index;$/;"	m	struct:__anon9
peripherals	../statemachine/statemachine_types.h	/^    PeriObject peripherals;$/;"	m	struct:__anon5
playing	../peripherals/i2s/i2s_peri.h	/^	bool playing;$/;"	m	struct:__anon13
pllm	../Core/Src/system_stm32f4xx.c	/^  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;$/;"	l
pllp	../Core/Src/system_stm32f4xx.c	/^  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;$/;"	l
pllsource	../Core/Src/system_stm32f4xx.c	/^  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;$/;"	l
pllvco	../Core/Src/system_stm32f4xx.c	/^  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;$/;"	l
pmic_port	../sub/powerui/powerui_types.h	/^    GPIO_TypeDef *pmic_port;$/;"	m	struct:__anon11
pool	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  void                         *pool;   \/\/\/< memory array for mail$/;"	m	struct:os_mailQ_def
pool	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  void                         *pool;   \/\/\/< memory array for messages$/;"	m	struct:os_messageQ_def
pool	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  void                         *pool;   \/\/\/< pointer to memory for pool$/;"	m	struct:os_pool_def
pool_sz	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  uint32_t                   pool_sz;   \/\/\/< number of items (elements) in the pool$/;"	m	struct:os_pool_def
portALLOCATE_SECURE_CONTEXT	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portALLOCATE_SECURE_CONTEXT(/;"	d
portARCH_NAME	../Middlewares/Third_Party/FreeRTOS/Source/include/portable.h	/^	#define portARCH_NAME /;"	d
portASSERT_IF_INTERRUPT_PRIORITY_INVALID	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID(/;"	d
portASSERT_IF_IN_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portASSERT_IF_IN_ISR(/;"	d
portBYTE_ALIGNMENT_MASK	../Middlewares/Third_Party/FreeRTOS/Source/include/portable.h	/^	#define portBYTE_ALIGNMENT_MASK	/;"	d
portBYTE_ALIGNMENT_MASK	../Middlewares/Third_Party/FreeRTOS/Source/include/portable.h	/^	#define portBYTE_ALIGNMENT_MASK /;"	d
portCLEAN_UP_TCB	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portCLEAN_UP_TCB(/;"	d
portCLEAR_INTERRUPT_MASK_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portCLEAR_INTERRUPT_MASK_FROM_ISR(/;"	d
portCONFIGURE_TIMER_FOR_RUN_TIME_STATS	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portCONFIGURE_TIMER_FOR_RUN_TIME_STATS(/;"	d
portCRITICAL_NESTING_IN_TCB	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portCRITICAL_NESTING_IN_TCB /;"	d
portDONT_DISCARD	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portDONT_DISCARD$/;"	d
portHAS_STACK_OVERFLOW_CHECKING	../Middlewares/Third_Party/FreeRTOS/Source/include/portable.h	/^	#define portHAS_STACK_OVERFLOW_CHECKING /;"	d
portMEMORY_BARRIER	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portMEMORY_BARRIER(/;"	d
portNUM_CONFIGURABLE_REGIONS	../Middlewares/Third_Party/FreeRTOS/Source/include/portable.h	/^	#define portNUM_CONFIGURABLE_REGIONS /;"	d
portPOINTER_SIZE_TYPE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portPOINTER_SIZE_TYPE /;"	d
portPRE_TASK_DELETE_HOOK	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portPRE_TASK_DELETE_HOOK(/;"	d
portPRIVILEGE_BIT	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portPRIVILEGE_BIT /;"	d
portRESET_READY_PRIORITY	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	#define portRESET_READY_PRIORITY(/;"	d	file:
portSETUP_TCB	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portSETUP_TCB(/;"	d
portSET_INTERRUPT_MASK_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portSET_INTERRUPT_MASK_FROM_ISR(/;"	d
portSUPPRESS_TICKS_AND_SLEEP	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portSUPPRESS_TICKS_AND_SLEEP(/;"	d
portTASK_FUNCTION	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^static portTASK_FUNCTION( prvIdleTask, pvParameters )$/;"	f	file:
portTASK_FUNCTION	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^static portTASK_FUNCTION( prvTimerTask, pvParameters )$/;"	f	file:
portTASK_FUNCTION_PROTO	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );$/;"	p	file:
portTASK_FUNCTION_PROTO	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^static portTASK_FUNCTION_PROTO( prvTimerTask, pvParameters ) PRIVILEGED_FUNCTION;$/;"	p	file:
portTASK_USES_FLOATING_POINT	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portTASK_USES_FLOATING_POINT(/;"	d
portTICK_RATE_MS	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portTICK_RATE_MS /;"	d
portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR(/;"	d
portTICK_TYPE_ENTER_CRITICAL	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portTICK_TYPE_ENTER_CRITICAL(/;"	d
portTICK_TYPE_EXIT_CRITICAL	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portTICK_TYPE_EXIT_CRITICAL(/;"	d
portTICK_TYPE_IS_ATOMIC	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portTICK_TYPE_IS_ATOMIC /;"	d
portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR(/;"	d
portTickType	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portTickType /;"	d
portUSING_MPU_WRAPPERS	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^	#define portUSING_MPU_WRAPPERS /;"	d
portYIELD_WITHIN_API	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define portYIELD_WITHIN_API /;"	d
power	../statemachine/statemachine_types.h	/^    PowerUIState power;$/;"	m	struct:__anon5
power_cmd	../sub/powerui/powerui.c	/^    PowerUICmd power_cmd;$/;"	l
poweruiChkSOC	../sub/powerui/powerui.c	/^int8_t poweruiChkSOC(PowerUIState *state)$/;"	f
poweruiChkSOC	../sub/powerui/powerui.h	/^int8_t poweruiChkSOC(PowerUIState *state);$/;"	p
poweruiInit	../sub/powerui/powerui.c	/^void poweruiInit(PowerUIState *state, int priority, PeriObject *peri,$/;"	f
poweruiInit	../sub/powerui/powerui.h	/^void poweruiInit(PowerUIState *state, int priority, PeriObject *peri,$/;"	p
poweruiLoadDefaultsToNVS	../sub/powerui/powerui.c	/^bool poweruiLoadDefaultsToNVS(PowerUIState *state)$/;"	f
poweruiLoadDefaultsToNVS	../sub/powerui/powerui.c	/^static bool poweruiLoadDefaultsToNVS(PowerUIState *state);$/;"	p	file:
powerui_bq_ChargingCheck	../sub/powerui/powerui_pmic.c	/^bool powerui_bq_ChargingCheck(PowerUIState *state)$/;"	f
powerui_bq_ChargingCheck	../sub/powerui/powerui_pmic.h	/^bool powerui_bq_ChargingCheck(PowerUIState *state);$/;"	p
powerui_bq_ChipDisable	../sub/powerui/powerui_pmic.c	/^void powerui_bq_ChipDisable(PowerUIState *state)$/;"	f
powerui_bq_ChipDisable	../sub/powerui/powerui_pmic.h	/^void powerui_bq_ChipDisable(PowerUIState *state);$/;"	p
powerui_bq_ChipEnable	../sub/powerui/powerui_pmic.c	/^void powerui_bq_ChipEnable(PowerUIState *state)$/;"	f
powerui_bq_ChipEnable	../sub/powerui/powerui_pmic.h	/^void powerui_bq_ChipEnable(PowerUIState *state);$/;"	p
powerui_bq_EnterShipMode	../sub/powerui/powerui.c	/^bool powerui_bq_EnterShipMode(PowerUIState *state, PowerUICmd *cmd)$/;"	f
powerui_bq_EnterShipMode	../sub/powerui/powerui.c	/^static bool powerui_bq_EnterShipMode(PowerUIState *state, PowerUICmd *cmd);$/;"	p	file:
powerui_bq_LDODisable	../sub/powerui/powerui.c	/^bool powerui_bq_LDODisable(PowerUIState *state, PowerUICmd *cmd)$/;"	f
powerui_bq_LDODisable	../sub/powerui/powerui.c	/^static bool powerui_bq_LDODisable(PowerUIState *state, PowerUICmd *cmd);$/;"	p	file:
powerui_bq_LDOEnable	../sub/powerui/powerui.c	/^bool powerui_bq_LDOEnable(PowerUIState *state, PowerUICmd *cmd)$/;"	f
powerui_bq_LDOEnable	../sub/powerui/powerui.c	/^static bool powerui_bq_LDOEnable(PowerUIState *state, PowerUICmd *cmd);$/;"	p	file:
powerui_bq_findSOC	../sub/powerui/powerui_pmic.c	/^int8_t powerui_bq_findSOC(PowerUIState *state)$/;"	f
powerui_bq_findSOC	../sub/powerui/powerui_pmic.c	/^static int8_t powerui_bq_findSOC(PowerUIState *state);$/;"	p	file:
powerui_bq_read_address	../sub/powerui/powerui_pmic.c	/^bool powerui_bq_read_address(PowerUIState *state,$/;"	f
powerui_bq_read_address	../sub/powerui/powerui_pmic.h	/^bool powerui_bq_read_address(PowerUIState *state, uint8_t addr, uint8_t *data);$/;"	p
powerui_bq_update	../sub/powerui/powerui.h	/^void powerui_bq_update(PowerUIState *state);$/;"	p
powerui_bq_update	../sub/powerui/powerui_pmic.c	/^void powerui_bq_update(PowerUIState *state)$/;"	f
powerui_bq_write_address	../sub/powerui/powerui_pmic.c	/^bool powerui_bq_write_address(PowerUIState *state,$/;"	f
powerui_bq_write_address	../sub/powerui/powerui_pmic.h	/^bool powerui_bq_write_address(PowerUIState *state, uint8_t addr, uint8_t data);$/;"	p
powerui_frame_callback	../sub/powerui/powerui_frame.c	/^void powerui_frame_callback(PowerUIState *state)$/;"	f
powerui_frame_callback	../sub/powerui/powerui_frame.h	/^void powerui_frame_callback(PowerUIState *state);$/;"	p
powerui_frame_pollstate	../sub/powerui/powerui_frame.c	/^FrameStatus powerui_frame_pollstate(PowerUIState *state)$/;"	f
powerui_frame_pollstate	../sub/powerui/powerui_frame.h	/^FrameStatus powerui_frame_pollstate(PowerUIState *state);$/;"	p
powerui_frame_statuschanged	../sub/powerui/powerui_frame.c	/^bool powerui_frame_statuschanged(PowerUIState *state)$/;"	f
powerui_frame_statuschanged	../sub/powerui/powerui_frame.h	/^bool powerui_frame_statuschanged(PowerUIState *state);$/;"	p
powerui_frame_update	../sub/powerui/powerui_frame.c	/^void powerui_frame_update(PowerUIState *state)$/;"	f
powerui_frame_update	../sub/powerui/powerui_frame.h	/^void powerui_frame_update(PowerUIState *state);$/;"	p
powerui_framedebounce_clockfn	../sub/powerui/powerui_frame.c	/^void powerui_framedebounce_clockfn(TimerHandle_t xTimer)$/;"	f
powerui_framedebounce_clockfn	../sub/powerui/powerui_frame.h	/^void powerui_framedebounce_clockfn(TimerHandle_t xTimer);$/;"	p
powerui_init	../sub/powerui/powerui.c	/^bool powerui_init(PowerUIState *state, PowerUICmd *cmd)$/;"	f
powerui_init	../sub/powerui/powerui.c	/^static bool powerui_init(PowerUIState *state, PowerUICmd *cmd);$/;"	p	file:
powerui_led_read_buff	../sub/powerui/powerui.c	/^uint8_t powerui_led_read_buff[PWRUI_I2C_RWSIZE];$/;"	v
powerui_led_write_buff	../sub/powerui/powerui.c	/^uint8_t powerui_led_write_buff[PWRUI_I2C_RWSIZE];$/;"	v
powerui_ledtimer_clockfn	../sub/powerui/powerui_led.c	/^void powerui_ledtimer_clockfn(TimerHandle_t xTimer)$/;"	f
powerui_ledtimer_clockfn	../sub/powerui/powerui_led.h	/^void powerui_ledtimer_clockfn(TimerHandle_t xTimer);$/;"	p
powerui_ls_Disable	../sub/powerui/powerui.c	/^bool powerui_ls_Disable(PowerUIState *state, PowerUICmd *cmd)$/;"	f
powerui_ls_Disable	../sub/powerui/powerui.c	/^static bool powerui_ls_Disable(PowerUIState *state, PowerUICmd *cmd);$/;"	p	file:
powerui_ls_Enable	../sub/powerui/powerui.c	/^bool powerui_ls_Enable(PowerUIState *state, PowerUICmd *cmd)$/;"	f
powerui_ls_Enable	../sub/powerui/powerui.c	/^static bool powerui_ls_Enable(PowerUIState *state, PowerUICmd *cmd);$/;"	p	file:
powerui_ncp_ChargeStart	../sub/powerui/powerui.c	/^bool powerui_ncp_ChargeStart(PowerUIState *state, PowerUICmd *cmd)$/;"	f
powerui_ncp_ChargeStart	../sub/powerui/powerui.c	/^static bool powerui_ncp_ChargeStart(PowerUIState *state, PowerUICmd *cmd);$/;"	p	file:
powerui_ncp_LEDOff	../sub/powerui/powerui.c	/^bool powerui_ncp_LEDOff(PowerUIState *state, PowerUICmd *cmd)$/;"	f
powerui_ncp_LEDOff	../sub/powerui/powerui.c	/^static bool powerui_ncp_LEDOff(PowerUIState *state, PowerUICmd *cmd);$/;"	p	file:
powerui_ncp_LowbatStart	../sub/powerui/powerui.c	/^bool powerui_ncp_LowbatStart(PowerUIState *state, PowerUICmd *cmd)$/;"	f
powerui_ncp_LowbatStart	../sub/powerui/powerui.c	/^static bool powerui_ncp_LowbatStart(PowerUIState *state, PowerUICmd *cmd);$/;"	p	file:
powerui_ncp_PairStart	../sub/powerui/powerui.c	/^bool powerui_ncp_PairStart(PowerUIState *state, PowerUICmd *cmd)$/;"	f
powerui_ncp_PairStart	../sub/powerui/powerui.c	/^static bool powerui_ncp_PairStart(PowerUIState *state, PowerUICmd *cmd);$/;"	p	file:
powerui_ncp_currentstep	../sub/powerui/powerui_led.c	/^bool powerui_ncp_currentstep(PowerUIState *state, uint8_t step)$/;"	f
powerui_ncp_currentstep	../sub/powerui/powerui_led.h	/^bool powerui_ncp_currentstep(PowerUIState *state, uint8_t step);$/;"	p
powerui_ncp_ledpwm	../sub/powerui/powerui_led.c	/^bool powerui_ncp_ledpwm(PowerUIState *state, uint8_t ledch, uint8_t pwm)$/;"	f
powerui_ncp_ledpwm	../sub/powerui/powerui_led.c	/^static bool powerui_ncp_ledpwm(PowerUIState *state, uint8_t ledch, uint8_t pwm);$/;"	p	file:
powerui_ncp_setanimationtimer	../sub/powerui/powerui_led.c	/^bool powerui_ncp_setanimationtimer(PowerUIState *state, LEDAnim *anim)$/;"	f
powerui_ncp_setanimationtimer	../sub/powerui/powerui_led.c	/^static bool powerui_ncp_setanimationtimer(PowerUIState *state, LEDAnim *anim);$/;"	p	file:
powerui_ncp_setseq	../sub/powerui/powerui_led.c	/^bool powerui_ncp_setseq(PowerUIState *state, LEDAnimState dir, LEDAnim *anim)$/;"	f
powerui_ncp_setseq	../sub/powerui/powerui_led.c	/^static bool powerui_ncp_setseq(PowerUIState *state, LEDAnimState dir, LEDAnim *anim);$/;"	p	file:
powerui_ncp_shutdown	../sub/powerui/powerui_led.c	/^bool powerui_ncp_shutdown(PowerUIState *state)$/;"	f
powerui_ncp_shutdown	../sub/powerui/powerui_led.h	/^bool powerui_ncp_shutdown(PowerUIState *state);$/;"	p
powerui_ncp_startanimation	../sub/powerui/powerui_led.c	/^bool powerui_ncp_startanimation(PowerUIState *state, LEDAnim *anim)$/;"	f
powerui_ncp_startanimation	../sub/powerui/powerui_led.h	/^bool powerui_ncp_startanimation(PowerUIState *state, LEDAnim *anim);$/;"	p
powerui_ncp_write_address	../sub/powerui/powerui_led.c	/^bool powerui_ncp_write_address(PowerUIState *state,$/;"	f
powerui_ncp_write_address	../sub/powerui/powerui_led.c	/^static bool powerui_ncp_write_address(PowerUIState *state, uint8_t addr, uint8_t data);$/;"	p	file:
powerui_pb_callback	../sub/powerui/powerui_pb.c	/^void powerui_pb_callback(PowerUIState *state)$/;"	f
powerui_pb_callback	../sub/powerui/powerui_pb.h	/^void powerui_pb_callback(PowerUIState *state);$/;"	p
powerui_pb_pollstate	../sub/powerui/powerui_pb.c	/^PBStatus powerui_pb_pollstate(PowerUIState *state)$/;"	f
powerui_pb_pollstate	../sub/powerui/powerui_pb.h	/^PBStatus powerui_pb_pollstate(PowerUIState *state);$/;"	p
powerui_pbenable_clockfn	../sub/powerui/powerui_pb.c	/^void powerui_pbenable_clockfn(TimerHandle_t xTimer)$/;"	f
powerui_pbenable_clockfn	../sub/powerui/powerui_pb.h	/^void powerui_pbenable_clockfn(TimerHandle_t xTimer);$/;"	p
powerui_pbtimer_clockfn	../sub/powerui/powerui_pb.c	/^void powerui_pbtimer_clockfn(TimerHandle_t xTimer)$/;"	f
powerui_pbtimer_clockfn	../sub/powerui/powerui_pb.h	/^void powerui_pbtimer_clockfn(TimerHandle_t xTimer);$/;"	p
powerui_pmic_read_buff	../sub/powerui/powerui.c	/^uint8_t powerui_pmic_read_buff[PWRUI_I2C_RWSIZE];$/;"	v
powerui_pmic_write_buff	../sub/powerui/powerui.c	/^uint8_t powerui_pmic_write_buff[PWRUI_I2C_RWSIZE];$/;"	v
powerui_post_cmd	../sub/powerui/powerui.c	/^void powerui_post_cmd(PowerUIState *state, PowerUICmdType cmd, SemaphoreHandle_t *sem)$/;"	f
powerui_post_cmd	../sub/powerui/powerui.h	/^void powerui_post_cmd(PowerUIState *state, PowerUICmdType cmd, SemaphoreHandle_t *sem);$/;"	p
powerui_post_cmdwait	../sub/powerui/powerui.c	/^bool powerui_post_cmdwait(PowerUIState *state, PowerUICmdType cmd, SemaphoreHandle_t *sem, uint32_t waitcnt)$/;"	f
powerui_post_cmdwait	../sub/powerui/powerui.h	/^bool powerui_post_cmdwait(PowerUIState *state, PowerUICmdType cmd, SemaphoreHandle_t *sem, uint32_t waitcnt);$/;"	p
powerui_task_commands	../sub/powerui/powerui.c	/^static void powerui_task_commands(void *arg);$/;"	p	file:
powerui_task_commands	../sub/powerui/powerui.c	/^void powerui_task_commands(void *arg)$/;"	f
prec	libfoxenflac/foxen/flac.c	/^			const uint8_t prec = READ_BITS_FAST_CRC(4U);$/;"	l
prev_heap_end	../Core/Src/sysmem.c	/^	char *prev_heap_end;$/;"	l
prio	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  UBaseType_t prio;$/;"	l
prio	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  osPriority_t prio;$/;"	l
priority	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  osPriority_t              priority;   \/\/\/< initial thread priority (default: osPriorityNormal)$/;"	m	struct:__anon17
priv_state	libfoxenflac/foxen/flac.c	/^	fx_flac_private_state_t priv_state;$/;"	m	struct:fx_flac	file:
progress	libfoxenflac/test/test_flac_integration.c	/^static void progress(fx_flac_t *flac, const char *fmt, uint64_t smpl_idx) {$/;"	f	file:
prvAddCoRoutineToReadyQueue	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^#define prvAddCoRoutineToReadyQueue(/;"	d	file:
prvAddCurrentTaskToDelayedList	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )$/;"	f	file:
prvAddNewTaskToReadyList	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )$/;"	f	file:
prvAddTaskToReadyList	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^#define prvAddTaskToReadyList(/;"	d	file:
prvBytesInBuffer	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^static size_t prvBytesInBuffer( const StreamBuffer_t * const pxStreamBuffer )$/;"	f	file:
prvCheckDelayedList	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^static void prvCheckDelayedList( void )$/;"	f	file:
prvCheckDelayedList	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^static void prvCheckDelayedList( void );$/;"	p	file:
prvCheckForValidListAndQueue	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^static void prvCheckForValidListAndQueue( void )$/;"	f	file:
prvCheckPendingReadyList	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^static void prvCheckPendingReadyList( void )$/;"	f	file:
prvCheckPendingReadyList	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^static void prvCheckPendingReadyList( void );$/;"	p	file:
prvCheckTasksWaitingTermination	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^static void prvCheckTasksWaitingTermination( void )$/;"	f	file:
prvCopyDataFromQueue	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )$/;"	f	file:
prvCopyDataToQueue	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );$/;"	p	file:
prvCopyDataToQueue	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )$/;"	f	file:
prvDeleteTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	static void prvDeleteTCB( TCB_t *pxTCB )$/;"	f	file:
prvGetDisinheritPriorityAfterTimeout	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )$/;"	f	file:
prvGetExpectedIdleTime	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	static TickType_t prvGetExpectedIdleTime( void )$/;"	f	file:
prvGetNextExpireTime	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )$/;"	f	file:
prvGetTCBFromHandle	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^#define prvGetTCBFromHandle(/;"	d	file:
prvHeapInit	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^static void prvHeapInit( void )$/;"	f	file:
prvHeapInit	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^static void prvHeapInit( void );$/;"	p	file:
prvInitialiseCoRoutineLists	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^static void prvInitialiseCoRoutineLists( void )$/;"	f	file:
prvInitialiseCoRoutineLists	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^static void prvInitialiseCoRoutineLists( void );$/;"	p	file:
prvInitialiseMutex	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	static void prvInitialiseMutex( Queue_t *pxNewQueue )$/;"	f	file:
prvInitialiseNewQueue	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, const uint8_t ucQueueType, Queue_t *pxNewQueue )$/;"	f	file:
prvInitialiseNewStreamBuffer	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^static void prvInitialiseNewStreamBuffer( StreamBuffer_t * const pxStreamBuffer,$/;"	f	file:
prvInitialiseNewTask	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,$/;"	f	file:
prvInitialiseNewTimer	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^static void prvInitialiseNewTimer(	const char * const pcTimerName,			\/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	f	file:
prvInitialiseTaskLists	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^static void prvInitialiseTaskLists( void )$/;"	f	file:
prvInsertBlockIntoFreeList	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )$/;"	f	file:
prvInsertBlockIntoFreeList	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert );$/;"	p	file:
prvInsertTimerInActiveList	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiryTime, const TickType_t xTimeNow, const TickType_t xCommandTime )$/;"	f	file:
prvIsQueueEmpty	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )$/;"	f	file:
prvIsQueueFull	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )$/;"	f	file:
prvListTasksWithinSingleList	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, eTaskState eState )$/;"	f	file:
prvLockQueue	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^#define prvLockQueue(/;"	d	file:
prvNotifyQueueSetContainer	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCopyPosition )$/;"	f	file:
prvProcessExpiredTimer	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )$/;"	f	file:
prvProcessReceivedCommands	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^static void	prvProcessReceivedCommands( void )$/;"	f	file:
prvProcessTimerOrBlockTask	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty )$/;"	f	file:
prvReadBytesFromBuffer	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^static size_t prvReadBytesFromBuffer( StreamBuffer_t *pxStreamBuffer, uint8_t *pucData, size_t xMaxCount, size_t xBytesAvailable )$/;"	f	file:
prvReadMessageFromBuffer	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^static size_t prvReadMessageFromBuffer( StreamBuffer_t *pxStreamBuffer,$/;"	f	file:
prvResetNextTaskUnblockTime	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^static void prvResetNextTaskUnblockTime( void )$/;"	f	file:
prvResetNextTaskUnblockTime	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^static void prvResetNextTaskUnblockTime( void );$/;"	p	file:
prvSampleTimeNow	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )$/;"	f	file:
prvSearchForNameWithinSingleList	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )$/;"	f	file:
prvSwitchTimerLists	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^static void prvSwitchTimerLists( void )$/;"	f	file:
prvTaskCheckFreeStackSpace	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )$/;"	f	file:
prvTaskIsTaskSuspended	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )$/;"	f	file:
prvTestWaitCondition	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxBitsToWaitFor, const BaseType_t xWaitForAllBits )$/;"	f	file:
prvUnlockQueue	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^static void prvUnlockQueue( Queue_t * const pxQueue )$/;"	f	file:
prvWriteBytesToBuffer	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^static size_t prvWriteBytesToBuffer( StreamBuffer_t * const pxStreamBuffer, const uint8_t *pucData, size_t xCount )$/;"	f	file:
prvWriteMessageToBuffer	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^static size_t prvWriteMessageToBuffer( StreamBuffer_t * const pxStreamBuffer,$/;"	f	file:
prvWriteNameToBuffer	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )$/;"	f	file:
pthread	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  os_pthread                 pthread;   \/\/\/< start address of thread function$/;"	m	struct:os_thread_def
ptimer	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  os_ptimer                   ptimer;   \/\/\/< start address of a timer function$/;"	m	struct:os_timer_def
ptr	unit_test/clips/clip.h	/^	const char *ptr;$/;"	m	struct:clip_handle
puc	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^uint8_t *puc = ( uint8_t * ) pv;$/;"	l
puc	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^uint8_t *puc;$/;"	l
pucAlignedHeap	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^uint8_t *pucAlignedHeap;$/;"	l
pucAllocatedMemory	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	uint8_t *pucAllocatedMemory;$/;"	l
pucBuffer	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^		configASSERT( memset( pucBuffer, ( int ) xWriteValue, xBufferSizeBytes ) == pucBuffer );$/;"	l
pucBuffer	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	uint8_t *pucBuffer;					\/* Points to the buffer itself - that is - the RAM that stores the data passed through the buffer. *\/$/;"	m	struct:StreamBufferDef_t	file:
pucEndOfStack	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	uint8_t *pucEndOfStack;$/;"	l
pucQueueStorage	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	uint8_t *pucQueueStorage;$/;"	l
pucStartAddress	../Middlewares/Third_Party/FreeRTOS/Source/include/portable.h	/^	uint8_t *pucStartAddress;$/;"	m	struct:HeapRegion
puxStackBuffer	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	StackType_t *puxStackBuffer;$/;"	m	struct:xTASK_PARAMETERS
pvBaseAddress	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	void *pvBaseAddress;$/;"	m	struct:xMEMORY_REGION
pvDummy1	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	void				*pvDummy1;$/;"	m	struct:xSTATIC_TIMER
pvDummy1	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	void *pvDummy1[ 3 ];$/;"	m	struct:xSTATIC_QUEUE
pvDummy15	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		void			*pvDummy15[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];$/;"	m	struct:xSTATIC_TCB
pvDummy2	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		void *pvDummy2;$/;"	m	union:xSTATIC_QUEUE::__anon4
pvDummy2	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	void * pvDummy2[ 3 ];$/;"	m	struct:xSTATIC_STREAM_BUFFER
pvDummy3	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	void *pvDummy3;$/;"	m	struct:xSTATIC_LIST
pvDummy3	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	void *pvDummy3[ 2 ];$/;"	m	struct:xSTATIC_MINI_LIST_ITEM
pvDummy3	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	void *pvDummy3[ 4 ];$/;"	m	struct:xSTATIC_LIST_ITEM
pvDummy5	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	void 				*pvDummy5;$/;"	m	struct:xSTATIC_TIMER
pvDummy6	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	TaskFunction_t		pvDummy6;$/;"	m	struct:xSTATIC_TIMER
pvDummy7	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		void *pvDummy7;$/;"	m	struct:xSTATIC_QUEUE
pvOwner	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	void * pvOwner;										\/*< Pointer to the object (normally a TCB) that contains the list item.  There is therefore a two way link between the object containing the list item and the list item itself. *\/$/;"	m	struct:xLIST_ITEM
pvParameter1	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	void *pvParameter1;						\/* << The value that will be used as the callback functions first parameter. *\/$/;"	m	struct:tmrCallbackParameters	file:
pvParameters	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	void *pvParameters;$/;"	m	struct:xTASK_PARAMETERS
pvPortMalloc	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^void *pvPortMalloc( size_t xWantedSize )$/;"	f
pvReturn	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^void *pvReturn = NULL;$/;"	l
pvReturn	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void *pvReturn = NULL;$/;"	l
pvReturn	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^void *pvReturn;$/;"	l
pvTaskCode	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	TaskFunction_t pvTaskCode;$/;"	m	struct:xTASK_PARAMETERS
pvTaskGetThreadLocalStoragePointer	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define pvTaskGetThreadLocalStoragePointer	/;"	d
pvTaskGetThreadLocalStoragePointer	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )$/;"	f
pvTaskIncrementMutexHeldCount	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TaskHandle_t pvTaskIncrementMutexHeldCount( void )$/;"	f
pvThreadLocalStoragePointers	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];$/;"	m	struct:tskTaskControlBlock	file:
pvTimerGetTimerID	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define pvTimerGetTimerID	/;"	d
pvTimerGetTimerID	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^void *pvTimerGetTimerID( const TimerHandle_t xTimer )$/;"	f
pvTimerID	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	void 					*pvTimerID;			\/*<< An ID to identify the timer.  This allows the timer to be identified when the same callback is used for multiple timers. *\/$/;"	m	struct:tmrTimerControl	file:
pwm	../sub/powerui/powerui_types.h	/^	uint8_t pwm;$/;"	m	struct:__anon7
pwr	../sub/audio/audio_types.h	/^	PowerUIState *pwr;              \/\/Power$/;"	m	struct:__anon20
pwr_i2c_trans	../sub/powerui/powerui_types.h	/^    I2cTransaction pwr_i2c_trans;$/;"	m	struct:__anon11
pxBlock	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;$/;"	l
pxCRCB	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^CRCB_t *pxCRCB;$/;"	l
pxCallback	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );$/;"	l
pxCallbackFunction	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	PendedFunction_t	pxCallbackFunction;	\/* << The callback function to execute. *\/$/;"	m	struct:tmrCallbackParameters	file:
pxCallbackFunction	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	TimerCallbackFunction_t	pxCallbackFunction;	\/*<< The function that will be called when the timer expires. *\/$/;"	m	struct:tmrTimerControl	file:
pxCoRoutine	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^CRCB_t *pxCoRoutine;$/;"	l
pxCoRoutineFunction	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^	crCOROUTINE_CODE 	pxCoRoutineFunction;$/;"	m	struct:corCoRoutineControlBlock
pxContainer	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define pxContainer /;"	d
pxContainer	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	struct xLIST * configLIST_VOLATILE pxContainer;		\/*< Pointer to the list in which this list item is placed (if any). *\/$/;"	m	struct:xLIST_ITEM	typeref:struct:xLIST_ITEM::configLIST_VOLATILE
pxCurrentCoRoutine	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^CRCB_t * pxCurrentCoRoutine = NULL;$/;"	v
pxCurrentTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;$/;"	v
pxCurrentTimerList	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^PRIVILEGED_DATA static List_t *pxCurrentTimerList = NULL;$/;"	v	file:
pxDelayedCoRoutineList	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^static List_t * pxDelayedCoRoutineList;									\/*< Points to the delayed co-routine list currently being used. *\/$/;"	v	file:
pxDelayedList	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	List_t const * pxStateList, *pxDelayedList, *pxOverflowedDelayedList;$/;"	l
pxDelayedTaskList	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList = NULL;				\/*< Points to the delayed task list currently being used. *\/$/;"	v	file:
pxDummy1	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	void				*pxDummy1;$/;"	m	struct:xSTATIC_TCB
pxDummy14	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		void			*pxDummy14;$/;"	m	struct:xSTATIC_TCB
pxDummy6	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	void				*pxDummy6;$/;"	m	struct:xSTATIC_TCB
pxDummy8	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		void			*pxDummy8;$/;"	m	struct:xSTATIC_TCB
pxEnd	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^static BlockLink_t xStart, *pxEnd = NULL;$/;"	v	file:
pxEndOfStack	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		StackType_t		*pxEndOfStack;		\/*< Points to the highest valid address for the stack. *\/$/;"	m	struct:tskTaskControlBlock	file:
pxEventBits	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^	EventGroup_t *pxEventBits;$/;"	l
pxEventBits	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^	EventGroup_t const *pxEventBits = ( EventGroup_t * ) xEventGroup; \/*lint !e9087 !e9079 EventGroupHandle_t is a pointer to an EventGroup_t, but EventGroupHandle_t is kept opaque outside of this file for data hiding purposes. *\/$/;"	l
pxEventBits	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^EventGroup_t *pxEventBits = xEventGroup;$/;"	l
pxEventBits	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^EventGroup_t const * const pxEventBits = xEventGroup;$/;"	l
pxFirstFreeBlock	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^BlockLink_t *pxFirstFreeBlock;$/;"	l
pxFirstTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;$/;"	l
pxFirstTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;$/;"	l
pxISR	../Middlewares/Third_Party/FreeRTOS/Source/include/deprecated_definitions.h	/^	typedef void ( __interrupt __far *pxISR )();$/;"	t
pxISR	../Middlewares/Third_Party/FreeRTOS/Source/include/deprecated_definitions.h	/^    typedef void ( __interrupt __far *pxISR )();$/;"	t
pxIdleTaskStackBuffer	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		StackType_t *pxIdleTaskStackBuffer = NULL;$/;"	l
pxIdleTaskTCBBuffer	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		StaticTask_t *pxIdleTaskTCBBuffer = NULL;$/;"	l
pxIndex	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	ListItem_t * configLIST_VOLATILE pxIndex;			\/*< Used to walk through the list.  Points to the last item returned by a call to listGET_OWNER_OF_NEXT_ENTRY (). *\/$/;"	m	struct:xLIST
pxIndex	../Middlewares/Third_Party/FreeRTOS/Source/list.c	/^ListItem_t * const pxIndex = pxList->pxIndex;$/;"	l
pxIterator	../Middlewares/Third_Party/FreeRTOS/Source/list.c	/^ListItem_t *pxIterator;$/;"	l
pxIterator	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^BlockLink_t *pxIterator;$/;"	l
pxLink	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^BlockLink_t *pxLink;$/;"	l
pxList	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^List_t const * pxList;$/;"	l
pxList	../Middlewares/Third_Party/FreeRTOS/Source/list.c	/^List_t * const pxList = pxItemToRemove->pxContainer;$/;"	l
pxListEnd	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^ListItem_t const *pxListEnd;$/;"	l
pxListItem	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^ListItem_t *pxListItem, *pxNext;$/;"	l
pxMutex	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	Queue_t * const pxMutex = ( Queue_t * ) xMutex;$/;"	l
pxMutexHolderTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TCB_t * const pxMutexHolderTCB = pxMutexHolder;$/;"	l
pxNewBlockLink	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;$/;"	l
pxNewQueue	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	Queue_t *pxNewQueue;$/;"	l
pxNewTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TCB_t *pxNewTCB;$/;"	l
pxNewTimer	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	Timer_t *pxNewTimer;$/;"	l
pxNext	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^ListItem_t *pxListItem, *pxNext;$/;"	l
pxNext	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	struct xLIST_ITEM * configLIST_VOLATILE pxNext;		\/*< Pointer to the next ListItem_t in the list. *\/$/;"	m	struct:xLIST_ITEM	typeref:struct:xLIST_ITEM::configLIST_VOLATILE
pxNext	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	struct xLIST_ITEM * configLIST_VOLATILE pxNext;$/;"	m	struct:xMINI_LIST_ITEM	typeref:struct:xMINI_LIST_ITEM::configLIST_VOLATILE
pxNextFreeBlock	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^	struct A_BLOCK_LINK *pxNextFreeBlock;	\/*<< The next free block in the list. *\/$/;"	m	struct:A_BLOCK_LINK	typeref:struct:A_BLOCK_LINK::A_BLOCK_LINK	file:
pxNextTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;$/;"	l
pxNextTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;$/;"	l
pxOverflowDelayedCoRoutineList	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^static List_t * pxOverflowDelayedCoRoutineList;							\/*< Points to the delayed co-routine list currently being used to hold co-routines that have overflowed the current tick count. *\/$/;"	v	file:
pxOverflowDelayedTaskList	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList = NULL;		\/*< Points to the delayed task list currently being used to hold tasks that have overflowed the current tick count. *\/$/;"	v	file:
pxOverflowTimerList	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^PRIVILEGED_DATA static List_t *pxOverflowTimerList = NULL;$/;"	v	file:
pxOverflowedDelayedList	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	List_t const * pxStateList, *pxDelayedList, *pxOverflowedDelayedList;$/;"	l
pxPrevious	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	struct xLIST_ITEM * configLIST_VOLATILE pxPrevious;	\/*< Pointer to the previous ListItem_t in the list. *\/$/;"	m	struct:xLIST_ITEM	typeref:struct:xLIST_ITEM::configLIST_VOLATILE
pxPrevious	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	struct xLIST_ITEM * configLIST_VOLATILE pxPrevious;$/;"	m	struct:xMINI_LIST_ITEM	typeref:struct:xMINI_LIST_ITEM::configLIST_VOLATILE
pxPreviousBlock	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;$/;"	l
pxQueue	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	QueueSetHandle_t pxQueue;$/;"	l
pxQueue	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	Queue_t * const pxQueue = xQueue;$/;"	l
pxQueue	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^Queue_t * const pxQueue = xQueue;$/;"	l
pxQueueOrSemaphore	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	Queue_t * const pxQueueOrSemaphore = ( Queue_t * ) xQueueOrSemaphore;$/;"	l
pxQueueSetContainer	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^		struct QueueDefinition *pxQueueSetContainer;$/;"	m	struct:QueueDefinition	typeref:struct:QueueDefinition::QueueDefinition	file:
pxQueueSetContainer	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	Queue_t *pxQueueSetContainer = pxQueue->pxQueueSetContainer;$/;"	l
pxReadyCoRoutineLists	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^static List_t pxReadyCoRoutineLists[ configMAX_CO_ROUTINE_PRIORITIES ];	\/*< Prioritised ready co-routines. *\/$/;"	v	file:
pxReadyTasksLists	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ] = { 0 };\/*< Prioritised ready tasks. *\/$/;"	v	file:
pxReturn	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	TaskHandle_t pxReturn;$/;"	l
pxReturn	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;$/;"	l
pxSemaphore	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	Queue_t * const pxSemaphore = ( Queue_t * ) xSemaphore;$/;"	l
pxStack	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		StackType_t *pxStack;$/;"	l
pxStack	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	StackType_t			*pxStack;			\/*< Points to the start of the stack. *\/$/;"	m	struct:tskTaskControlBlock	file:
pxStackBase	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	StackType_t *pxStackBase;		\/* Points to the lowest address of the task's stack area. *\/$/;"	m	struct:xTASK_STATUS
pxStateList	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	List_t const * pxStateList, *pxDelayedList, *pxOverflowedDelayedList;$/;"	l
pxStreamBuffer	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	StreamBuffer_t * const pxStreamBuffer = ( StreamBuffer_t * ) pxStaticStreamBuffer; \/*lint !e740 !e9087 Safe cast as StaticStreamBuffer_t is opaque Streambuffer_t. *\/$/;"	l
pxStreamBuffer	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;$/;"	l
pxStreamBuffer	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^StreamBuffer_t * pxStreamBuffer = xStreamBuffer;$/;"	l
pxStreamBuffer	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;$/;"	l
pxTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		TCB_t *pxTCB;$/;"	l
pxTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TCB_t * const pxTCB = pxMutexHolder;$/;"	l
pxTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TCB_t * const pxTCB = xTaskToResume;$/;"	l
pxTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TCB_t * pxTCB;$/;"	l
pxTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TCB_t *pxTCB = xTask;$/;"	l
pxTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TCB_t *pxTCB;$/;"	l
pxTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TCB_t const *pxTCB;$/;"	l
pxTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TCB_t* pxTCB;$/;"	l
pxTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	const TCB_t * const pxTCB = xTask;$/;"	l
pxTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^TCB_t * pxTCB;$/;"	l
pxTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^TCB_t *pxTCB = NULL;$/;"	l
pxTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^TCB_t *pxTCB;$/;"	l
pxTaskBuffer	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^		StaticTask_t * const pxTaskBuffer;$/;"	m	struct:xTASK_PARAMETERS
pxTaskStatusArray	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TaskStatus_t *pxTaskStatusArray;$/;"	l
pxTaskTag	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		TaskHookFunction_t pxTaskTag;$/;"	m	struct:tskTaskControlBlock	file:
pxTasksWaitingForBits	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^const List_t *pxTasksWaitingForBits = &( pxEventBits->xTasksWaitingForBits );$/;"	l
pxTemp	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^			List_t * pxTemp;$/;"	l
pxTemp	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^List_t *pxTemp;$/;"	l
pxTimer	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );$/;"	p	file:
pxTimer	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );$/;"	p	file:
pxTimer	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	Timer_t *			pxTimer;			\/*<< The timer to which the command will be applied. *\/$/;"	m	struct:tmrTimerParameters	file:
pxTimer	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );$/;"	p	file:
pxTimer	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); \/*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. *\/$/;"	l
pxTimer	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^Timer_t * const pxTimer = xTimer;$/;"	l
pxTimer	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^Timer_t * pxTimer =  xTimer;$/;"	l
pxTimer	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^Timer_t *pxTimer = xTimer;$/;"	l
pxTimer	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^Timer_t *pxTimer;$/;"	l
pxTimerTaskStackBuffer	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^			StackType_t *pxTimerTaskStackBuffer = NULL;$/;"	l
pxTimerTaskTCBBuffer	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^			StaticTask_t *pxTimerTaskTCBBuffer = NULL;$/;"	l
pxTopOfStack	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	volatile StackType_t	*pxTopOfStack;	\/*< Points to the location of the last item placed on the tasks stack.  THIS MUST BE THE FIRST MEMBER OF THE TCB STRUCT. *\/$/;"	m	struct:tskTaskControlBlock	file:
pxTopOfStack	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^StackType_t *pxTopOfStack;$/;"	l
pxUnblockedCRCB	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^		CRCB_t *pxUnblockedCRCB;$/;"	l
pxUnblockedCRCB	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^CRCB_t *pxUnblockedCRCB;$/;"	l
pxUnblockedTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^TCB_t *pxUnblockedTCB;$/;"	l
q	libfoxenflac/foxen/flac.c	/^				const uint16_t q = inst->rice_unary_counter;$/;"	l
qbuf	libfoxenflac/foxen/flac.c	/^	int32_t *qbuf;$/;"	m	struct:fx_flac	file:
queueLOCKED_UNMODIFIED	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^#define queueLOCKED_UNMODIFIED	/;"	d	file:
queueMUTEX_GIVE_BLOCK_TIME	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^#define queueMUTEX_GIVE_BLOCK_TIME	/;"	d	file:
queueOVERWRITE	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define queueOVERWRITE	/;"	d
queueQUEUE_IS_MUTEX	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^#define queueQUEUE_IS_MUTEX	/;"	d	file:
queueQUEUE_TYPE_BASE	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define queueQUEUE_TYPE_BASE	/;"	d
queueQUEUE_TYPE_BINARY_SEMAPHORE	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define queueQUEUE_TYPE_BINARY_SEMAPHORE	/;"	d
queueQUEUE_TYPE_COUNTING_SEMAPHORE	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define queueQUEUE_TYPE_COUNTING_SEMAPHORE	/;"	d
queueQUEUE_TYPE_MUTEX	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define queueQUEUE_TYPE_MUTEX /;"	d
queueQUEUE_TYPE_RECURSIVE_MUTEX	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define queueQUEUE_TYPE_RECURSIVE_MUTEX	/;"	d
queueQUEUE_TYPE_SET	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define queueQUEUE_TYPE_SET	/;"	d
queueSEMAPHORE_QUEUE_ITEM_LENGTH	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^#define queueSEMAPHORE_QUEUE_ITEM_LENGTH /;"	d	file:
queueSEND_TO_BACK	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define	queueSEND_TO_BACK	/;"	d
queueSEND_TO_FRONT	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define	queueSEND_TO_FRONT	/;"	d
queueUNLOCKED	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^#define queueUNLOCKED	/;"	d	file:
queueYIELD_IF_USING_PREEMPTION	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	#define queueYIELD_IF_USING_PREEMPTION(/;"	d	file:
queue_sz	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  uint32_t                  queue_sz;   \/\/\/< number of elements in the queue$/;"	m	struct:os_mailQ_def
queue_sz	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  uint32_t                  queue_sz;   \/\/\/< number of elements in the queue$/;"	m	struct:os_messageQ_def
r	libfoxenflac/foxen/flac.c	/^				uint32_t r = 0U;$/;"	l
r16_inc_wrap	dac_handler/ring16/ring16.c	/^static inline uint16_t r16_inc_wrap(uint16_t index, uint16_t buf_size) {$/;"	f	file:
raw	decoder/decoder.c	/^  uint8_t *raw;$/;"	m	struct:decoder	file:
raw_internal	decoder/decoder.c	/^uint8_t raw_internal[RAW_BUF_SIZE];$/;"	v
raw_size	decoder/decoder.c	/^  uint32_t raw_size = d->cursor;$/;"	l
read_buff	../peripherals/i2c/i2c_peri.h	/^	void *read_buff;$/;"	m	struct:__anon5
read_buff	../peripherals/spi/spi_peri.h	/^	void *read_buff;$/;"	m	struct:__anon8
read_count	../peripherals/i2c/i2c_peri.h	/^	size_t read_count;$/;"	m	struct:__anon5
readback	../sub/audio/audio_mem.c	/^        uint32_t readback;$/;"	l
readbackmem	../sub/audio/audio_mem.c	/^        uint32_t readbackmem, readbackmemH, readbackmemL;$/;"	l
readbackmemH	../sub/audio/audio_mem.c	/^        uint32_t readbackmem, readbackmemH, readbackmemL;$/;"	l
readbackmemL	../sub/audio/audio_mem.c	/^        uint32_t readbackmem, readbackmemH, readbackmemL;$/;"	l
recovery_state	../statemachine/statemachine_types.h	/^    sysState recovery_state;$/;"	m	struct:__anon5
reload	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  UBaseType_t reload;$/;"	l
reserved	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                  reserved;   \/\/\/< reserved (must be 0)$/;"	m	struct:__anon17
residual_method	libfoxenflac/foxen/flac.c	/^	fx_flac_residual_method_t residual_method;$/;"	m	struct:__anon12	file:
result	../peripherals/i2c/i2c_peri.c	/^	bool result = false;$/;"	l
result	../peripherals/i2c/i2c_peri.c	/^	bool result = i2cWaitComplete(i2c);$/;"	l
result	../peripherals/memory/mem_peri.c	/^	MemOpStatus result = MEM_OP_SUCCESS;$/;"	l
result	../peripherals/memory/mem_peri.c	/^    MemOpStatus result = MEM_OP_SUCCESS;$/;"	l
result	../peripherals/memory/mem_peri.c	/^    MemOpStatus result;$/;"	l
result	../peripherals/memory/mem_peri.c	/^    bool result = true;$/;"	l
result	../peripherals/spi/spi_peri.c	/^	bool result = false;$/;"	l
result	../peripherals/spi/spi_peri.c	/^    bool result = spiWaitComplete(spi);$/;"	l
result	../sub/powerui/powerui.c	/^	bool result = true;$/;"	l
result	../sub/powerui/powerui.c	/^    bool result = xSemaphoreTake(*sem, waitcnt);$/;"	l
retries	../sub/powerui/powerui_led.c	/^	uint16_t retries = 0;$/;"	l
retry	../sub/powerui/powerui_pmic.c	/^    uint16_t retry = 0;$/;"	l
retry_cnt	../peripherals/memory/mem_peri.c	/^	uint16_t retry_cnt = 0;$/;"	l
rflags	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t rflags, cflags;$/;"	l
rflags	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t rflags, nval;$/;"	l
rflags	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t rflags;$/;"	l
rice_parameter	libfoxenflac/foxen/flac.c	/^	uint8_t rice_parameter;$/;"	m	struct:__anon12	file:
rice_partition_order	libfoxenflac/foxen/flac.c	/^	uint8_t rice_partition_order;$/;"	m	struct:__anon12	file:
rice_unary_counter	libfoxenflac/foxen/flac.c	/^	uint16_t rice_unary_counter;$/;"	m	struct:fx_flac	file:
right_rot	../peripherals/memory/sha-256.c	/^static inline uint32_t right_rot(uint32_t value, unsigned int count)$/;"	f	file:
ring	dac_handler/dac_handler.c	/^struct ring16 ring = {$/;"	v	typeref:struct:ring16
ring16	dac_handler/ring16/ring16.h	/^struct ring16 {$/;"	s
ring16_flush	dac_handler/ring16/ring16.c	/^int32_t ring16_flush(struct ring16 *rb) {$/;"	f
ring16_flush	dac_handler/ring16/ring16.h	/^int32_t ring16_flush(struct ring16 *rb);$/;"	p
ring16_memrd	dac_handler/ring16/ring16.c	/^int32_t ring16_memrd(struct ring16 *rb, volatile int16_t *o, uint16_t s) {$/;"	f
ring16_memrd	dac_handler/ring16/ring16.h	/^int32_t ring16_memrd(struct ring16 *rb, volatile int16_t *o, uint16_t s);$/;"	p
ring16_pop	dac_handler/ring16/ring16.c	/^int32_t ring16_pop(struct ring16 *rb, volatile int16_t *v) {$/;"	f
ring16_pop	dac_handler/ring16/ring16.h	/^int32_t ring16_pop(struct ring16 *rb, volatile int16_t *v);$/;"	p
ring16_push	dac_handler/ring16/ring16.c	/^int32_t ring16_push(struct ring16 *rb, int16_t v) {$/;"	f
ring16_push	dac_handler/ring16/ring16.h	/^int32_t ring16_push(struct ring16 *rb, int16_t v);$/;"	p
ring_internal	dac_handler/dac_handler.c	/^int16_t ring_internal[RING_BUF_SIZE];$/;"	v
rmtx	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t rmtx;$/;"	l
rtc_count	../statemachine/statemachine.c	/^		uint32_t rtc_count = xExpectedIdleTime * 2;$/;"	l
rtos_Sleep_S	../RTOS/rtos.c	/^void rtos_Sleep_S(uint32_t time_s)$/;"	f
rtos_Sleep_mS	../RTOS/rtos.c	/^void rtos_Sleep_mS(uint32_t time_ms)$/;"	f
rtos_Sleep_mS	../RTOS/rtos.h	/^void rtos_Sleep_mS(uint32_t time_ms);$/;"	p
rtos_cmd_fail	../RTOS/rtos.c	/^void rtos_cmd_fail(MBCmdItems *items)$/;"	f
rtos_cmd_fail	../RTOS/rtos.h	/^void rtos_cmd_fail(MBCmdItems *items);$/;"	p
rtos_cmd_success	../RTOS/rtos.c	/^void rtos_cmd_success(MBCmdItems *items)$/;"	f
rtos_cmd_success	../RTOS/rtos.h	/^void rtos_cmd_success(MBCmdItems *items);$/;"	p
rtos_createClock	../RTOS/rtos.c	/^void rtos_createClock(TimerHandle_t *clock, const char * const pcTimerName,$/;"	f
rtos_createClock	../RTOS/rtos.h	/^void rtos_createClock(TimerHandle_t *clock, const char * const pcTimerName,$/;"	p
rtos_createMailbox	../RTOS/rtos.c	/^void rtos_createMailbox(QueueHandle_t *mail, size_t msg_size, uint8_t mb_capacity)$/;"	f
rtos_createMailbox	../RTOS/rtos.h	/^void rtos_createMailbox(QueueHandle_t *mail, size_t msg_size, uint8_t mb_capacity);$/;"	p
rtos_createSemaphore	../RTOS/rtos.c	/^void rtos_createSemaphore(SemaphoreHandle_t *sem, uint8_t sem_count, uint8_t init_count)$/;"	f
rtos_createSemaphore	../RTOS/rtos.h	/^void rtos_createSemaphore(SemaphoreHandle_t *sem, uint8_t sem_count, uint8_t init_count);$/;"	p
rtos_createThread	../RTOS/rtos.c	/^void rtos_createThread(TaskHandle_t *task, int priority,$/;"	f
rtos_createThread	../RTOS/rtos.h	/^void rtos_createThread(TaskHandle_t *task, int priority,$/;"	p
running	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t running;$/;"	l
rval	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  BaseType_t rval;$/;"	l
rxbuff	../sub/powerui/powerui_pmic.c	/^    uint8_t *rxbuff = (uint8_t*)state->pwr_i2c_trans.read_buff;$/;"	l
s0	../peripherals/memory/sha-256.c	/^					const uint32_t s0 = right_rot(w[(j + 1) & 0xf], 7) ^ right_rot(w[(j + 1) & 0xf], 18) ^ (w[(j + 1) & 0xf] >> 3);$/;"	l
s0	../peripherals/memory/sha-256.c	/^				const uint32_t s0 = right_rot(ah[0], 2) ^ right_rot(ah[0], 13) ^ right_rot(ah[0], 22);$/;"	l
s1	../peripherals/memory/sha-256.c	/^					const uint32_t s1 = right_rot(w[(j + 14) & 0xf], 17) ^ right_rot(w[(j + 14) & 0xf], 19) ^ (w[(j + 14) & 0xf] >> 10);$/;"	l
s1	../peripherals/memory/sha-256.c	/^				const uint32_t s1 = right_rot(ah[4], 6) ^ right_rot(ah[4], 11) ^ right_rot(ah[4], 25);$/;"	l
sDate	../Core/Src/rtc.c	/^  RTC_DateTypeDef sDate = {0};$/;"	l
sTime	../Core/Src/rtc.c	/^  RTC_TimeTypeDef sTime = {0};$/;"	l
sample_rate	dac_handler/dac_handler.h	/^  uint32_t sample_rate;$/;"	m	struct:dac
sample_rate	libfoxenflac/foxen/flac.c	/^	uint32_t sample_rate;$/;"	m	struct:__anon10	file:
sample_rate	libfoxenflac/foxen/flac.c	/^	uint32_t sample_rate;$/;"	m	struct:__anon11	file:
sample_rate_enum	libfoxenflac/foxen/flac.c	/^	fx_flac_sample_rate_t sample_rate_enum;$/;"	m	struct:__anon11	file:
sample_size	libfoxenflac/foxen/flac.c	/^	uint8_t sample_size;$/;"	m	struct:__anon10	file:
sample_size	libfoxenflac/foxen/flac.c	/^	uint8_t sample_size;$/;"	m	struct:__anon11	file:
sample_size_enum	libfoxenflac/foxen/flac.c	/^	fx_flac_sample_size_t sample_size_enum;$/;"	m	struct:__anon11	file:
sampling_rate	clip_handler/clip_handler.c	/^  uint32_t sampling_rate;$/;"	m	struct:clip_node	file:
sbBYTES_TO_STORE_MESSAGE_LENGTH	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^#define sbBYTES_TO_STORE_MESSAGE_LENGTH /;"	d	file:
sbFLAGS_IS_MESSAGE_BUFFER	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^#define sbFLAGS_IS_MESSAGE_BUFFER	/;"	d	file:
sbFLAGS_IS_STATICALLY_ALLOCATED	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^#define sbFLAGS_IS_STATICALLY_ALLOCATED /;"	d	file:
sbRECEIVE_COMPLETED	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	#define sbRECEIVE_COMPLETED(/;"	d	file:
sbRECEIVE_COMPLETED_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	#define sbRECEIVE_COMPLETED_FROM_ISR(/;"	d	file:
sbSEND_COMPLETED	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	#define sbSEND_COMPLETED(/;"	d	file:
sbSEND_COMPLETE_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	#define sbSEND_COMPLETE_FROM_ISR(/;"	d	file:
sbe	api/audio_clip.c	/^	uint32_t sbe;$/;"	m	struct:acmail	file:
sectorSize	../peripherals/memory/mem_peri.h	/^    size_t sectorSize;$/;"	m	struct:__anon4
sectorSize	unit_test/mocks/include/mem_peri.h	/^    size_t sectorSize;$/;"	m	struct:__anon12
sector_erase	../peripherals/memory/mem_peri.c	/^	size_t sector_erase = 0;$/;"	l
sem	../peripherals/spi/spi_peri.h	/^	SemaphoreHandle_t sem;$/;"	m	struct:__anon10
semBINARY_SEMAPHORE_QUEUE_LENGTH	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^#define semBINARY_SEMAPHORE_QUEUE_LENGTH	/;"	d
semGIVE_BLOCK_TIME	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^#define semGIVE_BLOCK_TIME	/;"	d
semSEMAPHORE_QUEUE_ITEM_LENGTH	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^#define semSEMAPHORE_QUEUE_ITEM_LENGTH	/;"	d
sem_cmd	../RTOS/rtos.h	/^    SemaphoreHandle_t* sem_cmd;$/;"	m	struct:__anon1
sem_cmd	../sub/audio/audio_types.h	/^    SemaphoreHandle_t sem_cmd;$/;"	m	struct:__anon20
semhnd_cmd	../statemachine/statemachine_types.h	/^    SemaphoreHandle_t semhnd_cmd;$/;"	m	struct:__anon5
sfh	libfoxenflac/foxen/flac.c	/^	fx_flac_subframe_header_t *sfh = inst->subframe_header;$/;"	l
shift	libfoxenflac/foxen/flac.c	/^			const uint8_t shift = READ_BITS_FAST_CRC(5U);$/;"	l
shift	libfoxenflac/foxen/flac.c	/^			uint8_t shift = sfh->wasted_bits + (32U - fh->sample_size);$/;"	l
si	libfoxenflac/foxen/flac.c	/^	fx_flac_streaminfo_t *si = inst->streaminfo;$/;"	l
side	libfoxenflac/foxen/flac.c	/^		int32_t side = blk2[i];$/;"	l
signals	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^    int32_t                  signals;   \/\/\/< signal flags$/;"	m	union:__anon8::__anon9
single_one_delivered	../peripherals/memory/sha-256.c	/^	int single_one_delivered; \/* bool *\/$/;"	m	struct:buffer_state	file:
siren_flac	unit_test/clips/siren_flac.h	/^const char siren_flac[23235] = {$/;"	v
siren_flac_length	unit_test/clips/siren_flac.h	/^const int siren_flac_length = 23235;$/;"	v
size	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t size;$/;"	l
size	../peripherals/memory/mem_peri.h	/^    size_t size;                 \/\/Size of data$/;"	m	struct:__anon3
size	clip_handler/clip_handler.c	/^  uint32_t size;$/;"	m	struct:clip_node	file:
size	dac_handler/dac_handler.h	/^  uint32_t size;$/;"	m	struct:dac
size	dac_handler/ring16/ring16.h	/^  uint16_t size;$/;"	m	struct:ring16
size	libfoxenflac/foxen/flac.c	/^	uint32_t size;$/;"	l
size	unit_test/clips/clip.h	/^	int size;$/;"	m	struct:clip_handle
size	unit_test/mocks/include/mem_peri.h	/^    size_t size;                 \/\/Size of data$/;"	m	struct:__anon11
slave_address	../peripherals/i2c/i2c_peri.h	/^	uint8_t slave_address;$/;"	m	struct:__anon5
sleep_cmd	../statemachine/statemachine_types.h	/^    bool sleep_cmd;$/;"	m	struct:__anon5
smAudioNotifications	../statemachine/statemachine.c	/^static void smAudioNotifications(mainState *state);$/;"	p	file:
smAudioNotifications	../statemachine/statemachine.c	/^void smAudioNotifications(mainState *state)$/;"	f
smDisableUserNotifications	../statemachine/statemachine.c	/^static void smDisableUserNotifications(mainState *state);$/;"	p	file:
smDisableUserNotifications	../statemachine/statemachine.c	/^void smDisableUserNotifications(mainState *state)$/;"	f
smEnableUserNotifications	../statemachine/statemachine.c	/^static void smEnableUserNotifications(mainState *state);$/;"	p	file:
smEnableUserNotifications	../statemachine/statemachine.c	/^void smEnableUserNotifications(mainState *state)$/;"	f
smEnterSLEEPMode	../statemachine/statemachine.c	/^static void smEnterSLEEPMode(mainState *state);$/;"	p	file:
smEnterSLEEPMode	../statemachine/statemachine.c	/^void smEnterSLEEPMode(mainState *state)$/;"	f
smEnterSTOPMode	../statemachine/statemachine.c	/^static void smEnterSTOPMode(mainState *state);$/;"	p	file:
smEnterSTOPMode	../statemachine/statemachine.c	/^void smEnterSTOPMode(mainState *state)$/;"	f
smExitSLEEPMode	../statemachine/statemachine.c	/^static void smExitSLEEPMode(mainState *state);$/;"	p	file:
smExitSLEEPMode	../statemachine/statemachine.c	/^void smExitSLEEPMode(mainState *state)$/;"	f
smExitSTOPMode	../statemachine/statemachine.c	/^static void smExitSTOPMode(mainState *state);$/;"	p	file:
smExitSTOPMode	../statemachine/statemachine.c	/^void smExitSTOPMode(mainState *state)$/;"	f
smFactoryReset	../statemachine/statemachine.c	/^bool smFactoryReset(mainState *state)$/;"	f
smFactoryReset	../statemachine/statemachine.h	/^bool smFactoryReset(mainState *state);$/;"	p
smInitPeripherals	../statemachine/statemachine.c	/^static void smInitPeripherals(mainState *state);$/;"	p	file:
smInitPeripherals	../statemachine/statemachine.c	/^void smInitPeripherals(mainState *state)$/;"	f
smInitSubsystems	../statemachine/statemachine.c	/^static void smInitSubsystems(mainState *state);$/;"	p	file:
smInitSubsystems	../statemachine/statemachine.c	/^void smInitSubsystems(mainState *state)$/;"	f
smLEDNotifications	../statemachine/statemachine.c	/^static void smLEDNotifications(mainState *state);$/;"	p	file:
smLEDNotifications	../statemachine/statemachine.c	/^void smLEDNotifications(mainState *state)$/;"	f
smLoadSwitchControl	../statemachine/statemachine.c	/^static void smLoadSwitchControl(mainState *state, bool enable);$/;"	p	file:
smLoadSwitchControl	../statemachine/statemachine.c	/^void smLoadSwitchControl(mainState *state, bool enable)$/;"	f
smPushbuttonManage	../statemachine/statemachine.c	/^static void smPushbuttonManage(mainState *state);$/;"	p	file:
smPushbuttonManage	../statemachine/statemachine.c	/^void smPushbuttonManage(mainState *state)$/;"	f
smQueueSleep	../statemachine/statemachine.c	/^void smQueueSleep(mainState *state)$/;"	f
smQueueSleep	../statemachine/statemachine.h	/^void smQueueSleep(mainState *state);$/;"	p
smQueueSoftReset	../statemachine/statemachine.c	/^void smQueueSoftReset(mainState *state)$/;"	f
smQueueSoftReset	../statemachine/statemachine.h	/^void smQueueSoftReset(mainState *state);$/;"	p
smQueueWake	../statemachine/statemachine.c	/^void smQueueWake(mainState *state)$/;"	f
smQueueWake	../statemachine/statemachine.h	/^void smQueueWake(mainState *state);$/;"	p
smSetLowPowerSleep	../statemachine/statemachine.c	/^static void smSetLowPowerSleep(mainState *state);$/;"	p	file:
smSetLowPowerSleep	../statemachine/statemachine.c	/^void smSetLowPowerSleep(mainState *state)$/;"	f
smSetLowPowerStop	../statemachine/statemachine.c	/^static void smSetLowPowerStop(mainState *state);$/;"	p	file:
smSetLowPowerStop	../statemachine/statemachine.c	/^void smSetLowPowerStop(mainState *state)$/;"	f
smStateSoftReset	../statemachine/statemachine.c	/^static void smStateSoftReset(mainState *state);$/;"	p	file:
smStateSoftReset	../statemachine/statemachine.c	/^void smStateSoftReset(mainState *state)$/;"	f
smTransitionEnterActive	../statemachine/statemachine.c	/^static void smTransitionEnterActive(mainState *state);$/;"	p	file:
smTransitionEnterActive	../statemachine/statemachine.c	/^void smTransitionEnterActive(mainState *state)$/;"	f
smTransitionEnterLowPower	../statemachine/statemachine.c	/^static void smTransitionEnterLowPower(mainState *state);$/;"	p	file:
smTransitionEnterLowPower	../statemachine/statemachine.c	/^void smTransitionEnterLowPower(mainState *state)$/;"	f
smTransitionEnterSleep	../statemachine/statemachine.c	/^static void smTransitionEnterSleep(mainState *state);$/;"	p	file:
smTransitionEnterSleep	../statemachine/statemachine.c	/^void smTransitionEnterSleep(mainState *state)$/;"	f
smTransitionExitLowPower	../statemachine/statemachine.c	/^static void smTransitionExitLowPower(mainState *state);$/;"	p	file:
smTransitionExitLowPower	../statemachine/statemachine.c	/^void smTransitionExitLowPower(mainState *state)$/;"	f
smUserNotifications	../statemachine/statemachine.c	/^static void smUserNotifications(mainState *state);$/;"	p	file:
smUserNotifications	../statemachine/statemachine.c	/^void smUserNotifications(mainState *state)$/;"	f
sm_handle	../statemachine/statemachine_types.h	/^    TaskHandle_t sm_handle;$/;"	m	struct:__anon5
smpl_idx	libfoxenflac/test/test_flac_integration.c	/^	uint64_t smpl_idx = 0;$/;"	l
smpl_idx	unit_test/unit_test.c	/^    uint64_t smpl_idx = 0;$/;"	l
soc	../sub/powerui/powerui_types.h	/^    int8_t soc;$/;"	m	struct:__anon11
soft_reset	../statemachine/statemachine_types.h	/^    bool soft_reset;$/;"	m	struct:__anon5
source_char	../peripherals/memory/mem_peri.c	/^	uint8_t *source_char = (uint8_t *)source;$/;"	l
source_offset	../peripherals/memory/mem_peri.c	/^	size_t source_offset = 0;$/;"	l
space	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t space;$/;"	l
space_in_chunk	../peripherals/memory/sha-256.c	/^	size_t space_in_chunk;$/;"	l
spi	../peripherals/memory/mem_peri.h	/^    SpiObject spi;$/;"	m	struct:__anon4
spi	../peripherals/peripherals.h	/^    SpiObject spi;$/;"	m	struct:__anon11
spi	unit_test/mocks/include/mem_peri.h	/^    SpiObject spi;$/;"	m	struct:__anon12
spiCheckBusy	../peripherals/spi/spi_peri.c	/^bool spiCheckBusy(SpiObject *spi)$/;"	f
spiCheckBusy	../peripherals/spi/spi_peri.h	/^bool spiCheckBusy(SpiObject *spi);$/;"	p
spiInit	../peripherals/spi/spi_peri.c	/^void spiInit(SpiObject *spi, SPI_HandleTypeDef *handle,$/;"	f
spiInit	../peripherals/spi/spi_peri.h	/^void spiInit(SpiObject *spi, SPI_HandleTypeDef *handle,$/;"	p
spiInitTransaction	../peripherals/spi/spi_peri.c	/^void spiInitTransaction(SpiTransaction *new_trans,$/;"	f
spiInitTransaction	../peripherals/spi/spi_peri.h	/^void spiInitTransaction(SpiTransaction *new_trans,$/;"	p
spiNewTransfer	../peripherals/spi/spi_peri.c	/^static void spiNewTransfer(SpiObject *spi, SpiTransaction *new_trans,$/;"	p	file:
spiNewTransfer	../peripherals/spi/spi_peri.c	/^void spiNewTransfer(SpiObject *spi, SpiTransaction *new_trans, size_t count, SpiTransferMode mode)$/;"	f
spiNewTransferWait	../peripherals/spi/spi_peri.c	/^bool spiNewTransferWait(SpiObject *spi, SpiTransaction *new_trans, size_t count, SpiTransferMode mode)$/;"	f
spiNewTransferWait	../peripherals/spi/spi_peri.h	/^bool spiNewTransferWait(SpiObject *spi, SpiTransaction *new_trans,$/;"	p
spiReleaseLock	../peripherals/spi/spi_peri.c	/^static void spiReleaseLock(SPI_HandleTypeDef *hspi);$/;"	p	file:
spiReleaseLock	../peripherals/spi/spi_peri.c	/^void spiReleaseLock(SPI_HandleTypeDef *hspi)$/;"	f
spiTransfer	../peripherals/spi/spi_peri.c	/^static void spiTransfer(SpiObject *spi, SpiTransaction *trans);$/;"	p	file:
spiTransfer	../peripherals/spi/spi_peri.c	/^void spiTransfer(SpiObject *spi, SpiTransaction *trans)$/;"	f
spiTransferResult	../peripherals/spi/spi_peri.c	/^bool spiTransferResult(SpiObject *spi)$/;"	f
spiTransferResult	../peripherals/spi/spi_peri.c	/^static bool spiTransferResult(SpiObject *spi);$/;"	p	file:
spiWaitComplete	../peripherals/spi/spi_peri.c	/^bool spiWaitComplete(SpiObject *spi)$/;"	f
spiWaitComplete	../peripherals/spi/spi_peri.h	/^bool spiWaitComplete(SpiObject *spi);$/;"	p
spi_MspDeInit	../peripherals/spi/spi_peri.c	/^void spi_MspDeInit(SpiObject *spi)$/;"	f
spi_MspDeInit	../peripherals/spi/spi_peri.h	/^void spi_MspDeInit(SpiObject *spi);$/;"	p
spi_MspInit	../peripherals/spi/spi_peri.c	/^void spi_MspInit(SpiObject *spi)$/;"	f
spi_MspInit	../peripherals/spi/spi_peri.h	/^void spi_MspInit(SpiObject *spi);$/;"	p
spi_read	../sub/audio/audio_types.h	/^    uint32_t spi_read;$/;"	m	struct:__anon20
spi_read	unit_test/mocks/include/audio_types.h	/^    uint32_t spi_read;$/;"	m	struct:__anon8
spi_sem_done	../peripherals/spi/spi_peri.c	/^SpiSemaphore spi_sem_done[SPI_MAX_PERIPH];$/;"	v
spi_sem_lock	../peripherals/spi/spi_peri.c	/^SpiSemaphore spi_sem_lock[SPI_MAX_PERIPH];$/;"	v
spi_trans	../sub/audio/audio_types.h	/^    SpiTransaction spi_trans;$/;"	m	struct:__anon20
spi_trans	unit_test/mocks/include/audio_types.h	/^    SpiTransaction spi_trans;$/;"	m	struct:__anon8
srcBuf	../peripherals/memory/mem_peri.c	/^	uint8_t *srcBuf = source;$/;"	l
ss	libfoxenflac/foxen/flac.c	/^	const int8_t ss = fx_flac_sample_sizes_[(int)sample_size_enum];$/;"	l
stack	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t stack;$/;"	l
stack_mem	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  void                   *stack_mem;    \/\/\/< memory for stack$/;"	m	struct:__anon17
stack_size	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  uint32_t                stack_size;   \/\/\/< size of stack$/;"	m	struct:__anon17
stacksize	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  uint32_t                 stacksize;   \/\/\/< stack size requirements in bytes; 0 is default stack size$/;"	m	struct:os_thread_def
start_address	../sub/audio/audio_mem.c	/^    size_t start_address, word_count, data_size;$/;"	l
startup	clip_handler/clip_handler.c	/^struct clip_node startup = {$/;"	v	typeref:struct:clip_node
stat	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  osStatus_t stat;$/;"	l
state	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  osKernelState_t state;$/;"	l
state	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  osThreadState_t state;$/;"	l
state	../peripherals/memory/sha-256.c	/^	struct buffer_state state;$/;"	l
state	../statemachine/statemachine.c	/^    mainState *state = (mainState *)arg;$/;"	l
state	../sub/powerui/powerui.c	/^    PowerUIState *state = (PowerUIState *)arg;$/;"	l
state	../sub/powerui/powerui_frame.c	/^	PowerUIState *state = (PowerUIState*)pvTimerGetTimerID(xTimer);$/;"	l
state	../sub/powerui/powerui_led.c	/^	PowerUIState *state = (PowerUIState*)pvTimerGetTimerID(xTimer);$/;"	l
state	../sub/powerui/powerui_pb.c	/^	PowerUIState *state = (PowerUIState*)pvTimerGetTimerID(xTimer);$/;"	l
state	clip_handler/clip_handler.c	/^  uint8_t state;$/;"	m	struct:clip_handler	file:
state	libfoxenflac/foxen/flac.c	/^	fx_flac_state_t state;$/;"	m	struct:fx_flac	file:
state	libfoxenflac/test/test_flac.c	/^		fx_flac_state_t state =$/;"	l
stateMachineTask	../statemachine/statemachine.c	/^void stateMachineTask(void *arg)$/;"	f
stateMachineTask	../statemachine/statemachine.h	/^void stateMachineTask(void *arg);$/;"	p
state_transition_idx	libfoxenflac/test/test_flac.c	/^	int state_transition_idx = 0;$/;"	l
static	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^	#define static$/;"	d	file:
static	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	#define static$/;"	d	file:
status	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osStatus                    status;   \/\/\/< status code: event or error information$/;"	m	struct:__anon8
status	../peripherals/memory/mem_peri.c	/^	uint8_t status;$/;"	l
status	../sub/audio/audio_types.h	/^    CSStatus status;                \/\/Status$/;"	m	struct:__anon20
status	../sub/powerui/powerui_types.h	/^    BQStatus status;$/;"	m	struct:__anon11
status	unit_test/mocks/include/audio_types.h	/^    CSStatus status;                \/\/Status$/;"	m	struct:__anon8
step_time	../sub/powerui/powerui_types.h	/^	uint8_t step_time;$/;"	m	struct:__anon7
strcpy_escape_safe	libfoxenflac/test/test_flac_integration.c	/^static char *strcpy_escape_safe(char *tar, int *l, const char *src)$/;"	f	file:
strcpy_safe	libfoxenflac/test/test_flac_integration.c	/^static char *strcpy_safe(char *tar, int *l, const char *src)$/;"	f	file:
streaminfo	libfoxenflac/foxen/flac.c	/^	fx_flac_streaminfo_t *streaminfo;$/;"	m	struct:fx_flac	file:
streaming	decoder/decoder.c	/^static int32_t streaming(struct dac *o, struct decoder *d) {$/;"	f	file:
strlen	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );$/;"	p	file:
subframe_header	libfoxenflac/foxen/flac.c	/^	fx_flac_subframe_header_t *subframe_header;$/;"	m	struct:fx_flac	file:
success	../RTOS/rtos.h	/^    bool success;$/;"	m	struct:__anon1
success	../peripherals/memory/mem_peri.c	/^	bool success = false;$/;"	l
success	../sub/audio/audio_mem.c	/^    bool success = true;$/;"	l
sync_code	libfoxenflac/foxen/flac.c	/^			uint16_t sync_code = PEEK_BITS(15U);$/;"	l
sync_info	libfoxenflac/foxen/flac.c	/^	uint64_t sync_info;$/;"	m	struct:__anon11	file:
sysDetails	../statemachine/statemachine_types.h	/^} sysDetails;$/;"	t	typeref:struct:__anon1
sysState	../statemachine/statemachine_types.h	/^} sysState;$/;"	t	typeref:enum:__anon2
sz	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t sz;$/;"	l
t0	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  TickType_t t0, td, tout;$/;"	l
tail	dac_handler/ring16/ring16.h	/^  uint16_t tail;$/;"	m	struct:ring16
tar	libfoxenflac/foxen/flac.c	/^	uint32_t tar = 0U; \/* Number of samples written. *\/$/;"	l
target	../sub/powerui/powerui_led.c	/^	uint8_t target;$/;"	l
task	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  TaskStatus_t *task;$/;"	l
task	api/audio_clip.h	/^	TaskHandle_t task;$/;"	m	struct:__anon13
taskCHECK_FOR_STACK_OVERFLOW	../Middlewares/Third_Party/FreeRTOS/Source/include/StackMacros.h	/^	#define taskCHECK_FOR_STACK_OVERFLOW(/;"	d
taskCHECK_FOR_STACK_OVERFLOW	../Middlewares/Third_Party/FreeRTOS/Source/include/stack_macros.h	/^	#define taskCHECK_FOR_STACK_OVERFLOW(/;"	d
taskDISABLE_INTERRUPTS	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define taskDISABLE_INTERRUPTS(/;"	d
taskENABLE_INTERRUPTS	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define taskENABLE_INTERRUPTS(/;"	d
taskENTER_CRITICAL	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define taskENTER_CRITICAL(/;"	d
taskENTER_CRITICAL_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define taskENTER_CRITICAL_FROM_ISR(/;"	d
taskEVENT_LIST_ITEM_VALUE_IN_USE	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	/;"	d	file:
taskEXIT_CRITICAL	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define taskEXIT_CRITICAL(/;"	d
taskEXIT_CRITICAL_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define taskEXIT_CRITICAL_FROM_ISR(/;"	d
taskNOTIFICATION_RECEIVED	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^#define taskNOTIFICATION_RECEIVED	/;"	d	file:
taskNOT_WAITING_NOTIFICATION	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^#define taskNOT_WAITING_NOTIFICATION	/;"	d	file:
taskRECORD_READY_PRIORITY	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	#define taskRECORD_READY_PRIORITY(/;"	d	file:
taskRESET_READY_PRIORITY	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	#define taskRESET_READY_PRIORITY(/;"	d	file:
taskSCHEDULER_NOT_STARTED	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define taskSCHEDULER_NOT_STARTED	/;"	d
taskSCHEDULER_RUNNING	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define taskSCHEDULER_RUNNING	/;"	d
taskSCHEDULER_SUSPENDED	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define taskSCHEDULER_SUSPENDED	/;"	d
taskSELECT_HIGHEST_PRIORITY_TASK	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	#define taskSELECT_HIGHEST_PRIORITY_TASK(/;"	d	file:
taskSWITCH_DELAYED_LISTS	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^#define taskSWITCH_DELAYED_LISTS(/;"	d	file:
taskWAITING_NOTIFICATION	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^#define taskWAITING_NOTIFICATION	/;"	d	file:
taskYIELD	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define taskYIELD(/;"	d
taskYIELD_IF_USING_PREEMPTION	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	#define taskYIELD_IF_USING_PREEMPTION(/;"	d	file:
task_cmd	../sub/powerui/powerui_types.h	/^    TaskHandle_t task_cmd;$/;"	m	struct:__anon11
task_state	decoder/decoder.c	/^enum task_state {$/;"	g	file:
task_state	decoder/decoder.c	/^volatile enum task_state task_state = IDLE;$/;"	v	typeref:enum:task_state
tcnt	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  TickType_t tcnt, delay;$/;"	l
td	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  TickType_t t0, td, tout;$/;"	l
temp	../peripherals/memory/mem_peri.c	/^    MemElement temp;$/;"	l
temp	../peripherals/memory/mem_peri.c	/^    uint16_t temp;$/;"	l
temp	../peripherals/memory/mem_peri.c	/^    uint32_t temp;$/;"	l
temp1	../peripherals/memory/sha-256.c	/^				const uint32_t temp1 = ah[7] + s1 + ch + k[i << 4 | j] + w[j];$/;"	l
temp2	../peripherals/memory/sha-256.c	/^				const uint32_t temp2 = s0 + maj;$/;"	l
temp_anim	../sub/powerui/powerui.c	/^    LEDAnim temp_anim;$/;"	l
temp_anim_elem	../sub/powerui/powerui.c	/^	MemElement temp_anim_elem;$/;"	l
temp_cfg_elem	../sub/powerui/powerui.c	/^	MemElement temp_cfg_elem;$/;"	l
temp_config	../sub/powerui/powerui.c	/^    BQConfigReg temp_config;$/;"	l
temp_elem	../peripherals/memory/mem_peri.c	/^    uint32_t temp_elem = (new_elem_end << MEM_ELEMBLK_OFFSET_SHIFT) & ~MEM_ELEMBLK_WRITTEN_MASK;$/;"	l
temp_elem	../sub/powerui/powerui.c	/^    MemElement temp_elem;$/;"	l
test_flac_fixed_1	libfoxenflac/test/test_flac.c	/^static void test_flac_fixed_1()$/;"	f	file:
test_flac_fixed_2	libfoxenflac/test/test_flac.c	/^static void test_flac_fixed_2()$/;"	f	file:
test_flac_header_shift_1	libfoxenflac/test/test_flac.c	/^static void test_flac_header_shift_1()$/;"	f	file:
test_flac_header_shift_2	libfoxenflac/test/test_flac.c	/^static void test_flac_header_shift_2()$/;"	f	file:
test_flac_header_shift_3	libfoxenflac/test/test_flac.c	/^static void test_flac_header_shift_3()$/;"	f	file:
test_flac_header_shift_4	libfoxenflac/test/test_flac.c	/^static void test_flac_header_shift_4()$/;"	f	file:
test_flac_header_variant	libfoxenflac/test/test_flac.c	/^static void test_flac_header_variant(fx_flac_t *inst, const uint8_t *buf,$/;"	f	file:
test_flac_header_variant_one_byte	libfoxenflac/test/test_flac.c	/^static void test_flac_header_variant_one_byte(fx_flac_t *inst, const uint8_t *buf, uint32_t len_)$/;"	f	file:
test_flac_metadata_err	libfoxenflac/test/test_flac.c	/^static void test_flac_metadata_err()$/;"	f	file:
test_flac_metadata_multiple	libfoxenflac/test/test_flac.c	/^static void test_flac_metadata_multiple()$/;"	f	file:
test_flac_metadata_multiple_one_byte	libfoxenflac/test/test_flac.c	/^static void test_flac_metadata_multiple_one_byte()$/;"	f	file:
test_flac_metadata_single	libfoxenflac/test/test_flac.c	/^static void test_flac_metadata_single()$/;"	f	file:
test_flac_metadata_single_one_byte	libfoxenflac/test/test_flac.c	/^static void test_flac_metadata_single_one_byte()$/;"	f	file:
this	api/audio_clip.c	/^AudioClipState *this;$/;"	v
ticks	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  TickType_t ticks;$/;"	l
ticks_slept	../statemachine/statemachine.c	/^	int32_t ticks_slept = time_before.SubSeconds;$/;"	l
time_after	../statemachine/statemachine.c	/^	RTC_TimeTypeDef time_before, time_after;$/;"	l
time_before	../statemachine/statemachine.c	/^	RTC_TimeTypeDef time_before, time_after;$/;"	l
timeout	../Core/Src/system_stm32f4xx.c	/^  register uint32_t tmpreg = 0, timeout = 0xFFFF;$/;"	l
timer_period	../sub/powerui/powerui_led.c	/^	uint32_t timer_period = hold_period + ((anim->step_time << 3) * (anim->top_iend - anim->bot_iend)) + 1;$/;"	l
tmp	../Core/Src/system_stm32f4xx.c	/^  SystemCoreClock >>= tmp;$/;"	l
tmp	../Core/Src/system_stm32f4xx.c	/^  __IO uint32_t tmp = 0x00;$/;"	l
tmp	../Core/Src/system_stm32f4xx.c	/^  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;$/;"	l
tmp	../sub/audio/audio_mem.c	/^    uint32_t tmp = 0;$/;"	l
tmp	../sub/audio/audio_mem.c	/^    uint32_t tmp;$/;"	l
tmp	../sub/powerui/powerui.c	/^	uint8_t tmp;$/;"	l
tmp	../sub/powerui/powerui_pmic.c	/^	uint8_t tmp;$/;"	l
tmp	../sub/powerui/powerui_pmic.c	/^    uint8_t tmp = 0;$/;"	l
tmp_	libfoxenflac/foxen/flac.c	/^	int64_t tmp_; \/* Used by the READ_BITS macro *\/$/;"	l
tmpreg	../Core/Src/system_stm32f4xx.c	/^  register uint32_t tmpreg = 0, timeout = 0xFFFF;$/;"	l
tmrCOMMAND_CHANGE_PERIOD	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define tmrCOMMAND_CHANGE_PERIOD	/;"	d
tmrCOMMAND_CHANGE_PERIOD_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define tmrCOMMAND_CHANGE_PERIOD_FROM_ISR	/;"	d
tmrCOMMAND_DELETE	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define tmrCOMMAND_DELETE	/;"	d
tmrCOMMAND_EXECUTE_CALLBACK	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define tmrCOMMAND_EXECUTE_CALLBACK	/;"	d
tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR /;"	d
tmrCOMMAND_RESET	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define tmrCOMMAND_RESET	/;"	d
tmrCOMMAND_RESET_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define tmrCOMMAND_RESET_FROM_ISR	/;"	d
tmrCOMMAND_START	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define tmrCOMMAND_START	/;"	d
tmrCOMMAND_START_DONT_TRACE	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define tmrCOMMAND_START_DONT_TRACE	/;"	d
tmrCOMMAND_START_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define tmrCOMMAND_START_FROM_ISR	/;"	d
tmrCOMMAND_STOP	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define tmrCOMMAND_STOP	/;"	d
tmrCOMMAND_STOP_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define tmrCOMMAND_STOP_FROM_ISR	/;"	d
tmrCallbackParameters	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^typedef struct tmrCallbackParameters$/;"	s	file:
tmrFIRST_FROM_ISR_COMMAND	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define tmrFIRST_FROM_ISR_COMMAND	/;"	d
tmrNO_DELAY	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^#define tmrNO_DELAY	/;"	d	file:
tmrSTATUS_IS_ACTIVE	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^#define tmrSTATUS_IS_ACTIVE	/;"	d	file:
tmrSTATUS_IS_AUTORELOAD	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^#define tmrSTATUS_IS_AUTORELOAD	/;"	d	file:
tmrSTATUS_IS_STATICALLY_ALLOCATED	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^#define tmrSTATUS_IS_STATICALLY_ALLOCATED	/;"	d	file:
tmrTIMER_CALLBACK	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define tmrTIMER_CALLBACK /;"	d
tmrTimerControl	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^struct tmrTimerControl; \/* The old naming convention is used to prevent breaking kernel aware debuggers. *\/$/;"	x
tmrTimerControl	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^typedef struct tmrTimerControl \/* The old naming convention is used to prevent breaking kernel aware debuggers. *\/$/;"	s	file:
tmrTimerParameters	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^typedef struct tmrTimerParameters$/;"	s	file:
tmrTimerQueueMessage	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^typedef struct tmrTimerQueueMessage$/;"	s	file:
to_read	libfoxenflac/examples/flac_decoder.c	/^		size_t to_read =  sizeof(buf) - buf_wr_cur;$/;"	l
to_read	libfoxenflac/test/test_flac_integration.c	/^		size_t to_read = sizeof(buf) - buf_wr_cur, n_read = 0;$/;"	l
to_read	unit_test/unit_test.c	/^		size_t to_read =  sizeof(buf) - buf_wr_cur;$/;"	l
top_iend	../sub/powerui/powerui_types.h	/^	uint8_t top_iend;$/;"	m	struct:__anon7
tophold_period	../sub/powerui/powerui_types.h	/^	uint16_t tophold_period;$/;"	m	struct:__anon7
totalSize	../peripherals/memory/mem_peri.h	/^    size_t totalSize;$/;"	m	struct:__anon4
totalSize	unit_test/mocks/include/mem_peri.h	/^    size_t totalSize;$/;"	m	struct:__anon12
total_len	../peripherals/memory/sha-256.c	/^	size_t total_len;$/;"	m	struct:buffer_state	file:
total_len_delivered	../peripherals/memory/sha-256.c	/^	int total_len_delivered; \/* bool *\/$/;"	m	struct:buffer_state	file:
tout	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  TickType_t t0, td, tout;$/;"	l
tpriority	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  osPriority               tpriority;   \/\/\/< initial thread priority$/;"	m	struct:os_thread_def
traceBLOCKING_ON_QUEUE_PEEK	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceBLOCKING_ON_QUEUE_PEEK(/;"	d
traceBLOCKING_ON_QUEUE_RECEIVE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceBLOCKING_ON_QUEUE_RECEIVE(/;"	d
traceBLOCKING_ON_QUEUE_SEND	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceBLOCKING_ON_QUEUE_SEND(/;"	d
traceBLOCKING_ON_STREAM_BUFFER_RECEIVE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceBLOCKING_ON_STREAM_BUFFER_RECEIVE(/;"	d
traceBLOCKING_ON_STREAM_BUFFER_SEND	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceBLOCKING_ON_STREAM_BUFFER_SEND(/;"	d
traceCREATE_COUNTING_SEMAPHORE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceCREATE_COUNTING_SEMAPHORE(/;"	d
traceCREATE_COUNTING_SEMAPHORE_FAILED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceCREATE_COUNTING_SEMAPHORE_FAILED(/;"	d
traceCREATE_MUTEX	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceCREATE_MUTEX(/;"	d
traceCREATE_MUTEX_FAILED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceCREATE_MUTEX_FAILED(/;"	d
traceEND	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceEND(/;"	d
traceEVENT_GROUP_CLEAR_BITS	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceEVENT_GROUP_CLEAR_BITS(/;"	d
traceEVENT_GROUP_CLEAR_BITS_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceEVENT_GROUP_CLEAR_BITS_FROM_ISR(/;"	d
traceEVENT_GROUP_CREATE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceEVENT_GROUP_CREATE(/;"	d
traceEVENT_GROUP_CREATE_FAILED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceEVENT_GROUP_CREATE_FAILED(/;"	d
traceEVENT_GROUP_DELETE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceEVENT_GROUP_DELETE(/;"	d
traceEVENT_GROUP_SET_BITS	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceEVENT_GROUP_SET_BITS(/;"	d
traceEVENT_GROUP_SET_BITS_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceEVENT_GROUP_SET_BITS_FROM_ISR(/;"	d
traceEVENT_GROUP_SYNC_BLOCK	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceEVENT_GROUP_SYNC_BLOCK(/;"	d
traceEVENT_GROUP_SYNC_END	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceEVENT_GROUP_SYNC_END(/;"	d
traceEVENT_GROUP_WAIT_BITS_BLOCK	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceEVENT_GROUP_WAIT_BITS_BLOCK(/;"	d
traceEVENT_GROUP_WAIT_BITS_END	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceEVENT_GROUP_WAIT_BITS_END(/;"	d
traceFREE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^    #define traceFREE(/;"	d
traceGIVE_MUTEX_RECURSIVE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceGIVE_MUTEX_RECURSIVE(/;"	d
traceGIVE_MUTEX_RECURSIVE_FAILED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceGIVE_MUTEX_RECURSIVE_FAILED(/;"	d
traceINCREASE_TICK_COUNT	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceINCREASE_TICK_COUNT(/;"	d
traceLOW_POWER_IDLE_BEGIN	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceLOW_POWER_IDLE_BEGIN(/;"	d
traceLOW_POWER_IDLE_END	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceLOW_POWER_IDLE_END(/;"	d
traceMALLOC	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^    #define traceMALLOC(/;"	d
traceMOVED_TASK_TO_READY_STATE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceMOVED_TASK_TO_READY_STATE(/;"	d
tracePEND_FUNC_CALL	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define tracePEND_FUNC_CALL(/;"	d
tracePEND_FUNC_CALL_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define tracePEND_FUNC_CALL_FROM_ISR(/;"	d
tracePOST_MOVED_TASK_TO_READY_STATE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define tracePOST_MOVED_TASK_TO_READY_STATE(/;"	d
traceQUEUE_CREATE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceQUEUE_CREATE(/;"	d
traceQUEUE_CREATE_FAILED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceQUEUE_CREATE_FAILED(/;"	d
traceQUEUE_DELETE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceQUEUE_DELETE(/;"	d
traceQUEUE_PEEK	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceQUEUE_PEEK(/;"	d
traceQUEUE_PEEK_FAILED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceQUEUE_PEEK_FAILED(/;"	d
traceQUEUE_PEEK_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceQUEUE_PEEK_FROM_ISR(/;"	d
traceQUEUE_PEEK_FROM_ISR_FAILED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceQUEUE_PEEK_FROM_ISR_FAILED(/;"	d
traceQUEUE_RECEIVE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceQUEUE_RECEIVE(/;"	d
traceQUEUE_RECEIVE_FAILED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceQUEUE_RECEIVE_FAILED(/;"	d
traceQUEUE_RECEIVE_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceQUEUE_RECEIVE_FROM_ISR(/;"	d
traceQUEUE_RECEIVE_FROM_ISR_FAILED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceQUEUE_RECEIVE_FROM_ISR_FAILED(/;"	d
traceQUEUE_REGISTRY_ADD	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceQUEUE_REGISTRY_ADD(/;"	d
traceQUEUE_SEND	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceQUEUE_SEND(/;"	d
traceQUEUE_SEND_FAILED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceQUEUE_SEND_FAILED(/;"	d
traceQUEUE_SEND_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceQUEUE_SEND_FROM_ISR(/;"	d
traceQUEUE_SEND_FROM_ISR_FAILED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceQUEUE_SEND_FROM_ISR_FAILED(/;"	d
traceSTART	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceSTART(/;"	d
traceSTREAM_BUFFER_CREATE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceSTREAM_BUFFER_CREATE(/;"	d
traceSTREAM_BUFFER_CREATE_FAILED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceSTREAM_BUFFER_CREATE_FAILED(/;"	d
traceSTREAM_BUFFER_CREATE_STATIC_FAILED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceSTREAM_BUFFER_CREATE_STATIC_FAILED(/;"	d
traceSTREAM_BUFFER_DELETE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceSTREAM_BUFFER_DELETE(/;"	d
traceSTREAM_BUFFER_RECEIVE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceSTREAM_BUFFER_RECEIVE(/;"	d
traceSTREAM_BUFFER_RECEIVE_FAILED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceSTREAM_BUFFER_RECEIVE_FAILED(/;"	d
traceSTREAM_BUFFER_RECEIVE_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceSTREAM_BUFFER_RECEIVE_FROM_ISR(/;"	d
traceSTREAM_BUFFER_RESET	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceSTREAM_BUFFER_RESET(/;"	d
traceSTREAM_BUFFER_SEND	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceSTREAM_BUFFER_SEND(/;"	d
traceSTREAM_BUFFER_SEND_FAILED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceSTREAM_BUFFER_SEND_FAILED(/;"	d
traceSTREAM_BUFFER_SEND_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceSTREAM_BUFFER_SEND_FROM_ISR(/;"	d
traceTAKE_MUTEX_RECURSIVE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTAKE_MUTEX_RECURSIVE(/;"	d
traceTAKE_MUTEX_RECURSIVE_FAILED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTAKE_MUTEX_RECURSIVE_FAILED(/;"	d
traceTASK_CREATE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_CREATE(/;"	d
traceTASK_CREATE_FAILED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_CREATE_FAILED(/;"	d
traceTASK_DELAY	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_DELAY(/;"	d
traceTASK_DELAY_UNTIL	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_DELAY_UNTIL(/;"	d
traceTASK_DELETE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_DELETE(/;"	d
traceTASK_INCREMENT_TICK	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_INCREMENT_TICK(/;"	d
traceTASK_NOTIFY	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_NOTIFY(/;"	d
traceTASK_NOTIFY_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_NOTIFY_FROM_ISR(/;"	d
traceTASK_NOTIFY_GIVE_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_NOTIFY_GIVE_FROM_ISR(/;"	d
traceTASK_NOTIFY_TAKE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_NOTIFY_TAKE(/;"	d
traceTASK_NOTIFY_TAKE_BLOCK	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_NOTIFY_TAKE_BLOCK(/;"	d
traceTASK_NOTIFY_WAIT	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_NOTIFY_WAIT(/;"	d
traceTASK_NOTIFY_WAIT_BLOCK	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_NOTIFY_WAIT_BLOCK(/;"	d
traceTASK_PRIORITY_DISINHERIT	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_PRIORITY_DISINHERIT(/;"	d
traceTASK_PRIORITY_INHERIT	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_PRIORITY_INHERIT(/;"	d
traceTASK_PRIORITY_SET	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_PRIORITY_SET(/;"	d
traceTASK_RESUME	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_RESUME(/;"	d
traceTASK_RESUME_FROM_ISR	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_RESUME_FROM_ISR(/;"	d
traceTASK_SUSPEND	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_SUSPEND(/;"	d
traceTASK_SWITCHED_IN	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_SWITCHED_IN(/;"	d
traceTASK_SWITCHED_OUT	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTASK_SWITCHED_OUT(/;"	d
traceTIMER_COMMAND_RECEIVED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTIMER_COMMAND_RECEIVED(/;"	d
traceTIMER_COMMAND_SEND	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTIMER_COMMAND_SEND(/;"	d
traceTIMER_CREATE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTIMER_CREATE(/;"	d
traceTIMER_CREATE_FAILED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTIMER_CREATE_FAILED(/;"	d
traceTIMER_EXPIRED	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define traceTIMER_EXPIRED(/;"	d
trans	../peripherals/memory/mem_peri.h	/^    SpiTransaction trans;$/;"	m	struct:__anon4
trans	unit_test/mocks/include/mem_peri.h	/^    SpiTransaction trans;$/;"	m	struct:__anon12
trans_success	../peripherals/memory/mem_peri.c	/^	bool trans_success = false;$/;"	l
tskBLOCKED_CHAR	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^#define tskBLOCKED_CHAR	/;"	d	file:
tskDELETED_CHAR	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^#define tskDELETED_CHAR	/;"	d	file:
tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^#define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB /;"	d	file:
tskIDLE_PRIORITY	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define tskIDLE_PRIORITY	/;"	d
tskKERNEL_VERSION_BUILD	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define tskKERNEL_VERSION_BUILD /;"	d
tskKERNEL_VERSION_MAJOR	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define tskKERNEL_VERSION_MAJOR /;"	d
tskKERNEL_VERSION_MINOR	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define tskKERNEL_VERSION_MINOR /;"	d
tskKERNEL_VERSION_NUMBER	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define tskKERNEL_VERSION_NUMBER /;"	d
tskMPU_REGION_DEVICE_MEMORY	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define tskMPU_REGION_DEVICE_MEMORY	/;"	d
tskMPU_REGION_EXECUTE_NEVER	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define tskMPU_REGION_EXECUTE_NEVER	/;"	d
tskMPU_REGION_NORMAL_MEMORY	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define tskMPU_REGION_NORMAL_MEMORY	/;"	d
tskMPU_REGION_READ_ONLY	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define tskMPU_REGION_READ_ONLY	/;"	d
tskMPU_REGION_READ_WRITE	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define tskMPU_REGION_READ_WRITE	/;"	d
tskREADY_CHAR	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^#define tskREADY_CHAR	/;"	d	file:
tskRUNNING_CHAR	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^#define tskRUNNING_CHAR	/;"	d	file:
tskSET_NEW_STACKS_TO_KNOWN_VALUE	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	/;"	d	file:
tskSTACK_FILL_BYTE	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^#define tskSTACK_FILL_BYTE	/;"	d	file:
tskSTATICALLY_ALLOCATED_STACK_AND_TCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^#define tskSTATICALLY_ALLOCATED_STACK_AND_TCB	/;"	d	file:
tskSTATICALLY_ALLOCATED_STACK_ONLY	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^#define tskSTATICALLY_ALLOCATED_STACK_ONLY /;"	d	file:
tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^#define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	/;"	d
tskSUSPENDED_CHAR	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^#define tskSUSPENDED_CHAR	/;"	d	file:
tskTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^} tskTCB;$/;"	t	typeref:struct:tskTaskControlBlock	file:
tskTaskControlBlock	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^struct tskTaskControlBlock; \/* The old naming convention is used to prevent breaking kernel aware debuggers. *\/$/;"	x
tskTaskControlBlock	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^typedef struct tskTaskControlBlock 			\/* The old naming convention is used to prevent breaking kernel aware debuggers. *\/$/;"	s	file:
tstate	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  eTaskState tstate;$/;"	l
tx	../sub/audio/audio_mem.c	/^	uint8_t *tx = txbuff;$/;"	l
tx_complete	dac_handler/dac_handler.h	/^  bool volatile tx_complete;$/;"	m	struct:dac
tx_complete_ptr	wrappers/wrp_i2s.c	/^bool volatile *tx_complete_ptr = NULL;$/;"	v
tx_halfcomplete	dac_handler/dac_handler.h	/^  bool volatile tx_halfcomplete;$/;"	m	struct:dac
tx_halfcomplete_ptr	wrappers/wrp_i2s.c	/^bool volatile *tx_halfcomplete_ptr = NULL;$/;"	v
txbuff	../peripherals/memory/mem_peri.c	/^	uint8_t txbuff = MEM_CMD_CHE;$/;"	l
txbuff	../peripherals/memory/mem_peri.c	/^	uint8_t txbuff = MEM_CMD_DP;$/;"	l
txbuff	../peripherals/memory/mem_peri.c	/^	uint8_t txbuff = MEM_CMD_RDSR;$/;"	l
txbuff	../peripherals/memory/mem_peri.c	/^	uint8_t txbuff = MEM_CMD_RID;$/;"	l
txbuff	../peripherals/memory/mem_peri.c	/^	uint8_t txbuff = MEM_CMD_RJID;$/;"	l
txbuff	../peripherals/memory/mem_peri.c	/^	uint8_t txbuff = MEM_CMD_RSTEN;$/;"	l
txbuff	../peripherals/memory/mem_peri.c	/^	uint8_t txbuff = MEM_CMD_WRDI;$/;"	l
txbuff	../peripherals/memory/mem_peri.c	/^	uint8_t txbuff = MEM_CMD_WREN;$/;"	l
txbuff	../peripherals/memory/mem_peri.c	/^	uint8_t txbuff[4];$/;"	l
txbuff	../peripherals/memory/mem_peri.c	/^	uint8_t txbuff[5];$/;"	l
txbuff	../sub/powerui/powerui_led.c	/^    uint8_t *txbuff = (uint8_t*)state->led_i2c_trans.write_buff;$/;"	l
txbuff	../sub/powerui/powerui_pmic.c	/^    uint8_t *txbuff = (uint8_t*)state->pwr_i2c_trans.write_buff;$/;"	l
type	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t type;$/;"	l
type	../sub/powerui/powerui_types.h	/^	LEDAnimation type;$/;"	m	struct:__anon7
type	libfoxenflac/foxen/flac.c	/^			uint8_t type = READ_BITS_FAST_CRC(6U);$/;"	l
type	libfoxenflac/foxen/flac.c	/^	fx_flac_metadata_type_t type;$/;"	m	struct:__anon9	file:
type	libfoxenflac/foxen/flac.c	/^	fx_flac_subframe_type_t type;$/;"	m	struct:__anon12	file:
tz_module	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h	/^  TZ_ModuleId_t            tz_module;   \/\/\/< TrustZone module identifier$/;"	m	struct:__anon17
u	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	} u;$/;"	m	struct:xSTATIC_QUEUE	typeref:union:xSTATIC_QUEUE::__anon4
u	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	} u;$/;"	m	struct:QueueDefinition	typeref:union:QueueDefinition::__anon1	file:
u	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	} u;$/;"	m	struct:tmrTimerQueueMessage	typeref:union:tmrTimerQueueMessage::__anon2	file:
ucDelayAborted	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		uint8_t ucDelayAborted;$/;"	m	struct:tskTaskControlBlock	file:
ucDummy19	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		uint8_t 		ucDummy19;$/;"	m	struct:xSTATIC_TCB
ucDummy21	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		uint8_t ucDummy21;$/;"	m	struct:xSTATIC_TCB
ucDummy3	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	uint8_t ucDummy3;$/;"	m	struct:xSTATIC_STREAM_BUFFER
ucDummy4	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^			uint8_t ucDummy4;$/;"	m	struct:xSTATIC_EVENT_GROUP
ucDummy5	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	uint8_t ucDummy5[ 2 ];$/;"	m	struct:xSTATIC_QUEUE
ucDummy6	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		uint8_t ucDummy6;$/;"	m	struct:xSTATIC_QUEUE
ucDummy7	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	uint8_t				ucDummy7[ configMAX_TASK_NAME_LEN ];$/;"	m	struct:xSTATIC_TCB
ucDummy8	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	uint8_t 			ucDummy8;$/;"	m	struct:xSTATIC_TIMER
ucDummy9	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		uint8_t ucDummy9;$/;"	m	struct:xSTATIC_QUEUE
ucFlags	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	uint8_t ucFlags;$/;"	l
ucFlags	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	uint8_t ucFlags;$/;"	m	struct:StreamBufferDef_t	file:
ucHeap	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^    static uint8_t ucHeap[configTOTAL_HEAP_SIZE];$/;"	v	file:
ucHeap	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^	extern uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];$/;"	x
ucHeap	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^	static uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];$/;"	v	file:
ucNotifyState	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		volatile uint8_t ucNotifyState;$/;"	m	struct:tskTaskControlBlock	file:
ucOriginalNotifyState	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	uint8_t ucOriginalNotifyState;$/;"	l
ucQueueGetQueueType	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )$/;"	f
ucQueueType	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^		uint8_t ucQueueType;$/;"	m	struct:QueueDefinition	file:
ucStaticTimerQueueStorage	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; \/*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. *\/$/;"	l	file:
ucStaticallyAllocated	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^		uint8_t ucStaticallyAllocated; \/*< Set to pdTRUE if the event group is statically allocated to ensure no attempt is made to free the memory. *\/$/;"	m	struct:EventGroupDef_t	file:
ucStaticallyAllocated	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^		uint8_t ucStaticallyAllocated;	\/*< Set to pdTRUE if the memory used by the queue was statically allocated to ensure no attempt is made to free the memory. *\/$/;"	m	struct:QueueDefinition	file:
ucStaticallyAllocated	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		uint8_t	ucStaticallyAllocated; 		\/*< Set to pdTRUE if the task is a statically allocated to ensure no attempt is made to free the memory. *\/$/;"	m	struct:tskTaskControlBlock	file:
ucStatus	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	uint8_t 				ucStatus;			\/*<< Holds bits to say if the timer was statically allocated or not, and if it is active or not. *\/$/;"	m	struct:tmrTimerControl	file:
ucStreamBufferGetStreamBufferType	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	uint8_t ucStreamBufferGetStreamBufferType( StreamBufferHandle_t xStreamBuffer )$/;"	f
ulCount	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	uint32_t ulCount = 0U;$/;"	l
ulDummy16	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		uint32_t		ulDummy16;$/;"	m	struct:xSTATIC_TCB
ulDummy18	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		uint32_t 		ulDummy18;$/;"	m	struct:xSTATIC_TCB
ulIdleTaskStackSize	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		uint32_t ulIdleTaskStackSize;$/;"	l
ulLengthInBytes	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	uint32_t ulLengthInBytes;$/;"	m	struct:xMEMORY_REGION
ulNotifiedValue	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		volatile uint32_t ulNotifiedValue;$/;"	m	struct:tskTaskControlBlock	file:
ulParameter2	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	uint32_t ulParameter2;					\/* << The value that will be used as the callback functions second parameter. *\/$/;"	m	struct:tmrCallbackParameters	file:
ulParameters	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	uint32_t ulParameters;$/;"	m	struct:xMEMORY_REGION
ulReturn	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	uint32_t ulReturn;$/;"	l
ulRunTimeCounter	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	uint32_t ulRunTimeCounter;		\/* The total run time allocated to the task so far, as defined by the run time stats clock.  See http:\/\/www.freertos.org\/rtos-run-time-stats.html.  Only valid when configGENERATE_RUN_TIME_STATS is defined as 1 in FreeRTOSConfig.h. *\/$/;"	m	struct:xTASK_STATUS
ulRunTimeCounter	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		uint32_t		ulRunTimeCounter;	\/*< Stores the amount of time the task has spent in the Running state. *\/$/;"	m	struct:tskTaskControlBlock	file:
ulStatsAsPercentage	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	uint32_t ulTotalTime, ulStatsAsPercentage;$/;"	l
ulTaskNotifyTake	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define ulTaskNotifyTake	/;"	d
ulTaskNotifyTake	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )$/;"	f
ulTaskSwitchedInTime	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	\/*< Holds the value of a timer\/counter the last time a task was switched in. *\/$/;"	v	file:
ulTimerTaskStackSize	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^			uint32_t ulTimerTaskStackSize;$/;"	l
ulTotalRunTime	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		\/*< Holds the total amount of execution time as defined by the run time counter clock. *\/$/;"	v	file:
ulTotalTime	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	uint32_t ulTotalTime, ulStatsAsPercentage;$/;"	l
update	../sub/audio/audio.c	/^    bool update = false;$/;"	l
usStackDepth	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	configSTACK_DEPTH_TYPE usStackDepth;$/;"	m	struct:xTASK_PARAMETERS
usStackHighWaterMark	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	configSTACK_DEPTH_TYPE usStackHighWaterMark;	\/* The minimum amount of stack space that has remained for the task since the task was created.  The closer this value is to zero the closer the task has come to overflowing its stack. *\/$/;"	m	struct:xTASK_STATUS
usernotification_enabled	../statemachine/statemachine_types.h	/^    bool usernotification_enabled;$/;"	m	struct:__anon5
uwPrescalerValue	../Core/Src/stm32f4xx_hal_timebase_tim.c	/^  uint32_t              uwPrescalerValue = 0;$/;"	l
uwTimclock	../Core/Src/stm32f4xx_hal_timebase_tim.c	/^  uint32_t              uwTimclock = 0;$/;"	l
ux	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	UBaseType_t ux;$/;"	l
uxAddress	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^size_t uxAddress;$/;"	l
uxArraySize	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxArraySize, x;$/;"	l
uxBasePriority	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	UBaseType_t uxBasePriority;		\/* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. *\/$/;"	m	struct:xTASK_STATUS
uxBasePriority	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		UBaseType_t		uxBasePriority;		\/*< The priority last assigned to the task - used by the priority inheritance mechanism. *\/$/;"	m	struct:tskTaskControlBlock	file:
uxBitsToClear	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;$/;"	l
uxBitsWaitedFor	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;$/;"	l
uxControlBits	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;$/;"	l
uxControlBits	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^EventBits_t uxReturn, uxControlBits = 0;$/;"	l
uxCriticalNesting	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		UBaseType_t		uxCriticalNesting;	\/*< Holds the critical section nesting depth for ports that do not maintain their own count in the port layer. *\/$/;"	m	struct:tskTaskControlBlock	file:
uxCurrentBasePriority	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;$/;"	l
uxCurrentEventBits	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^		const EventBits_t uxCurrentEventBits = pxEventBits->uxEventBits;$/;"	l
uxCurrentNumberOfTasks	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;$/;"	v	file:
uxCurrentPriority	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	UBaseType_t uxCurrentPriority;	\/* The priority at which the task was running (may be inherited) when the structure was populated. *\/$/;"	m	struct:xTASK_STATUS
uxDeletedTasksWaitingCleanUp	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;$/;"	v	file:
uxDummy1	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	size_t uxDummy1[ 4 ];$/;"	m	struct:xSTATIC_STREAM_BUFFER
uxDummy10	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		UBaseType_t		uxDummy10[ 2 ];$/;"	m	struct:xSTATIC_TCB
uxDummy12	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		UBaseType_t		uxDummy12[ 2 ];$/;"	m	struct:xSTATIC_TCB
uxDummy2	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		UBaseType_t uxDummy2;$/;"	m	union:xSTATIC_QUEUE::__anon4
uxDummy2	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	UBaseType_t uxDummy2;$/;"	m	struct:xSTATIC_LIST
uxDummy20	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		uint8_t			uxDummy20;$/;"	m	struct:xSTATIC_TCB
uxDummy3	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		UBaseType_t uxDummy3;$/;"	m	struct:xSTATIC_EVENT_GROUP
uxDummy4	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		UBaseType_t uxDummy4;$/;"	m	struct:xSTATIC_STREAM_BUFFER
uxDummy4	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	UBaseType_t uxDummy4[ 3 ];$/;"	m	struct:xSTATIC_QUEUE
uxDummy5	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	UBaseType_t			uxDummy5;$/;"	m	struct:xSTATIC_TCB
uxDummy7	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		UBaseType_t		uxDummy7;$/;"	m	struct:xSTATIC_TIMER
uxDummy8	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		UBaseType_t uxDummy8;$/;"	m	struct:xSTATIC_QUEUE
uxDummy9	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		UBaseType_t		uxDummy9;$/;"	m	struct:xSTATIC_TCB
uxEventBits	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^	EventBits_t uxEventBits;$/;"	m	struct:EventGroupDef_t	file:
uxEventGroupGetNumber	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^	UBaseType_t uxEventGroupGetNumber( void* xEventGroup )$/;"	f
uxEventGroupNumber	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^		UBaseType_t uxEventGroupNumber;$/;"	m	struct:EventGroupDef_t	file:
uxHigherPriorityReadyTasks	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;$/;"	l
uxHighestPriorityOfWaitingTasks	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	UBaseType_t uxHighestPriorityOfWaitingTasks;$/;"	l
uxHighestWaitingPriority	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^							UBaseType_t uxHighestWaitingPriority;$/;"	l
uxIndex	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^	UBaseType_t 		uxIndex;			\/*< Used to distinguish between co-routines when multiple co-routines use the same co-routine function. *\/$/;"	m	struct:corCoRoutineControlBlock
uxItemSize	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	UBaseType_t uxItemSize;			\/*< The size of each items that the queue will hold. *\/$/;"	m	struct:QueueDefinition	file:
uxLeastSignificantBit	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;$/;"	l
uxLength	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	UBaseType_t uxLength;			\/*< The length of the queue defined as the number of items it will hold, not the number of bytes. *\/$/;"	m	struct:QueueDefinition	file:
uxListRemove	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^	( void ) uxListRemove( ( ListItem_t * ) &( pxCurrentCoRoutine->xGenericListItem ) );$/;"	p	file:
uxListRemove	../Middlewares/Third_Party/FreeRTOS/Source/list.c	/^UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )$/;"	f
uxListRemove	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	( void ) uxListRemove( pxEventListItem );$/;"	p	file:
uxMessagesWaiting	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;$/;"	l
uxMessagesWaiting	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;$/;"	l
uxMessagesWaiting	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	volatile UBaseType_t uxMessagesWaiting;\/*< The number of items currently in the queue. *\/$/;"	m	struct:QueueDefinition	file:
uxMessagesWaiting	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^UBaseType_t uxMessagesWaiting;$/;"	l
uxMutexLength	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;$/;"	l
uxMutexSize	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;$/;"	l
uxMutexesHeld	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		UBaseType_t		uxMutexesHeld;$/;"	m	struct:tskTaskControlBlock	file:
uxNonApplicationTasks	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	const UBaseType_t uxNonApplicationTasks = 1;$/;"	l
uxNumberOfItems	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	volatile UBaseType_t uxNumberOfItems;$/;"	m	struct:xLIST
uxOnlyOneMutexHeld	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;$/;"	l
uxOriginalBitValue	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^EventBits_t uxOriginalBitValue, uxReturn;$/;"	l
uxPendedCounts	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^					UBaseType_t uxPendedCounts = uxPendedTicks; \/* Non-volatile copy. *\/$/;"	l
uxPendedTicks	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;$/;"	v	file:
uxPreviousMessagesWaiting	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^				UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;$/;"	l
uxPriority	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^UBaseType_t uxPriority;$/;"	l
uxPriority	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^	UBaseType_t 		uxPriority;			\/*< The priority of the co-routine in relation to other co-routines. *\/$/;"	m	struct:corCoRoutineControlBlock
uxPriority	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	UBaseType_t uxPriority;$/;"	m	struct:xTASK_PARAMETERS
uxPriority	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t			uxPriority;			\/*< The priority of the task.  0 is the lowest priority. *\/$/;"	m	struct:tskTaskControlBlock	file:
uxPriority	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^UBaseType_t uxPriority;$/;"	l
uxPriorityToUse	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;$/;"	l
uxPriorityUsedOnEntry	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;$/;"	l
uxPriorityUsedOnEntry	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;$/;"	l
uxQueue	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxQueue = configMAX_PRIORITIES;$/;"	l
uxQueue	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;$/;"	l
uxQueueGetQueueNumber	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )$/;"	f
uxQueueMessagesWaiting	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define uxQueueMessagesWaiting	/;"	d
uxQueueMessagesWaiting	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )$/;"	f
uxQueueMessagesWaitingFromISR	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )$/;"	f
uxQueueNumber	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^		UBaseType_t uxQueueNumber;$/;"	m	struct:QueueDefinition	file:
uxQueueSpacesAvailable	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define uxQueueSpacesAvailable	/;"	d
uxQueueSpacesAvailable	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )$/;"	f
uxQueueType	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^#define uxQueueType	/;"	d	file:
uxRecursiveCallCount	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	UBaseType_t uxRecursiveCallCount;\/*< Maintains a count of the number of times a recursive mutex has been recursively 'taken' when the structure is used as a mutex. *\/$/;"	m	struct:SemaphoreData	file:
uxReturn	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^EventBits_t uxOriginalBitValue, uxReturn;$/;"	l
uxReturn	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^EventBits_t uxReturn, uxControlBits = 0;$/;"	l
uxReturn	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^EventBits_t uxReturn;$/;"	l
uxReturn	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^UBaseType_t uxReturn;$/;"	l
uxReturn	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxReturn, uxSavedInterruptState;$/;"	l
uxReturn	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxReturn;$/;"	l
uxReturn	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	configSTACK_DEPTH_TYPE uxReturn;$/;"	l
uxReturn	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^TickType_t uxReturn;$/;"	l
uxSavedInterruptState	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxReturn, uxSavedInterruptState;$/;"	l
uxSavedInterruptStatus	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^UBaseType_t uxSavedInterruptStatus;$/;"	l
uxSavedInterruptStatus	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^UBaseType_t uxSavedInterruptStatus;$/;"	l
uxSavedInterruptStatus	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^UBaseType_t uxSavedInterruptStatus;$/;"	l
uxSavedInterruptStatus	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxSavedInterruptStatus;$/;"	l
uxSavedInterruptStatus	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^UBaseType_t uxSavedInterruptStatus;$/;"	l
uxSchedulerSuspended	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;$/;"	v	file:
uxSemaphoreCount	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;$/;"	l
uxSemaphoreGetCount	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^#define uxSemaphoreGetCount(/;"	d
uxState	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^	uint16_t 			uxState;			\/*< Used internally by the co-routine implementation. *\/$/;"	m	struct:corCoRoutineControlBlock
uxStreamBufferGetStreamBufferNumber	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	UBaseType_t uxStreamBufferGetStreamBufferNumber( StreamBufferHandle_t xStreamBuffer )$/;"	f
uxStreamBufferNumber	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^		UBaseType_t uxStreamBufferNumber;		\/* Used for tracing purposes. *\/$/;"	m	struct:StreamBufferDef_t	file:
uxStreamBufferNumber	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	UBaseType_t uxStreamBufferNumber;$/;"	l
uxTCBNumber	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		UBaseType_t		uxTCBNumber;		\/*< Stores a number that increments each time a TCB is created.  It allows debuggers to determine when a task has been deleted and then recreated. *\/$/;"	m	struct:tskTaskControlBlock	file:
uxTask	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;$/;"	l
uxTask	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxTask = 0;$/;"	l
uxTaskGetNumberOfTasks	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define uxTaskGetNumberOfTasks	/;"	d
uxTaskGetNumberOfTasks	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^UBaseType_t uxTaskGetNumberOfTasks( void )$/;"	f
uxTaskGetStackHighWaterMark	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define uxTaskGetStackHighWaterMark	/;"	d
uxTaskGetStackHighWaterMark	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )$/;"	f
uxTaskGetStackHighWaterMark2	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define uxTaskGetStackHighWaterMark2	/;"	d
uxTaskGetStackHighWaterMark2	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )$/;"	f
uxTaskGetSystemState	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define uxTaskGetSystemState	/;"	d
uxTaskGetSystemState	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t * const pulTotalRunTime )$/;"	f
uxTaskGetTaskNumber	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )$/;"	f
uxTaskNumber	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		UBaseType_t		uxTaskNumber;		\/*< Stores a number specifically for use by third party trace code. *\/$/;"	m	struct:tskTaskControlBlock	file:
uxTaskNumber	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;$/;"	v	file:
uxTaskPriorityGet	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define uxTaskPriorityGet	/;"	d
uxTaskPriorityGet	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )$/;"	f
uxTaskPriorityGetFromISR	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )$/;"	f
uxTaskResetEventItemValue	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^TickType_t uxTaskResetEventItemValue( void )$/;"	f
uxTimerGetTimerNumber	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )$/;"	f
uxTimerNumber	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^		UBaseType_t			uxTimerNumber;		\/*<< An ID assigned by trace tools such as FreeRTOS+Trace *\/$/;"	m	struct:tmrTimerControl	file:
uxTopCoRoutineReadyPriority	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^static UBaseType_t uxTopCoRoutineReadyPriority = 0;$/;"	v	file:
uxTopReadyPriority	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;$/;"	v	file:
v	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^    uint32_t                       v;   \/\/\/< message as 32-bit value$/;"	m	union:__anon8::__anon9
v	libfoxenflac/foxen/flac.c	/^	uint8_t v = READ_BITS_FAST_DCRC(8U);$/;"	l
vApplicationDaemonTaskStartupHook	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^__WEAK void vApplicationDaemonTaskStartupHook (void){}$/;"	f
vApplicationDaemonTaskStartupHook	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^extern void vApplicationDaemonTaskStartupHook (void);$/;"	p	file:
vApplicationDaemonTaskStartupHook	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^		extern void vApplicationDaemonTaskStartupHook( void );$/;"	p	file:
vApplicationGetIdleTaskMemory	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^extern void vApplicationGetIdleTaskMemory  (StaticTask_t **ppxIdleTaskTCBBuffer,  StackType_t **ppxIdleTaskStackBuffer,  uint32_t *pulIdleTaskStackSize);$/;"	p	file:
vApplicationGetIdleTaskMemory	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {$/;"	f
vApplicationGetIdleTaskMemory	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize ); \/*lint !e526 Symbol not defined as it is an application callback. *\/$/;"	p	file:
vApplicationGetTimerTaskMemory	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^extern void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize);$/;"	p	file:
vApplicationGetTimerTaskMemory	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {$/;"	f
vApplicationGetTimerTaskMemory	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize );$/;"	p	file:
vApplicationIdleHook	../Core/Src/freertos.c	/^__weak void vApplicationIdleHook( void )$/;"	f
vApplicationIdleHook	../Core/Src/freertos.c	/^void vApplicationIdleHook(void);$/;"	p	file:
vApplicationIdleHook	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^__WEAK void vApplicationIdleHook (void){}$/;"	f
vApplicationIdleHook	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^extern void vApplicationIdleHook (void);$/;"	p	file:
vApplicationIdleHook	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^			extern void vApplicationIdleHook( void );$/;"	p	file:
vApplicationMallocFailedHook	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^__WEAK void vApplicationMallocFailedHook (void){}$/;"	f
vApplicationMallocFailedHook	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^extern void vApplicationMallocFailedHook (void);$/;"	p	file:
vApplicationMallocFailedHook	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^			extern void vApplicationMallocFailedHook( void );$/;"	p	file:
vApplicationStackOverflowHook	../Core/Src/freertos.c	/^__weak void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName)$/;"	f
vApplicationStackOverflowHook	../Core/Src/freertos.c	/^void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName);$/;"	p	file:
vApplicationStackOverflowHook	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^__WEAK void vApplicationStackOverflowHook (TaskHandle_t xTask, signed char *pcTaskName) {$/;"	f
vApplicationStackOverflowHook	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^extern void vApplicationStackOverflowHook (TaskHandle_t xTask, signed char *pcTaskName);$/;"	p	file:
vApplicationStackOverflowHook	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );$/;"	p	file:
vApplicationTickHook	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^ __WEAK void vApplicationTickHook (void){}$/;"	f
vApplicationTickHook	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^extern void vApplicationTickHook (void);$/;"	p	file:
vApplicationTickHook	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	extern void vApplicationTickHook( void ); \/*lint !e526 Symbol not defined as it is an application callback. *\/$/;"	p	file:
vCoRoutineAddToDelayedList	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^void vCoRoutineAddToDelayedList( TickType_t xTicksToDelay, List_t *pxEventList )$/;"	f
vCoRoutineAddToDelayedList	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^void vCoRoutineAddToDelayedList( TickType_t xTicksToDelay, List_t *pxEventList );$/;"	p
vCoRoutineSchedule	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^void vCoRoutineSchedule( void )$/;"	f
vCoRoutineSchedule	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^void vCoRoutineSchedule( void );$/;"	p
vEventGroupClearBitsCallback	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^void vEventGroupClearBitsCallback( void *pvEventGroup, const uint32_t ulBitsToClear )$/;"	f
vEventGroupDelete	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^void vEventGroupDelete( EventGroupHandle_t xEventGroup )$/;"	f
vEventGroupDelete	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vEventGroupDelete	/;"	d
vEventGroupSetBitsCallback	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^void vEventGroupSetBitsCallback( void *pvEventGroup, const uint32_t ulBitsToSet )$/;"	f
vEventGroupSetNumber	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^	void vEventGroupSetNumber( void * xEventGroup, UBaseType_t uxEventGroupNumber )$/;"	f
vListInitialise	../Middlewares/Third_Party/FreeRTOS/Source/list.c	/^void vListInitialise( List_t * const pxList )$/;"	f
vListInitialiseItem	../Middlewares/Third_Party/FreeRTOS/Source/list.c	/^void vListInitialiseItem( ListItem_t * const pxItem )$/;"	f
vListInsert	../Middlewares/Third_Party/FreeRTOS/Source/list.c	/^void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )$/;"	f
vListInsertEnd	../Middlewares/Third_Party/FreeRTOS/Source/list.c	/^void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )$/;"	f
vMessageBufferDelete	../Middlewares/Third_Party/FreeRTOS/Source/include/message_buffer.h	/^#define vMessageBufferDelete(/;"	d
vPortFree	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^void vPortFree( void *pv )$/;"	f
vPortInitialiseBlocks	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^void vPortInitialiseBlocks( void )$/;"	f
vPortSVCHandler	../Core/Inc/FreeRTOSConfig.h	/^#define vPortSVCHandler /;"	d
vPortSuppressTicksAndSleep	../Core/Src/freertos.c	/^__weak void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime )$/;"	f
vPortSuppressTicksAndSleep	../statemachine/statemachine.c	/^void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime )$/;"	f
vPortSuppressTicksAndSleep	../statemachine/statemachine.h	/^void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );$/;"	p
vQueueAddToRegistry	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define vQueueAddToRegistry(/;"	d
vQueueAddToRegistry	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^			#define vQueueAddToRegistry	/;"	d
vQueueAddToRegistry	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	f
vQueueDelete	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vQueueDelete	/;"	d
vQueueDelete	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^void vQueueDelete( QueueHandle_t xQueue )$/;"	f
vQueueSetQueueNumber	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )$/;"	f
vQueueUnregisterQueue	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define vQueueUnregisterQueue(/;"	d
vQueueUnregisterQueue	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^			#define vQueueUnregisterQueue	/;"	d
vQueueUnregisterQueue	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	void vQueueUnregisterQueue( QueueHandle_t xQueue )$/;"	f
vQueueWaitForMessageRestricted	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )$/;"	f
vSemaphoreCreateBinary	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^	#define vSemaphoreCreateBinary(/;"	d
vSemaphoreDelete	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^#define vSemaphoreDelete(/;"	d
vStreamBufferDelete	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vStreamBufferDelete	/;"	d
vStreamBufferDelete	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^void vStreamBufferDelete( StreamBufferHandle_t xStreamBuffer )$/;"	f
vStreamBufferSetStreamBufferNumber	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	void vStreamBufferSetStreamBufferNumber( StreamBufferHandle_t xStreamBuffer, UBaseType_t uxStreamBufferNumber )$/;"	f
vTaskAllocateMPURegions	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vTaskAllocateMPURegions	/;"	d
vTaskAllocateMPURegions	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )$/;"	f
vTaskDelay	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vTaskDelay	/;"	d
vTaskDelay	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskDelay( const TickType_t xTicksToDelay )$/;"	f
vTaskDelayUntil	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vTaskDelayUntil	/;"	d
vTaskDelayUntil	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )$/;"	f
vTaskDelete	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vTaskDelete	/;"	d
vTaskDelete	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskDelete( TaskHandle_t xTaskToDelete )$/;"	f
vTaskEndScheduler	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^void vTaskEndScheduler( void )$/;"	f
vTaskEnterCritical	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskEnterCritical( void )$/;"	f
vTaskExitCritical	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskExitCritical( void )$/;"	f
vTaskGetInfo	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vTaskGetInfo	/;"	d
vTaskGetInfo	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, eTaskState eState )$/;"	f
vTaskGetRunTimeStats	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vTaskGetRunTimeStats	/;"	d
vTaskGetRunTimeStats	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskGetRunTimeStats( char *pcWriteBuffer )$/;"	f
vTaskGetTaskInfo	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define vTaskGetTaskInfo /;"	d
vTaskInternalSetTimeOutState	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )$/;"	f
vTaskList	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vTaskList	/;"	d
vTaskList	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskList( char * pcWriteBuffer )$/;"	f
vTaskMissedYield	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^void vTaskMissedYield( void )$/;"	f
vTaskNotifyGiveFromISR	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )$/;"	f
vTaskPlaceOnEventList	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )$/;"	f
vTaskPlaceOnEventListRestricted	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )$/;"	f
vTaskPlaceOnUnorderedEventList	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait )$/;"	f
vTaskPriorityDisinheritAfterTimeout	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestPriorityWaitingTask )$/;"	f
vTaskPrioritySet	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vTaskPrioritySet	/;"	d
vTaskPrioritySet	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )$/;"	f
vTaskRemoveFromUnorderedEventList	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )$/;"	f
vTaskResume	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vTaskResume	/;"	d
vTaskResume	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskResume( TaskHandle_t xTaskToResume )$/;"	f
vTaskSetApplicationTaskTag	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vTaskSetApplicationTaskTag	/;"	d
vTaskSetApplicationTaskTag	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )$/;"	f
vTaskSetTaskNumber	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )$/;"	f
vTaskSetThreadLocalStoragePointer	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vTaskSetThreadLocalStoragePointer	/;"	d
vTaskSetThreadLocalStoragePointer	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue )$/;"	f
vTaskSetTimeOutState	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vTaskSetTimeOutState	/;"	d
vTaskSetTimeOutState	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )$/;"	f
vTaskStartScheduler	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^void vTaskStartScheduler( void )$/;"	f
vTaskStepTick	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskStepTick( const TickType_t xTicksToJump )$/;"	f
vTaskSuspend	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vTaskSuspend	/;"	d
vTaskSuspend	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	void vTaskSuspend( TaskHandle_t xTaskToSuspend )$/;"	f
vTaskSuspendAll	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vTaskSuspendAll	/;"	d
vTaskSuspendAll	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^void vTaskSuspendAll( void )$/;"	f
vTaskSwitchContext	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^void vTaskSwitchContext( void )$/;"	f
vTimerSetReloadMode	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vTimerSetReloadMode	/;"	d
vTimerSetReloadMode	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^void vTimerSetReloadMode( TimerHandle_t xTimer, const UBaseType_t uxAutoReload )$/;"	f
vTimerSetTimerID	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define vTimerSetTimerID	/;"	d
vTimerSetTimerID	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )$/;"	f
vTimerSetTimerNumber	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	void vTimerSetTimerNumber( TimerHandle_t xTimer, UBaseType_t uxTimerNumber )$/;"	f
val	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  uint32_t val;$/;"	l
val	libfoxenflac/foxen/flac.c	/^				const uint32_t val = (q << sfh->rice_parameter) | r;$/;"	l
valid	libfoxenflac/foxen/flac.c	/^			bool valid = padding == 0U;$/;"	l
value	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h	/^  } value;                              \/\/\/< event value$/;"	m	struct:__anon8	typeref:union:__anon8::__anon9
vbmon_th	../sub/powerui/powerui_pmic.c	/^	uint8_t vbmon_th = ((tmp >> 2) & 0x07);$/;"	l
verify_buffer	../peripherals/memory/mem_peri.h	/^    uint8_t verify_buffer[MEM_PP_MAXBYTES];$/;"	m	struct:__anon4
verify_buffer	unit_test/mocks/include/mem_peri.h	/^    uint8_t verify_buffer[MEM_PP_MAXBYTES];$/;"	m	struct:__anon12
vin_ov	../sub/powerui/powerui_types.h	/^    bool vin_ov;$/;"	m	struct:__anon9
vin_uv	../sub/powerui/powerui_types.h	/^    bool vin_uv;$/;"	m	struct:__anon9
voffset	../peripherals/memory/mem_peri.c	/^	size_t voffset = offset;$/;"	l
volume	../sub/audio/audio_types.h	/^    int16_t volume;$/;"	m	struct:__anon16
volume	../sub/audio/audio_types.h	/^    int16_t volume;$/;"	m	struct:__anon17
volume	unit_test/mocks/include/audio_types.h	/^    int16_t volume;$/;"	m	struct:__anon5
volume	unit_test/mocks/include/audio_types.h	/^    int16_t volume;$/;"	m	struct:__anon6
vsize	../peripherals/memory/mem_peri.c	/^	size_t vsize;$/;"	l
w	../peripherals/memory/sha-256.c	/^			uint32_t w[16];$/;"	l
wait_all	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  BaseType_t wait_all;$/;"	l
wake_cmd	../statemachine/statemachine_types.h	/^    bool wake_cmd;$/;"	m	struct:__anon5
wasted_bits	libfoxenflac/foxen/flac.c	/^			uint8_t wasted_bits = READ_BITS_FAST_CRC(1U);$/;"	l
wasted_bits	libfoxenflac/foxen/flac.c	/^	uint8_t wasted_bits;$/;"	m	struct:__anon12	file:
word_count	../sub/audio/audio_mem.c	/^    size_t start_address, word_count, data_size;$/;"	l
write_buff	../peripherals/i2c/i2c_peri.h	/^	void *write_buff;$/;"	m	struct:__anon5
write_buff	../peripherals/spi/spi_peri.h	/^	void *write_buff;$/;"	m	struct:__anon8
write_count	../peripherals/i2c/i2c_peri.h	/^	size_t write_count;$/;"	m	struct:__anon5
wrp_i2s_cfg_sample_rate	wrappers/wrp_i2s.c	/^int32_t wrp_i2s_cfg_sample_rate(uint32_t sr) {$/;"	f
wrp_i2s_cfg_sample_rate	wrappers/wrp_i2s.h	/^int32_t wrp_i2s_cfg_sample_rate(uint32_t sr);$/;"	p
wrp_i2s_get_dma_buf	wrappers/wrp_i2s.c	/^uint32_t wrp_i2s_get_dma_buf(int16_t *b) {$/;"	f
wrp_i2s_get_dma_buf	wrappers/wrp_i2s.h	/^uint32_t wrp_i2s_get_dma_buf(int16_t *b);$/;"	p
wrp_i2s_init	wrappers/wrp_i2s.c	/^int32_t wrp_i2s_init(I2sObject *obj) {$/;"	f
wrp_i2s_init	wrappers/wrp_i2s.h	/^int32_t wrp_i2s_init(I2sObject *obj);$/;"	p
wrp_i2s_stop	wrappers/wrp_i2s.c	/^int32_t wrp_i2s_stop(void) {$/;"	f
wrp_i2s_stop	wrappers/wrp_i2s.h	/^int32_t wrp_i2s_stop(void);$/;"	p
wrp_i2s_tx	wrappers/wrp_i2s.c	/^int32_t wrp_i2s_tx(bool volatile *tx_complete, bool volatile *tx_halfcomplete) {$/;"	f
wrp_i2s_tx	wrappers/wrp_i2s.h	/^int32_t wrp_i2s_tx(bool volatile *tx_complete, bool volatile *tx_halfcomplete);$/;"	p
wrp_mem_get_address	wrappers/wrp_mem.c	/^int32_t wrp_mem_get_address(void) { return mem_elem.offset; }$/;"	f
wrp_mem_get_address	wrappers/wrp_mem.h	/^int32_t wrp_mem_get_address(void);$/;"	p
wrp_mem_get_size	wrappers/wrp_mem.c	/^int32_t wrp_mem_get_size(void) { return mem_elem.size; }$/;"	f
wrp_mem_get_size	wrappers/wrp_mem.h	/^int32_t wrp_mem_get_size(void);$/;"	p
wrp_mem_init	wrappers/wrp_mem.c	/^int32_t wrp_mem_init(MemObject *m) {$/;"	f
wrp_mem_init	wrappers/wrp_mem.h	/^int32_t wrp_mem_init(MemObject *m);$/;"	p
wrp_mem_read	wrappers/wrp_mem.c	/^int32_t wrp_mem_read(uint8_t *buf, uint32_t offset, uint32_t size) {$/;"	f
wrp_mem_read	wrappers/wrp_mem.h	/^int32_t wrp_mem_read(uint8_t *buf, uint32_t offset, uint32_t size);$/;"	p
wrp_mem_set_element	wrappers/wrp_mem.c	/^int32_t wrp_mem_set_element(uint8_t elem_idx) {$/;"	f
wrp_mem_set_element	wrappers/wrp_mem.h	/^int32_t wrp_mem_set_element(uint8_t elem_idx);$/;"	p
wsel	unit_test/unit_test.c	/^    bool wsel = false;$/;"	l
x	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t uxArraySize, x;$/;"	l
x	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	UBaseType_t x;$/;"	l
x	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	size_t x;$/;"	l
x	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^UBaseType_t x;$/;"	l
xActiveTimerList1	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^PRIVILEGED_DATA static List_t xActiveTimerList1 = { 0 };$/;"	v	file:
xActiveTimerList2	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^PRIVILEGED_DATA static List_t xActiveTimerList2 = { 0 };$/;"	v	file:
xAlreadyYielded	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^BaseType_t xAlreadyYielded;$/;"	l
xAlreadyYielded	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^BaseType_t xWaitConditionMet, xAlreadyYielded;$/;"	l
xAlreadyYielded	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xAlreadyYielded = pdFALSE;$/;"	l
xAlreadyYielded	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;$/;"	l
xAlreadyYielded	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^BaseType_t xAlreadyYielded = pdFALSE;$/;"	l
xBlockAllocatedBit	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^static size_t xBlockAllocatedBit = 0;$/;"	v	file:
xBlockSize	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^	size_t xBlockSize;						\/*<< The size of the free block. *\/$/;"	m	struct:A_BLOCK_LINK	file:
xBreakLoop	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xBreakLoop;$/;"	l
xBytesAvailable	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;$/;"	l
xBytesAvailable	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xReturn, xBytesAvailable, xOriginalTail;$/;"	l
xBytesToStoreMessageLength	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xBytesToStoreMessageLength;$/;"	l
xBytesToStoreMessageLength	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;$/;"	l
xCallbackParameters	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^			CallbackParameters_t xCallbackParameters;$/;"	m	union:tmrTimerQueueMessage::__anon2	file:
xCoRoutineCreate	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^BaseType_t xCoRoutineCreate( crCOROUTINE_CODE pxCoRoutineCode, UBaseType_t uxPriority, UBaseType_t uxIndex )$/;"	f
xCoRoutineCreate	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^BaseType_t xCoRoutineCreate( crCOROUTINE_CODE pxCoRoutineCode, UBaseType_t uxPriority, UBaseType_t uxIndex );$/;"	p
xCoRoutineHandle	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define xCoRoutineHandle /;"	d
xCoRoutineRemoveFromEventList	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^BaseType_t xCoRoutineRemoveFromEventList( const List_t *pxEventList )$/;"	f
xCoRoutineRemoveFromEventList	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^BaseType_t xCoRoutineRemoveFromEventList( const List_t *pxEventList );$/;"	p
xCoRoutineTickCount	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^static TickType_t xCoRoutineTickCount = 0, xLastTickCount = 0, xPassedTicks = 0;$/;"	v	file:
xConstTickCount	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^			const TickType_t xConstTickCount = xTickCount;$/;"	l
xConstTickCount	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;$/;"	l
xConstTickCount	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		const TickType_t xConstTickCount = xTickCount;$/;"	l
xConstTickCount	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^const TickType_t xConstTickCount = xTickCount;$/;"	l
xCount	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xCount, xFirstLength, xNextTail;$/;"	l
xCount	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xCount;$/;"	l
xDelayedCoRoutineList1	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^static List_t xDelayedCoRoutineList1;									\/*< Delayed co-routines. *\/$/;"	v	file:
xDelayedCoRoutineList2	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^static List_t xDelayedCoRoutineList2;									\/*< Delayed co-routines (two lists are used - one for delays that have overflowed the current tick count. *\/$/;"	v	file:
xDelayedTaskList1	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA static List_t xDelayedTaskList1 = { 0 };						\/*< Delayed tasks. *\/$/;"	v	file:
xDelayedTaskList2	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA static List_t xDelayedTaskList2 = { 0 };						\/*< Delayed tasks (two lists are used - one for delays that have overflowed the current tick count. *\/$/;"	v	file:
xDummy1	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		TickType_t xDummy1;$/;"	m	struct:xSTATIC_LIST
xDummy1	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		TickType_t xDummy1;$/;"	m	struct:xSTATIC_LIST_ITEM
xDummy1	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		TickType_t xDummy1;$/;"	m	struct:xSTATIC_MINI_LIST_ITEM
xDummy1	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	TickType_t xDummy1;$/;"	m	struct:xSTATIC_EVENT_GROUP
xDummy17	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		struct	_reent	xDummy17;$/;"	m	struct:xSTATIC_TCB	typeref:struct:xSTATIC_TCB::_reent
xDummy2	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		xMPU_SETTINGS	xDummy2;$/;"	m	struct:xSTATIC_TCB
xDummy2	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	StaticListItem_t	xDummy2;$/;"	m	struct:xSTATIC_TIMER
xDummy2	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	StaticList_t xDummy2;$/;"	m	struct:xSTATIC_EVENT_GROUP
xDummy2	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	TickType_t xDummy2;$/;"	m	struct:xSTATIC_LIST_ITEM
xDummy2	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	TickType_t xDummy2;$/;"	m	struct:xSTATIC_MINI_LIST_ITEM
xDummy3	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	StaticListItem_t	xDummy3[ 2 ];$/;"	m	struct:xSTATIC_TCB
xDummy3	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	StaticList_t xDummy3[ 2 ];$/;"	m	struct:xSTATIC_QUEUE
xDummy3	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	TickType_t			xDummy3;$/;"	m	struct:xSTATIC_TIMER
xDummy4	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		TickType_t xDummy4;$/;"	m	struct:xSTATIC_LIST_ITEM
xDummy4	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	StaticMiniListItem_t xDummy4;$/;"	m	struct:xSTATIC_LIST
xDummy5	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^		TickType_t xDummy5;$/;"	m	struct:xSTATIC_LIST
xElapsedTime	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;$/;"	l
xEntryTimeSet	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;$/;"	l
xEntryTimeSet	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^BaseType_t xEntryTimeSet = pdFALSE;$/;"	l
xEventGroupClearBits	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^EventBits_t xEventGroupClearBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToClear )$/;"	f
xEventGroupClearBits	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xEventGroupClearBits	/;"	d
xEventGroupClearBitsFromISR	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^	BaseType_t xEventGroupClearBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToClear )$/;"	f
xEventGroupClearBitsFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/event_groups.h	/^	#define xEventGroupClearBitsFromISR(/;"	d
xEventGroupCreate	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^	EventGroupHandle_t xEventGroupCreate( void )$/;"	f
xEventGroupCreate	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xEventGroupCreate	/;"	d
xEventGroupCreateStatic	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^	EventGroupHandle_t xEventGroupCreateStatic( StaticEventGroup_t *pxEventGroupBuffer )$/;"	f
xEventGroupCreateStatic	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xEventGroupCreateStatic	/;"	d
xEventGroupGetBits	../Middlewares/Third_Party/FreeRTOS/Source/include/event_groups.h	/^#define xEventGroupGetBits(/;"	d
xEventGroupGetBitsFromISR	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^EventBits_t xEventGroupGetBitsFromISR( EventGroupHandle_t xEventGroup )$/;"	f
xEventGroupSetBits	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^		( void ) xEventGroupSetBits( xEventGroup, uxBitsToSet );$/;"	p	file:
xEventGroupSetBits	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet )$/;"	f
xEventGroupSetBits	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xEventGroupSetBits	/;"	d
xEventGroupSetBitsFromISR	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^	BaseType_t xEventGroupSetBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, BaseType_t *pxHigherPriorityTaskWoken )$/;"	f
xEventGroupSetBitsFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/event_groups.h	/^	#define xEventGroupSetBitsFromISR(/;"	d
xEventGroupSync	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^EventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, const EventBits_t uxBitsToWaitFor, TickType_t xTicksToWait )$/;"	f
xEventGroupSync	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xEventGroupSync	/;"	d
xEventGroupWaitBits	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor, const BaseType_t xClearOnExit, const BaseType_t xWaitForAllBits, TickType_t xTicksToWait )$/;"	f
xEventGroupWaitBits	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xEventGroupWaitBits	/;"	d
xEventListItem	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^	ListItem_t			xEventListItem;		\/*< List item used to place the CRCB in event lists. *\/$/;"	m	struct:corCoRoutineControlBlock
xEventListItem	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	ListItem_t			xEventListItem;		\/*< Used to reference a task from an event list. *\/$/;"	m	struct:tskTaskControlBlock	file:
xExpectedIdleTime	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		TickType_t xExpectedIdleTime;$/;"	l
xFirstLength	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xCount, xFirstLength, xNextTail;$/;"	l
xFirstLength	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xNextHead, xFirstLength;$/;"	l
xFreeBytesRemaining	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^static size_t xFreeBytesRemaining = 0U;$/;"	v	file:
xGenericListItem	../Middlewares/Third_Party/FreeRTOS/Source/include/croutine.h	/^	ListItem_t			xGenericListItem;	\/*< List item used to place the CRCB in ready and blocked queues. *\/$/;"	m	struct:corCoRoutineControlBlock
xHandle	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	TaskHandle_t xHandle;			\/* The handle of the task to which the rest of the information in the structure relates. *\/$/;"	m	struct:xTASK_STATUS
xHandle	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^		QueueHandle_t xHandle;$/;"	m	struct:QUEUE_REGISTRY_ITEM	file:
xHandle	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	QueueHandle_t xHandle;$/;"	l
xHead	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	volatile size_t xHead;				\/* Index to the next item to write within the buffer. *\/$/;"	m	struct:StreamBufferDef_t	file:
xHeapRegions	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^    static HeapRegion_t xHeapRegions[] = {$/;"	v	file:
xHeapStructSize	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^static const size_t xHeapStructSize	= ( sizeof( BlockLink_t ) + ( ( size_t ) ( portBYTE_ALIGNMENT - 1 ) ) ) & ~( ( size_t ) portBYTE_ALIGNMENT_MASK );$/;"	v	file:
xHigherPriorityTaskWoken	../peripherals/i2c/i2c_peri.c	/^	static BaseType_t xHigherPriorityTaskWoken;$/;"	l	file:
xHigherPriorityTaskWoken	../peripherals/spi/spi_peri.c	/^	static BaseType_t xHigherPriorityTaskWoken;$/;"	l	file:
xHigherPriorityTaskWoken	../sub/powerui/powerui_frame.c	/^	static BaseType_t xHigherPriorityTaskWoken;$/;"	l	file:
xHigherPriorityTaskWoken	../sub/powerui/powerui_pb.c	/^	static BaseType_t xHigherPriorityTaskWoken;$/;"	l	file:
xIdleTaskHandle	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			\/*< Holds the handle of the idle task.  The idle task is created automatically when the scheduler is started. *\/$/;"	v	file:
xInheritanceOccurred	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	BaseType_t xInheritanceOccurred = pdFALSE;$/;"	l
xItemValue	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	configLIST_VOLATILE TickType_t xItemValue;			\/*< The value being listed.  In most cases this is used to sort the list in descending order. *\/$/;"	m	struct:xLIST_ITEM
xItemValue	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	configLIST_VOLATILE TickType_t xItemValue;$/;"	m	struct:xMINI_LIST_ITEM
xItemValue	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^TickType_t xItemValue;$/;"	l
xLIST	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^struct xLIST;$/;"	x
xLIST	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^typedef struct xLIST$/;"	s
xLIST_ITEM	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^struct xLIST_ITEM$/;"	s
xLastTickCount	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^static TickType_t xCoRoutineTickCount = 0, xLastTickCount = 0, xPassedTicks = 0;$/;"	v	file:
xLastTime	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; \/*lint !e956 Variable is only accessible to one task. *\/$/;"	l	file:
xLength	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	size_t xLength;						\/* The length of the buffer pointed to by pucBuffer. *\/$/;"	m	struct:StreamBufferDef_t	file:
xList	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define xList /;"	d
xListEnd	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^	MiniListItem_t xListEnd;							\/*< List item that contains the maximum possible item value meaning it is always at the end of the list and is therefore used as a marker. *\/$/;"	m	struct:xLIST
xListItem	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define xListItem /;"	d
xListWasEmpty	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^BaseType_t xListWasEmpty;$/;"	l
xMEMORY_REGION	../Middlewares/Third_Party/FreeRTOS/Source/include/portable.h	/^	struct xMEMORY_REGION;$/;"	x
xMEMORY_REGION	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^typedef struct xMEMORY_REGION$/;"	s
xMINI_LIST_ITEM	../Middlewares/Third_Party/FreeRTOS/Source/include/list.h	/^struct xMINI_LIST_ITEM$/;"	s
xMPUSettings	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		xMPU_SETTINGS	xMPUSettings;		\/*< The MPU settings are defined as part of the port layer.  THIS MUST BE THE SECOND MEMBER OF THE TCB STRUCT. *\/$/;"	m	struct:tskTaskControlBlock	file:
xMatchFound	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^BaseType_t xMatchFound = pdFALSE;$/;"	l
xMemoryRegion	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define xMemoryRegion /;"	d
xMessage	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	DaemonTaskMessage_t xMessage;$/;"	l
xMessage	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^DaemonTaskMessage_t xMessage;$/;"	l
xMessageBufferCreate	../Middlewares/Third_Party/FreeRTOS/Source/include/message_buffer.h	/^#define xMessageBufferCreate(/;"	d
xMessageBufferCreateStatic	../Middlewares/Third_Party/FreeRTOS/Source/include/message_buffer.h	/^#define xMessageBufferCreateStatic(/;"	d
xMessageBufferIsEmpty	../Middlewares/Third_Party/FreeRTOS/Source/include/message_buffer.h	/^#define xMessageBufferIsEmpty(/;"	d
xMessageBufferIsFull	../Middlewares/Third_Party/FreeRTOS/Source/include/message_buffer.h	/^#define xMessageBufferIsFull(/;"	d
xMessageBufferNextLengthBytes	../Middlewares/Third_Party/FreeRTOS/Source/include/message_buffer.h	/^#define xMessageBufferNextLengthBytes(/;"	d
xMessageBufferReceive	../Middlewares/Third_Party/FreeRTOS/Source/include/message_buffer.h	/^#define xMessageBufferReceive(/;"	d
xMessageBufferReceiveCompletedFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/message_buffer.h	/^#define xMessageBufferReceiveCompletedFromISR(/;"	d
xMessageBufferReceiveFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/message_buffer.h	/^#define xMessageBufferReceiveFromISR(/;"	d
xMessageBufferReset	../Middlewares/Third_Party/FreeRTOS/Source/include/message_buffer.h	/^#define xMessageBufferReset(/;"	d
xMessageBufferSend	../Middlewares/Third_Party/FreeRTOS/Source/include/message_buffer.h	/^#define xMessageBufferSend(/;"	d
xMessageBufferSendCompletedFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/message_buffer.h	/^#define xMessageBufferSendCompletedFromISR(/;"	d
xMessageBufferSendFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/message_buffer.h	/^#define xMessageBufferSendFromISR(/;"	d
xMessageBufferSpaceAvailable	../Middlewares/Third_Party/FreeRTOS/Source/include/message_buffer.h	/^#define xMessageBufferSpaceAvailable(/;"	d
xMessageBufferSpacesAvailable	../Middlewares/Third_Party/FreeRTOS/Source/include/message_buffer.h	/^#define xMessageBufferSpacesAvailable(/;"	d
xMessageID	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	BaseType_t			xMessageID;			\/*<< The command being sent to the timer service task. *\/$/;"	m	struct:tmrTimerQueueMessage	file:
xMessageValue	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	TickType_t			xMessageValue;		\/*<< An optional value used by a subset of commands, for example, when changing the period of a timer. *\/$/;"	m	struct:tmrTimerParameters	file:
xMinimumEverFreeBytesRemaining	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^static size_t xMinimumEverFreeBytesRemaining = 0U;$/;"	v	file:
xMutexHolder	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	TaskHandle_t xMutexHolder;		 \/*< The handle of the task that holds the mutex. *\/$/;"	m	struct:SemaphoreData	file:
xNewLib_reent	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		struct	_reent xNewLib_reent;$/;"	m	struct:tskTaskControlBlock	typeref:struct:tskTaskControlBlock::_reent	file:
xNewQueue	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	QueueHandle_t xNewQueue;$/;"	l
xNextExpireTime	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^TickType_t xNextExpireTime, xReloadTime;$/;"	l
xNextExpireTime	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^TickType_t xNextExpireTime;$/;"	l
xNextHead	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xNextHead, xFirstLength;$/;"	l
xNextMessageLength	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xOriginalTail, xReceivedLength, xNextMessageLength;$/;"	l
xNextTail	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xCount, xFirstLength, xNextTail;$/;"	l
xNextTaskUnblockTime	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; \/* Initialised to portMAX_DELAY before the scheduler starts. *\/$/;"	v	file:
xNumOfOverflows	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;$/;"	v	file:
xOriginalTail	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xOriginalTail, xReceivedLength, xNextMessageLength;$/;"	l
xOriginalTail	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xReturn, xBytesAvailable, xOriginalTail;$/;"	l
xOverflowCount	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	BaseType_t xOverflowCount;$/;"	m	struct:xTIME_OUT
xPassedTicks	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^static TickType_t xCoRoutineTickCount = 0, xLastTickCount = 0, xPassedTicks = 0;$/;"	v	file:
xPendingReadyCoRoutineList	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^static List_t xPendingReadyCoRoutineList;								\/*< Holds co-routines that have been readied by an external event.  They cannot be added directly to the ready lists as the ready lists cannot be accessed by interrupts. *\/$/;"	v	file:
xPendingReadyList	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA static List_t xPendingReadyList = { 0 };						\/*< Tasks that have been readied while the scheduler was suspended.  They will be moved to the ready list when the scheduler is resumed. *\/$/;"	v	file:
xPortGetFreeHeapSize	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^size_t xPortGetFreeHeapSize( void )$/;"	f
xPortGetMinimumEverFreeHeapSize	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^size_t xPortGetMinimumEverFreeHeapSize( void )$/;"	f
xPortPendSVHandler	../Core/Inc/FreeRTOSConfig.h	/^#define xPortPendSVHandler /;"	d
xPortSysTickHandler	../Core/Inc/FreeRTOSConfig.h	/^#define xPortSysTickHandler /;"	d
xPortSysTickHandler	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^extern void xPortSysTickHandler (void);$/;"	p	file:
xProcessTimerNow	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^BaseType_t xProcessTimerNow = pdFALSE;$/;"	l
xQUEUE	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^} xQUEUE;$/;"	t	typeref:struct:QueueDefinition	file:
xQueue	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^		QueuePointers_t xQueue;		\/*< Data required exclusively when this structure is used as a queue. *\/$/;"	m	union:QueueDefinition::__anon1	file:
xQueueAddToSet	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xQueueAddToSet	/;"	d
xQueueAddToSet	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	BaseType_t xQueueAddToSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet )$/;"	f
xQueueCRReceive	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait );$/;"	p
xQueueCRReceive	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )$/;"	f
xQueueCRReceiveFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxTaskWoken );$/;"	p
xQueueCRReceiveFromISR	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWoken )$/;"	f
xQueueCRSend	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait );$/;"	p
xQueueCRSend	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait )$/;"	f
xQueueCRSendFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRoutinePreviouslyWoken );$/;"	p
xQueueCRSendFromISR	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRoutinePreviouslyWoken )$/;"	f
xQueueCreate	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^	#define xQueueCreate(/;"	d
xQueueCreateCountingSemaphore	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xQueueCreateCountingSemaphore	/;"	d
xQueueCreateCountingSemaphore	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount )$/;"	f
xQueueCreateCountingSemaphoreStatic	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xQueueCreateCountingSemaphoreStatic	/;"	d
xQueueCreateCountingSemaphoreStatic	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount, StaticQueue_t *pxStaticQueue )$/;"	f
xQueueCreateMutex	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xQueueCreateMutex	/;"	d
xQueueCreateMutex	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )$/;"	f
xQueueCreateMutexStatic	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xQueueCreateMutexStatic	/;"	d
xQueueCreateMutexStatic	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )$/;"	f
xQueueCreateSet	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xQueueCreateSet	/;"	d
xQueueCreateSet	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	QueueSetHandle_t xQueueCreateSet( const UBaseType_t uxEventQueueLength )$/;"	f
xQueueCreateStatic	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^	#define xQueueCreateStatic(/;"	d
xQueueGenericCreate	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xQueueGenericCreate	/;"	d
xQueueGenericCreate	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType )$/;"	f
xQueueGenericCreateStatic	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xQueueGenericCreateStatic	/;"	d
xQueueGenericCreateStatic	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, StaticQueue_t *pxStaticQueue, const uint8_t ucQueueType )$/;"	f
xQueueGenericReset	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xQueueGenericReset	/;"	d
xQueueGenericReset	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );$/;"	p	file:
xQueueGenericReset	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )$/;"	f
xQueueGenericSend	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xQueueGenericSend	/;"	d
xQueueGenericSend	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );$/;"	p	file:
xQueueGenericSend	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );$/;"	p	file:
xQueueGenericSend	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition )$/;"	f
xQueueGenericSendFromISR	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseType_t * const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition )$/;"	f
xQueueGetMutexHolder	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xQueueGetMutexHolder	/;"	d
xQueueGetMutexHolder	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	TaskHandle_t xQueueGetMutexHolder( QueueHandle_t xSemaphore )$/;"	f
xQueueGetMutexHolderFromISR	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	TaskHandle_t xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )$/;"	f
xQueueGiveFromISR	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )$/;"	f
xQueueGiveMutexRecursive	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xQueueGiveMutexRecursive	/;"	d
xQueueGiveMutexRecursive	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )$/;"	f
xQueueHandle	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define xQueueHandle /;"	d
xQueueIsQueueEmptyFromISR	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )$/;"	f
xQueueIsQueueFullFromISR	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )$/;"	f
xQueueOverwrite	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define xQueueOverwrite(/;"	d
xQueueOverwriteFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define xQueueOverwriteFromISR(/;"	d
xQueuePeek	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xQueuePeek	/;"	d
xQueuePeek	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )$/;"	f
xQueuePeekFromISR	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )$/;"	f
xQueueReceive	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xQueueReceive	/;"	d
xQueueReceive	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^		( void ) xQueueReceive( ( QueueHandle_t ) xQueueSet, &xReturn, xTicksToWait ); \/*lint !e961 Casting from one typedef to another is not redundant. *\/$/;"	p	file:
xQueueReceive	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )$/;"	f
xQueueReceiveFromISR	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^		( void ) xQueueReceiveFromISR( ( QueueHandle_t ) xQueueSet, &xReturn, NULL ); \/*lint !e961 Casting from one typedef to another is not redundant. *\/$/;"	p	file:
xQueueReceiveFromISR	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const pxHigherPriorityTaskWoken )$/;"	f
xQueueRegistry	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];$/;"	v
xQueueRegistryItem	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	} xQueueRegistryItem;$/;"	t	typeref:struct:QUEUE_REGISTRY_ITEM	file:
xQueueRemoveFromSet	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xQueueRemoveFromSet	/;"	d
xQueueRemoveFromSet	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	BaseType_t xQueueRemoveFromSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet )$/;"	f
xQueueReset	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^    (void)xQueueReset (hQueue);$/;"	p	file:
xQueueReset	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define xQueueReset(/;"	d
xQueueSelectFromSet	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xQueueSelectFromSet	/;"	d
xQueueSelectFromSet	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	QueueSetMemberHandle_t xQueueSelectFromSet( QueueSetHandle_t xQueueSet, TickType_t const xTicksToWait )$/;"	f
xQueueSelectFromSetFromISR	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	QueueSetMemberHandle_t xQueueSelectFromSetFromISR( QueueSetHandle_t xQueueSet )$/;"	f
xQueueSemaphoreTake	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xQueueSemaphoreTake	/;"	d
xQueueSemaphoreTake	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )$/;"	f
xQueueSend	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define xQueueSend(/;"	d
xQueueSendFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define xQueueSendFromISR(/;"	d
xQueueSendToBack	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define xQueueSendToBack(/;"	d
xQueueSendToBackFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define xQueueSendToBackFromISR(/;"	d
xQueueSendToFront	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define xQueueSendToFront(/;"	d
xQueueSendToFrontFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/queue.h	/^#define xQueueSendToFrontFromISR(/;"	d
xQueueSetHandle	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define xQueueSetHandle /;"	d
xQueueSetMemberHandle	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define xQueueSetMemberHandle /;"	d
xQueueSizeInBytes	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	size_t xQueueSizeInBytes;$/;"	l
xQueueTakeMutexRecursive	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xQueueTakeMutexRecursive	/;"	d
xQueueTakeMutexRecursive	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )$/;"	f
xReceivedLength	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xOriginalTail, xReceivedLength, xNextMessageLength;$/;"	l
xReceivedLength	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;$/;"	l
xRegions	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	MemoryRegion_t xRegions[ portNUM_CONFIGURABLE_REGIONS ];$/;"	m	struct:xTASK_PARAMETERS
xReloadTime	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^TickType_t xNextExpireTime, xReloadTime;$/;"	l
xRequiredSpace	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xRequiredSpace = xDataLengthBytes;$/;"	l
xResult	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^BaseType_t xResult;$/;"	l
xResult	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^BaseType_t xTimerListsWereSwitched, xResult;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^BaseType_t xReturn;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^		BaseType_t xReturn;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^	BaseType_t xReturn;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^	UBaseType_t xReturn;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	BaseType_t xReturn = pdFALSE;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	BaseType_t xReturn;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	QueueSetMemberHandle_t xReturn = NULL;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^BaseType_t xReturn = pdFALSE;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^BaseType_t xReturn;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	StreamBufferHandle_t xReturn;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	size_t xReturn;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^BaseType_t xReturn = pdFAIL;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^BaseType_t xReturn;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xReturn, xBytesAvailable, xOriginalTail;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xReturn, xSpace = 0;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xReturn, xSpace;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xReturn;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xReturn = pdFALSE;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xReturn = pdPASS;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xReturn;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TaskHandle_t xReturn;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TaskHookFunction_t xReturn;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TickType_t xReturn;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^BaseType_t xReturn;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^TickType_t xReturn;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	BaseType_t xReturn;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^BaseType_t xReturn = pdFAIL;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^BaseType_t xReturn;$/;"	l
xReturn	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^TickType_t xReturn;$/;"	l
xRunPrivileged	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		BaseType_t xRunPrivileged;$/;"	l
xSTATIC_EVENT_GROUP	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^typedef struct xSTATIC_EVENT_GROUP$/;"	s
xSTATIC_LIST	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^typedef struct xSTATIC_LIST$/;"	s
xSTATIC_LIST_ITEM	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^struct xSTATIC_LIST_ITEM$/;"	s
xSTATIC_MINI_LIST_ITEM	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^struct xSTATIC_MINI_LIST_ITEM$/;"	s
xSTATIC_QUEUE	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^typedef struct xSTATIC_QUEUE$/;"	s
xSTATIC_STREAM_BUFFER	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^typedef struct xSTATIC_STREAM_BUFFER$/;"	s
xSTATIC_TCB	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^typedef struct xSTATIC_TCB$/;"	s
xSTATIC_TIMER	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^typedef struct xSTATIC_TIMER$/;"	s
xSchedulerRunning	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;$/;"	v	file:
xSemaphore	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^		SemaphoreData_t xSemaphore; \/*< Data required exclusively when this structure is used as a semaphore. *\/$/;"	m	union:QueueDefinition::__anon1	file:
xSemaphoreCreateBinary	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^	#define xSemaphoreCreateBinary(/;"	d
xSemaphoreCreateBinaryStatic	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^	#define xSemaphoreCreateBinaryStatic(/;"	d
xSemaphoreCreateCounting	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^	#define xSemaphoreCreateCounting(/;"	d
xSemaphoreCreateCountingStatic	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^	#define xSemaphoreCreateCountingStatic(/;"	d
xSemaphoreCreateMutex	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^	#define xSemaphoreCreateMutex(/;"	d
xSemaphoreCreateMutexStatic	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^	#define xSemaphoreCreateMutexStatic(/;"	d
xSemaphoreCreateRecursiveMutex	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^	#define xSemaphoreCreateRecursiveMutex(/;"	d
xSemaphoreCreateRecursiveMutexStatic	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^	#define xSemaphoreCreateRecursiveMutexStatic(/;"	d
xSemaphoreGetMutexHolder	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^#define xSemaphoreGetMutexHolder(/;"	d
xSemaphoreGetMutexHolderFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^#define xSemaphoreGetMutexHolderFromISR(/;"	d
xSemaphoreGive	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^#define xSemaphoreGive(/;"	d
xSemaphoreGiveFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^#define xSemaphoreGiveFromISR(/;"	d
xSemaphoreGiveRecursive	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^	#define xSemaphoreGiveRecursive(/;"	d
xSemaphoreHandle	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define xSemaphoreHandle /;"	d
xSemaphoreTake	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^#define xSemaphoreTake(/;"	d
xSemaphoreTakeFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^#define xSemaphoreTakeFromISR(/;"	d
xSemaphoreTakeRecursive	../Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h	/^	#define xSemaphoreTakeRecursive(/;"	d
xShouldDelay	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;$/;"	l
xShouldWrite	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	BaseType_t xShouldWrite;$/;"	l
xSize	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^			volatile size_t xSize = sizeof( StaticEventGroup_t );$/;"	l
xSize	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^			volatile size_t xSize = sizeof( StaticQueue_t );$/;"	l
xSize	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^			volatile size_t xSize = sizeof( StaticStreamBuffer_t );$/;"	l
xSize	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^			volatile size_t xSize = sizeof( StaticTask_t );$/;"	l
xSize	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^			volatile size_t xSize = sizeof( StaticTimer_t );$/;"	l
xSizeInBytes	../Middlewares/Third_Party/FreeRTOS/Source/include/portable.h	/^	size_t xSizeInBytes;$/;"	m	struct:HeapRegion
xSpace	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xReturn, xSpace = 0;$/;"	l
xSpace	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xReturn, xSpace;$/;"	l
xSpace	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xSpace;$/;"	l
xStart	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^static BlockLink_t xStart, *pxEnd = NULL;$/;"	v	file:
xStateListItem	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	ListItem_t			xStateListItem;	\/*< The list that the state list item of a task is reference from denotes the state of that task (Ready, Blocked, Suspended ). *\/$/;"	m	struct:tskTaskControlBlock	file:
xStaticTimerQueue	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^				static StaticQueue_t xStaticTimerQueue; \/*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. *\/$/;"	l	file:
xStreamBufferBytesAvailable	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xStreamBufferBytesAvailable	/;"	d
xStreamBufferBytesAvailable	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xStreamBufferBytesAvailable( StreamBufferHandle_t xStreamBuffer )$/;"	f
xStreamBufferCreate	../Middlewares/Third_Party/FreeRTOS/Source/include/stream_buffer.h	/^#define xStreamBufferCreate(/;"	d
xStreamBufferCreateStatic	../Middlewares/Third_Party/FreeRTOS/Source/include/stream_buffer.h	/^#define xStreamBufferCreateStatic(/;"	d
xStreamBufferGenericCreate	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xStreamBufferGenericCreate	/;"	d
xStreamBufferGenericCreate	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	StreamBufferHandle_t xStreamBufferGenericCreate( size_t xBufferSizeBytes, size_t xTriggerLevelBytes, BaseType_t xIsMessageBuffer )$/;"	f
xStreamBufferGenericCreateStatic	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xStreamBufferGenericCreateStatic	/;"	d
xStreamBufferGenericCreateStatic	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	StreamBufferHandle_t xStreamBufferGenericCreateStatic( size_t xBufferSizeBytes,$/;"	f
xStreamBufferIsEmpty	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xStreamBufferIsEmpty	/;"	d
xStreamBufferIsEmpty	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^BaseType_t xStreamBufferIsEmpty( StreamBufferHandle_t xStreamBuffer )$/;"	f
xStreamBufferIsFull	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xStreamBufferIsFull	/;"	d
xStreamBufferIsFull	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^BaseType_t xStreamBufferIsFull( StreamBufferHandle_t xStreamBuffer )$/;"	f
xStreamBufferNextMessageLengthBytes	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xStreamBufferNextMessageLengthBytes	/;"	d
xStreamBufferNextMessageLengthBytes	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xStreamBufferNextMessageLengthBytes( StreamBufferHandle_t xStreamBuffer )$/;"	f
xStreamBufferReceive	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xStreamBufferReceive	/;"	d
xStreamBufferReceive	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xStreamBufferReceive( StreamBufferHandle_t xStreamBuffer,$/;"	f
xStreamBufferReceiveCompletedFromISR	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^BaseType_t xStreamBufferReceiveCompletedFromISR( StreamBufferHandle_t xStreamBuffer, BaseType_t *pxHigherPriorityTaskWoken )$/;"	f
xStreamBufferReceiveFromISR	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xStreamBufferReceiveFromISR( StreamBufferHandle_t xStreamBuffer,$/;"	f
xStreamBufferReset	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xStreamBufferReset	/;"	d
xStreamBufferReset	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^BaseType_t xStreamBufferReset( StreamBufferHandle_t xStreamBuffer )$/;"	f
xStreamBufferSend	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xStreamBufferSend	/;"	d
xStreamBufferSend	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xStreamBufferSend( StreamBufferHandle_t xStreamBuffer,$/;"	f
xStreamBufferSendCompletedFromISR	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^BaseType_t xStreamBufferSendCompletedFromISR( StreamBufferHandle_t xStreamBuffer, BaseType_t *pxHigherPriorityTaskWoken )$/;"	f
xStreamBufferSendFromISR	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xStreamBufferSendFromISR( StreamBufferHandle_t xStreamBuffer,$/;"	f
xStreamBufferSetTriggerLevel	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xStreamBufferSetTriggerLevel	/;"	d
xStreamBufferSetTriggerLevel	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^BaseType_t xStreamBufferSetTriggerLevel( StreamBufferHandle_t xStreamBuffer, size_t xTriggerLevel )$/;"	f
xStreamBufferSpacesAvailable	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xStreamBufferSpacesAvailable	/;"	d
xStreamBufferSpacesAvailable	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xStreamBufferSpacesAvailable( StreamBufferHandle_t xStreamBuffer )$/;"	f
xSuspendedTaskList	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	PRIVILEGED_DATA static List_t xSuspendedTaskList = { 0 };					\/*< Tasks that are currently suspended. *\/$/;"	v	file:
xSwitchRequired	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^BaseType_t xSwitchRequired = pdFALSE;$/;"	l
xTASK_PARAMETERS	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^typedef struct xTASK_PARAMETERS$/;"	s
xTASK_STATUS	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^typedef struct xTASK_STATUS$/;"	s
xTCB	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TCB_t *xTCB;$/;"	l
xTIMER	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^} xTIMER;$/;"	t	typeref:struct:tmrTimerControl	file:
xTIME_OUT	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^typedef struct xTIME_OUT$/;"	s
xTail	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	volatile size_t xTail;				\/* Index to the next item to read within the buffer. *\/$/;"	m	struct:StreamBufferDef_t	file:
xTail	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^size_t xTail;$/;"	l
xTaskAbortDelay	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTaskAbortDelay	/;"	d
xTaskAbortDelay	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )$/;"	f
xTaskCallApplicationTaskHook	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTaskCallApplicationTaskHook	/;"	d
xTaskCallApplicationTaskHook	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )$/;"	f
xTaskCheckForTimeOut	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTaskCheckForTimeOut	/;"	d
xTaskCheckForTimeOut	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )$/;"	f
xTaskCreate	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTaskCreate	/;"	d
xTaskCreate	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,$/;"	f
xTaskCreateRestricted	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTaskCreateRestricted	/;"	d
xTaskCreateRestricted	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *pxCreatedTask )$/;"	f
xTaskCreateRestrictedStatic	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *pxCreatedTask )$/;"	f
xTaskCreateStatic	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTaskCreateStatic	/;"	d
xTaskCreateStatic	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,$/;"	f
xTaskGenericNotify	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTaskGenericNotify	/;"	d
xTaskGenericNotify	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue )$/;"	f
xTaskGenericNotifyFromISR	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, uint32_t *pulPreviousNotificationValue, BaseType_t *pxHigherPriorityTaskWoken )$/;"	f
xTaskGetApplicationTaskTag	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTaskGetApplicationTaskTag	/;"	d
xTaskGetApplicationTaskTag	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )$/;"	f
xTaskGetApplicationTaskTagFromISR	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )$/;"	f
xTaskGetCurrentTaskHandle	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTaskGetCurrentTaskHandle	/;"	d
xTaskGetCurrentTaskHandle	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TaskHandle_t xTaskGetCurrentTaskHandle( void )$/;"	f
xTaskGetHandle	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTaskGetHandle	/;"	d
xTaskGetHandle	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) \/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	f
xTaskGetIdleRunTimeCounter	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTaskGetIdleRunTimeCounter	/;"	d
xTaskGetIdleRunTimeCounter	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TickType_t xTaskGetIdleRunTimeCounter( void )$/;"	f
xTaskGetIdleTaskHandle	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTaskGetIdleTaskHandle	/;"	d
xTaskGetIdleTaskHandle	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TaskHandle_t xTaskGetIdleTaskHandle( void )$/;"	f
xTaskGetSchedulerState	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTaskGetSchedulerState	/;"	d
xTaskGetSchedulerState	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xTaskGetSchedulerState( void )$/;"	f
xTaskGetTickCount	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTaskGetTickCount	/;"	d
xTaskGetTickCount	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^TickType_t xTaskGetTickCount( void )$/;"	f
xTaskGetTickCountFromISR	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^TickType_t xTaskGetTickCountFromISR( void )$/;"	f
xTaskHandle	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define xTaskHandle /;"	d
xTaskIncrementTick	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^BaseType_t xTaskIncrementTick( void )$/;"	f
xTaskNotify	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^      (void)xTaskNotify (hTask, flags, eSetBits);$/;"	p	file:
xTaskNotify	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define xTaskNotify(/;"	d
xTaskNotifyAndQuery	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define xTaskNotifyAndQuery(/;"	d
xTaskNotifyAndQueryFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define xTaskNotifyAndQueryFromISR(/;"	d
xTaskNotifyFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define xTaskNotifyFromISR(/;"	d
xTaskNotifyFromISR	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^			( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToReceive,$/;"	p	file:
xTaskNotifyFromISR	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^			( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToSend,$/;"	p	file:
xTaskNotifyGive	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^#define xTaskNotifyGive(/;"	d
xTaskNotifyStateClear	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTaskNotifyStateClear	/;"	d
xTaskNotifyStateClear	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask );$/;"	p
xTaskNotifyStateClear	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^					( void ) xTaskNotifyStateClear( NULL );$/;"	p	file:
xTaskNotifyStateClear	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^				( void ) xTaskNotifyStateClear( NULL );$/;"	p	file:
xTaskNotifyStateClear	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )$/;"	f
xTaskNotifyWait	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTaskNotifyWait	/;"	d
xTaskNotifyWait	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^			( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );$/;"	p	file:
xTaskNotifyWait	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, TickType_t xTicksToWait )$/;"	f
xTaskNumber	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	UBaseType_t xTaskNumber;		\/* A number unique to the task. *\/$/;"	m	struct:xTASK_STATUS
xTaskParameters	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define xTaskParameters /;"	d
xTaskPriorityDisinherit	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )$/;"	f
xTaskPriorityInherit	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )$/;"	f
xTaskRemoveFromEventList	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )$/;"	f
xTaskResumeAll	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^    (void)xTaskResumeAll();$/;"	p	file:
xTaskResumeAll	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^	( void ) xTaskResumeAll();$/;"	p	file:
xTaskResumeAll	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTaskResumeAll	/;"	d
xTaskResumeAll	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^				( void ) xTaskResumeAll();$/;"	p	file:
xTaskResumeAll	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^	( void ) xTaskResumeAll();$/;"	p	file:
xTaskResumeAll	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^				( void ) xTaskResumeAll();$/;"	p	file:
xTaskResumeAll	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^			( void ) xTaskResumeAll();$/;"	p	file:
xTaskResumeAll	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^						( void ) xTaskResumeAll();$/;"	p	file:
xTaskResumeAll	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^				( void ) xTaskResumeAll();$/;"	p	file:
xTaskResumeAll	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^		( void ) xTaskResumeAll();$/;"	p	file:
xTaskResumeAll	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^BaseType_t xTaskResumeAll( void )$/;"	f
xTaskResumeAll	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^				( void ) xTaskResumeAll();$/;"	p	file:
xTaskResumeAll	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^			( void ) xTaskResumeAll();$/;"	p	file:
xTaskResumeFromISR	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )$/;"	f
xTaskStatusType	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define xTaskStatusType	/;"	d
xTaskWaitingToReceive	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	volatile TaskHandle_t xTaskWaitingToReceive; \/* Holds the handle of a task waiting for data, or NULL if no tasks are waiting. *\/$/;"	m	struct:StreamBufferDef_t	file:
xTaskWaitingToSend	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	volatile TaskHandle_t xTaskWaitingToSend;	\/* Holds the handle of a task waiting to send data to a message buffer that is full. *\/$/;"	m	struct:StreamBufferDef_t	file:
xTasksWaitingForBits	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^	List_t xTasksWaitingForBits;		\/*< List of tasks waiting for a bit to be set. *\/$/;"	m	struct:EventGroupDef_t	file:
xTasksWaitingTermination	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA static List_t xTasksWaitingTermination = { 0 };				\/*< Tasks that have been deleted - but their memory not yet freed. *\/$/;"	v	file:
xTasksWaitingToReceive	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	List_t xTasksWaitingToReceive;	\/*< List of tasks that are blocked waiting to read from this queue.  Stored in priority order. *\/$/;"	m	struct:QueueDefinition	file:
xTasksWaitingToSend	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^	List_t xTasksWaitingToSend;		\/*< List of tasks that are blocked waiting to post onto this queue.  Stored in priority order. *\/$/;"	m	struct:QueueDefinition	file:
xTempNextMessageLength	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^configMESSAGE_BUFFER_LENGTH_TYPE xTempNextMessageLength;$/;"	l
xTempReturn	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^configMESSAGE_BUFFER_LENGTH_TYPE xTempReturn;$/;"	l
xTickCount	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT;$/;"	v	file:
xTicks	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^TickType_t xTicks;$/;"	l
xTimeNow	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^TickType_t xTimeNow;$/;"	l
xTimeOnEntering	../Middlewares/Third_Party/FreeRTOS/Source/include/task.h	/^	TickType_t xTimeOnEntering;$/;"	m	struct:xTIME_OUT
xTimeOut	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^TimeOut_t xTimeOut;$/;"	l
xTimeOut	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^TimeOut_t xTimeOut;$/;"	l
xTimeOutType	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define xTimeOutType /;"	d
xTimeToWake	../Middlewares/Third_Party/FreeRTOS/Source/croutine.c	/^TickType_t xTimeToWake;$/;"	l
xTimeToWake	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	TickType_t xTimeToWake;$/;"	l
xTimeToWake	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^TickType_t xTimeToWake;$/;"	l
xTimeoutOccurred	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^BaseType_t xTimeoutOccurred = pdFALSE;$/;"	l
xTimerChangePeriod	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^ #define xTimerChangePeriod(/;"	d
xTimerChangePeriodFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define xTimerChangePeriodFromISR(/;"	d
xTimerCreate	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTimerCreate	/;"	d
xTimerCreate	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			\/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	f
xTimerCreateStatic	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTimerCreateStatic	/;"	d
xTimerCreateStatic	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		\/*lint !e971 Unqualified char types are allowed for strings and single characters only. *\/$/;"	f
xTimerCreateTimerTask	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^BaseType_t xTimerCreateTimerTask( void )$/;"	f
xTimerDelete	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define xTimerDelete(/;"	d
xTimerGenericCommand	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTimerGenericCommand	/;"	d
xTimerGenericCommand	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_t xOptionalValue, BaseType_t * const pxHigherPriorityTaskWoken, const TickType_t xTicksToWait )$/;"	f
xTimerGetExpiryTime	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTimerGetExpiryTime	/;"	d
xTimerGetExpiryTime	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )$/;"	f
xTimerGetPeriod	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTimerGetPeriod	/;"	d
xTimerGetPeriod	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^TickType_t xTimerGetPeriod( TimerHandle_t xTimer )$/;"	f
xTimerGetTimerDaemonTaskHandle	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTimerGetTimerDaemonTaskHandle	/;"	d
xTimerGetTimerDaemonTaskHandle	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )$/;"	f
xTimerHandle	../Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h	/^	#define xTimerHandle /;"	d
xTimerIsTimerActive	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTimerIsTimerActive	/;"	d
xTimerIsTimerActive	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )$/;"	f
xTimerListItem	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	ListItem_t				xTimerListItem;		\/*<< Standard linked list item as used by all kernel features for event management. *\/$/;"	m	struct:tmrTimerControl	file:
xTimerListsWereSwitched	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^BaseType_t xTimerListsWereSwitched, xResult;$/;"	l
xTimerListsWereSwitched	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^BaseType_t xTimerListsWereSwitched;$/;"	l
xTimerParameters	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^		TimerParameter_t xTimerParameters;$/;"	m	union:tmrTimerQueueMessage::__anon2	file:
xTimerPendFunctionCall	../Middlewares/Third_Party/FreeRTOS/Source/include/mpu_wrappers.h	/^		#define xTimerPendFunctionCall	/;"	d
xTimerPendFunctionCall	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t ulParameter2, TickType_t xTicksToWait )$/;"	f
xTimerPendFunctionCallFromISR	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t ulParameter2, BaseType_t *pxHigherPriorityTaskWoken )$/;"	f
xTimerPeriodInTicks	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^	TickType_t				xTimerPeriodInTicks;\/*<< How quickly and often the timer expires. *\/$/;"	m	struct:tmrTimerControl	file:
xTimerQueue	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;$/;"	v	file:
xTimerReset	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define xTimerReset(/;"	d
xTimerResetFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define xTimerResetFromISR(/;"	d
xTimerStart	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define xTimerStart(/;"	d
xTimerStartFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define xTimerStartFromISR(/;"	d
xTimerStop	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define xTimerStop(/;"	d
xTimerStopFromISR	../Middlewares/Third_Party/FreeRTOS/Source/include/timers.h	/^#define xTimerStopFromISR(/;"	d
xTimerTaskHandle	../Middlewares/Third_Party/FreeRTOS/Source/timers.c	/^PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;$/;"	v	file:
xTotalHeapSize	../Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c	/^size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;$/;"	l
xTriggerLevelBytes	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^	size_t xTriggerLevelBytes;			\/* The number of bytes that must be in the stream buffer before a task that is waiting for data is unblocked. *\/$/;"	m	struct:StreamBufferDef_t	file:
xValueOfInsertion	../Middlewares/Third_Party/FreeRTOS/Source/list.c	/^const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;$/;"	l
xWaitConditionMet	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^BaseType_t xWaitConditionMet = pdFALSE;$/;"	l
xWaitConditionMet	../Middlewares/Third_Party/FreeRTOS/Source/event_groups.c	/^BaseType_t xWaitConditionMet, xAlreadyYielded;$/;"	l
xWriteValue	../Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c	/^		const BaseType_t xWriteValue = 0x55;$/;"	l
xYieldPending	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;$/;"	v	file:
xYieldRequired	../Middlewares/Third_Party/FreeRTOS/Source/queue.c	/^BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;$/;"	l
xYieldRequired	../Middlewares/Third_Party/FreeRTOS/Source/tasks.c	/^	BaseType_t xYieldRequired = pdFALSE;$/;"	l
yield	../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c	/^  BaseType_t yield;$/;"	l
